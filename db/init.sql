--
-- PostgreSQL database dump
--

-- Dumped from database version 17.5
-- Dumped by pg_dump version 17.4

-- Started on 2025-06-18 17:43:10

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 2 (class 3079 OID 25093)
-- Name: pg_trgm; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pg_trgm WITH SCHEMA public;


--
-- TOC entry 5263 (class 0 OID 0)
-- Dependencies: 2
-- Name: EXTENSION pg_trgm; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pg_trgm IS 'text similarity measurement and index searching based on trigrams';


--
-- TOC entry 3 (class 3079 OID 25190)
-- Name: vector; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS vector WITH SCHEMA public;


--
-- TOC entry 5264 (class 0 OID 0)
-- Dependencies: 3
-- Name: EXTENSION vector; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION vector IS 'vector data type and ivfflat and hnsw access methods';


--
-- TOC entry 249 (class 1255 OID 25518)
-- Name: cosine_similarity(double precision[], double precision[]); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.cosine_similarity(vec1 double precision[], vec2 double precision[]) RETURNS double precision
    LANGUAGE plpgsql
    AS $$
DECLARE
  dot_product double precision := 0;
  norm_vec1 double precision := 0;
  norm_vec2 double precision := 0;
  i integer;
  len integer;
BEGIN
  IF vec1 IS NULL OR vec2 IS NULL THEN
    RETURN NULL;
  END IF;

  len := array_length(vec1, 1);
  IF len IS NULL OR len = 0 OR len != array_length(vec2, 1) THEN
    RETURN NULL;
  END IF;

  FOR i IN 1..len LOOP
    dot_product := dot_product + vec1[i] * vec2[i];
    norm_vec1 := norm_vec1 + vec1[i]^2;
    norm_vec2 := norm_vec2 + vec2[i]^2;
  END LOOP;

  IF norm_vec1 = 0 OR norm_vec2 = 0 THEN
    RETURN NULL;
  END IF;

  RETURN dot_product / (sqrt(norm_vec1) * sqrt(norm_vec2));
END;
$$;


ALTER FUNCTION public.cosine_similarity(vec1 double precision[], vec2 double precision[]) OWNER TO postgres;

--
-- TOC entry 320 (class 1255 OID 25603)
-- Name: generate_master_ids(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.generate_master_ids() RETURNS trigger
    LANGUAGE plpgsql
    AS $_$
DECLARE
    max_testcase_num INT;
    max_scenario_num INT;

    test_suite_name TEXT;
BEGIN
    -- ========= testcase_id: TC_001, TC_002 =========
    SELECT MAX(CAST(SUBSTRING(testcase_id FROM 'TC_(\d+)$') AS INTEGER))
    INTO max_testcase_num
    FROM master_table
    WHERE testcase_id ~ '^TC_\d+$';

    IF max_testcase_num IS NULL THEN
        max_testcase_num := 0;
    END IF;

    NEW.testcase_id := 'TC_' || LPAD((max_testcase_num + 1)::TEXT, 3, '0');

    -- ========= test_scenario_id: TS_Models_001, TS_Models_002 =========
    test_suite_name := NEW.test_suite;

    SELECT MAX(CAST(SUBSTRING(test_scenario_id FROM 'TS_' || test_suite_name || '_(\d+)$') AS INTEGER))
    INTO max_scenario_num
    FROM master_table
    WHERE test_scenario_id ~ ('^TS_' || test_suite_name || '_\d+$');

    IF max_scenario_num IS NULL THEN
        max_scenario_num := 0;
    END IF;

    NEW.test_scenario_id := 'TS_' || test_suite_name || '_' || LPAD((max_scenario_num + 1)::TEXT, 3, '0');

    RETURN NEW;
END;
$_$;


ALTER FUNCTION public.generate_master_ids() OWNER TO postgres;

--
-- TOC entry 333 (class 1255 OID 25602)
-- Name: generate_pending_ids(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.generate_pending_ids() RETURNS trigger
    LANGUAGE plpgsql
    AS $_$
DECLARE
    max_testcase_num INT;
    max_scenario_num INT;
    suite TEXT;
BEGIN
    -- Generate testcase_id: TC_001, TC_002...
    SELECT MAX(CAST(SUBSTRING(testcase_id FROM 'TC_(\d+)$') AS INTEGER))
    INTO max_testcase_num
    FROM pending_requests
    WHERE testcase_id ~ '^TC_\d+$';

    IF max_testcase_num IS NULL THEN
        max_testcase_num := 0;
    END IF;

    NEW.testcase_id := 'TC_' || LPAD((max_testcase_num + 1)::TEXT, 3, '0');

    -- Generate test_scenario_id: TS_<suite>_001
    suite := NEW.test_suite;

    SELECT MAX(CAST(SUBSTRING(test_scenario_id FROM 'TS_' || suite || '_(\d+)$') AS INTEGER))
    INTO max_scenario_num
    FROM pending_requests
    WHERE test_scenario_id ~ ('^TS_' || suite || '_\d+$');

    IF max_scenario_num IS NULL THEN
        max_scenario_num := 0;
    END IF;

    NEW.test_scenario_id := 'TS_' || suite || '_' || LPAD((max_scenario_num + 1)::TEXT, 3, '0');

    RETURN NEW;
END;
$_$;


ALTER FUNCTION public.generate_pending_ids() OWNER TO postgres;

--
-- TOC entry 301 (class 1255 OID 25542)
-- Name: insert_into_master_table(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.insert_into_master_table() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
  INSERT INTO master_table (
    test_scenario,
    testcase_description,
    prerequisite,
    steps_to_reproduce,
    expected_result,
    actual_result,
    test_result,
    status,
    comments,
    test_suite
  )
  VALUES (
    NEW.test_scenario,
    NEW.testcase_description,
    NEW.prerequisite,
    NEW.steps_to_reproduce,
    NEW.expected_result,
    NEW.actual_result,
    NEW.test_result,
    NEW.status,
    NEW.comments,
    NEW.test_suite
  );
  RETURN NEW;
END;
$$;


ALTER FUNCTION public.insert_into_master_table() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 228 (class 1259 OID 25175)
-- Name: bugs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.bugs (
    id integer NOT NULL,
    title text NOT NULL,
    description text,
    severity character varying(20),
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    embedding double precision[]
);


ALTER TABLE public.bugs OWNER TO postgres;

--
-- TOC entry 227 (class 1259 OID 25174)
-- Name: bugs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.bugs_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.bugs_id_seq OWNER TO postgres;

--
-- TOC entry 5265 (class 0 OID 0)
-- Dependencies: 227
-- Name: bugs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.bugs_id_seq OWNED BY public.bugs.id;


--
-- TOC entry 229 (class 1259 OID 25553)
-- Name: master_table_s_no_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.master_table_s_no_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.master_table_s_no_seq OWNER TO postgres;

--
-- TOC entry 221 (class 1259 OID 24657)
-- Name: master_table; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.master_table (
    s_no integer DEFAULT nextval('public.master_table_s_no_seq'::regclass) NOT NULL,
    test_scenario_id character varying(100),
    test_scenario text,
    testcase_id character varying(100),
    testcase_description text,
    prerequisite text,
    steps_to_reproduce text,
    expected_result text,
    actual_result text,
    test_result text DEFAULT 'not-tested'::text,
    status text DEFAULT 'new'::text,
    comments text,
    test_suite character varying(100)
);


ALTER TABLE public.master_table OWNER TO postgres;

--
-- TOC entry 222 (class 1259 OID 24664)
-- Name: master_table_s_no_seq1; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.master_table_s_no_seq1
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.master_table_s_no_seq1 OWNER TO postgres;

--
-- TOC entry 5266 (class 0 OID 0)
-- Dependencies: 222
-- Name: master_table_s_no_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.master_table_s_no_seq1 OWNED BY public.master_table.s_no;


--
-- TOC entry 231 (class 1259 OID 25558)
-- Name: pending_requests; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.pending_requests (
    s_no integer NOT NULL,
    test_scenario_id text,
    testcase_id text,
    test_scenario text,
    testcase_description text,
    prerequisite text,
    steps_to_reproduce text,
    expected_result text,
    actual_result text,
    test_result text DEFAULT 'not-tested'::text,
    status text DEFAULT 'new'::text,
    comments text,
    test_suite text,
    submitted_by text,
    submitted_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    request_status text DEFAULT 'pending'::text
);


ALTER TABLE public.pending_requests OWNER TO postgres;

--
-- TOC entry 230 (class 1259 OID 25557)
-- Name: pending_requests_s_no_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.pending_requests_s_no_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.pending_requests_s_no_seq OWNER TO postgres;

--
-- TOC entry 5267 (class 0 OID 0)
-- Dependencies: 230
-- Name: pending_requests_s_no_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.pending_requests_s_no_seq OWNED BY public.pending_requests.s_no;


--
-- TOC entry 224 (class 1259 OID 24977)
-- Name: testplan_registry; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.testplan_registry (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    test_suite text[] NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    assigned_users text[]
);


ALTER TABLE public.testplan_registry OWNER TO postgres;

--
-- TOC entry 223 (class 1259 OID 24976)
-- Name: testplan_registry_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.testplan_registry_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.testplan_registry_id_seq OWNER TO postgres;

--
-- TOC entry 5268 (class 0 OID 0)
-- Dependencies: 223
-- Name: testplan_registry_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.testplan_registry_id_seq OWNED BY public.testplan_registry.id;


--
-- TOC entry 226 (class 1259 OID 24987)
-- Name: testplans; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.testplans (
    id integer NOT NULL,
    registry_id integer NOT NULL,
    test_scenario_id character varying(100),
    test_scenario text,
    testcase_id character varying(100),
    testcase_description text,
    prerequisite text,
    steps_to_reproduce text,
    expected_result text,
    actual_result text,
    test_result text,
    status character varying(50),
    comments text,
    test_suite text,
    executed_by character varying(255) DEFAULT ''::character varying,
    bug_id integer,
    bug_status text
);


ALTER TABLE public.testplans OWNER TO postgres;

--
-- TOC entry 225 (class 1259 OID 24986)
-- Name: testplans_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.testplans_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.testplans_id_seq OWNER TO postgres;

--
-- TOC entry 5269 (class 0 OID 0)
-- Dependencies: 225
-- Name: testplans_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.testplans_id_seq OWNED BY public.testplans.id;


--
-- TOC entry 220 (class 1259 OID 24620)
-- Name: users_emp_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_emp_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.users_emp_id_seq OWNER TO postgres;

--
-- TOC entry 219 (class 1259 OID 24616)
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    emp_id integer DEFAULT nextval('public.users_emp_id_seq'::regclass) NOT NULL,
    username character varying(50) NOT NULL,
    password character varying(255) NOT NULL,
    email character varying(100) NOT NULL,
    role character varying(10) NOT NULL,
    CONSTRAINT users_role_check CHECK (((role)::text = ANY (ARRAY[('admin'::character varying)::text, ('read'::character varying)::text, ('write'::character varying)::text])))
);


ALTER TABLE public.users OWNER TO postgres;

--
-- TOC entry 5066 (class 2604 OID 25178)
-- Name: bugs id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bugs ALTER COLUMN id SET DEFAULT nextval('public.bugs_id_seq'::regclass);


--
-- TOC entry 5068 (class 2604 OID 25561)
-- Name: pending_requests s_no; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pending_requests ALTER COLUMN s_no SET DEFAULT nextval('public.pending_requests_s_no_seq'::regclass);


--
-- TOC entry 5062 (class 2604 OID 24980)
-- Name: testplan_registry id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.testplan_registry ALTER COLUMN id SET DEFAULT nextval('public.testplan_registry_id_seq'::regclass);


--
-- TOC entry 5064 (class 2604 OID 24990)
-- Name: testplans id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.testplans ALTER COLUMN id SET DEFAULT nextval('public.testplans_id_seq'::regclass);


--
-- TOC entry 5254 (class 0 OID 25175)
-- Dependencies: 228
-- Data for Name: bugs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.bugs (id, title, description, severity, created_at, embedding) FROM stdin;
17	Login button not working on mobile	When clicked on mobile devices, the login button does not trigger any action.	high	2025-06-16 18:47:06.623391	{-0.01933208853006363,0.003382440423592925,0.06831095367670059,-0.09312663227319717,0.022432848811149597,-0.03393629565834999,-0.04936319962143898,-0.07357492297887802,-0.018896160647273064,0.04554731026291847,0.05421324074268341,0.03929875046014786,0.0013729074271395802,0.11048667877912521,0.053944990038871765,0.0054167951457202435,-0.1066298559308052,-0.010061043314635754,-0.05149909108877182,0.02574435994029045,0.02460997924208641,-0.022179894149303436,0.03064553625881672,-0.02314574457705021,0.0498674251139164,-0.1535865068435669,-0.06917113065719604,-0.007741566747426987,-0.019328542053699493,0.010060956701636314,-0.01751338504254818,0.06946244090795517,0.007538668345659971,-0.05077335610985756,-0.08126096427440643,-0.06610319763422012,-0.014949018135666847,-0.016198884695768356,-0.012959127314388752,-0.007567108143121004,-0.11234848946332932,0.05636819452047348,0.11021649837493896,0.05515238270163536,0.001972610829398036,0.006407946813851595,-0.019007012248039246,0.04463966563344002,0.018257439136505127,0.01911834068596363,0.035343751311302185,-0.0030192628037184477,0.04238700866699219,-0.021313682198524475,-0.11116322129964828,0.008642912842333317,-0.017493147403001785,0.06424074620008469,0.12100062519311905,0.006708819419145584,0.04581768438220024,-0.02943664789199829,-0.006805890239775181,0.03170684352517128,0.0407685749232769,-0.007991421967744827,-0.047404006123542786,-0.08378161489963531,-0.05172092840075493,-0.01935214176774025,-0.0009758693631738424,-0.08308926969766617,-0.005112550221383572,-0.025198983028531075,0.042906858026981354,6.112388655310497e-05,0.013281113468110561,0.044940266758203506,-0.015074595808982849,0.04558764025568962,0.022508660331368446,-0.03223377838730812,-0.009760301560163498,0.012174660339951515,0.04778050631284714,0.008654970675706863,-0.047796864062547684,0.04253475368022919,-0.10032128542661667,-0.015785645693540573,0.0784873217344284,0.09965161979198456,-0.016930358484387398,-0.03881683573126793,0.0015374773647636175,-0.05224187672138214,-0.07088255882263184,0.012738514691591263,-0.06422658264636993,0.044230200350284576,0.08208726346492767,0.07182455062866211,0.03674878180027008,-0.00020995277736801654,0.05848388001322746,0.009007786400616169,0.05723322555422783,-0.03207104280591011,-0.03825785219669342,-0.008803368546068668,0.04889288917183876,0.04449354484677315,-0.0575278140604496,0.05580683425068855,0.024248184636235237,-0.027331797406077385,0.02912088669836521,0.013701025396585464,0.015300268307328224,0.022862186655402184,-0.03799625113606453,-0.07994034141302109,-0.13179714977741241,-0.09054882079362869,0.029745347797870636,0.01826140470802784,0.011002146638929844,-6.4043944437072206e-34,-0.027231503278017044,0.023810312151908875,-0.01877901889383793,-0.03661695122718811,0.0017043616389855742,-0.011914086528122425,0.08626703917980194,-0.03426048159599304,-0.045917969197034836,0.044797610491514206,-0.0067094177938997746,-0.03401798754930496,0.009958776645362377,-0.05188971012830734,0.016921110451221466,-0.02524934895336628,-0.02119545079767704,-0.037808533757925034,-0.05390235409140587,0.0024192705750465393,0.07514550536870956,-0.005601841025054455,0.06623822450637817,-0.018384454771876335,-0.06809697300195694,0.07605788856744766,0.07832027971744537,-0.023410284891724586,0.006302899681031704,-0.021291092038154602,0.02306671068072319,-0.016467485576868057,0.04749374836683273,0.0004234992084093392,0.02313879318535328,0.0009456964326091111,0.08044882863759995,-0.02620868757367134,0.06596528738737106,-0.1210639625787735,-0.07768886536359787,-0.040316734462976456,-0.009591956622898579,0.0451715923845768,-0.04236894100904465,0.026902135461568832,-0.014946619048714638,-0.05525190755724907,0.03504018858075142,-0.05033202841877937,-0.060137901455163956,-0.05429143086075783,-0.06202491745352745,-0.06276731938123703,0.046931877732276917,0.03947506099939346,-0.05573713034391403,0.023367194458842278,-0.1591884195804596,-0.056985437870025635,0.04764598608016968,-0.06674914807081223,-0.03330960497260094,-0.03233012184500694,-0.03155295178294182,-0.005195403005927801,0.07871273905038834,-0.021888596937060356,0.06911972910165787,-0.050829846411943436,0.04501187428832054,-0.06880456209182739,0.047138750553131104,0.017776479944586754,-0.0253185722976923,0.09595701843500137,0.05116129666566849,0.02377350628376007,-0.006823102943599224,0.08125407248735428,-0.0008875069324858487,-0.024698469787836075,-0.03931871056556702,0.034268658608198166,0.009663484990596771,0.017564909532666206,-0.06203416734933853,-0.06193802133202553,0.001783778890967369,0.055469561368227005,-0.04893174767494202,0.07134666293859482,0.09311964362859726,0.012410818599164486,-0.040130529552698135,-7.840447219293845e-34,-0.06556154042482376,0.03181489184498787,0.0046372911892831326,-0.02659258432686329,0.04997643083333969,0.01475487556308508,0.02759387530386448,0.034345004707574844,0.02503662370145321,-0.03997122868895531,0.08480536192655563,0.038072459399700165,0.035292886197566986,0.007926362566649914,0.018020445480942726,0.13752387464046478,0.013760058209300041,0.023716820403933525,-0.024486465379595757,0.0025223013944923878,-0.0043660541996359825,0.08529476821422577,-0.07160476595163345,0.07815136760473251,0.05118180438876152,-0.011323277838528156,0.0015747261932119727,-0.005338671617209911,0.0613025426864624,-0.016074031591415405,0.06388317048549652,0.017045477405190468,-0.03438025712966919,0.06902118027210236,0.040628399699926376,0.04781642556190491,-0.007496506907045841,0.045374657958745956,-0.06556566059589386,-0.02303379215300083,-0.00905393436551094,0.01428147591650486,0.04720901697874069,-0.06400646269321442,0.04452401399612427,-0.04446720704436302,0.06768915802240372,-0.06839568167924881,-0.0008656692807562649,0.038854312151670456,0.04364590346813202,0.01755097135901451,0.06580032408237457,-0.11952607333660126,-0.035473089665174484,0.06938473135232925,-0.05360807478427887,-0.10350093245506287,-0.04520682618021965,-0.044279906898736954,0.04006196931004524,-0.029131300747394562,0.010939058847725391,0.05975114181637764,-0.0038506051059812307,0.021802442148327827,0.07655449211597443,0.09097590297460556,0.030836043879389763,0.006571062374860048,-0.027107758447527885,-0.00919774267822504,0.12022889405488968,0.02238178811967373,0.002648421097546816,0.009671862237155437,-0.03438028693199158,-0.023485537618398666,-0.017840413376688957,-0.017995299771428108,0.05398381128907204,0.0016583901597186923,-0.14628785848617554,-0.03471355512738228,0.03458775579929352,-0.04024175554513931,0.001972388941794634,0.024252865463495255,-0.00035293784458190203,0.004734651185572147,-0.09474852681159973,0.013266603462398052,0.02775423228740692,-0.008859160356223583,0.03318151831626892,-1.345506728256396e-08,0.03984908387064934,0.06642792373895645,0.06256318092346191,-0.08906494081020355,-0.014289114624261856,0.010138118639588356,0.006523976102471352,-0.047261059284210205,-0.08378909528255463,-0.04264943301677704,-0.0866747498512268,0.06510834395885468,0.009373707696795464,0.033326875418424606,-0.10379021614789963,-0.04526285454630852,-0.036432649940252304,0.0603300966322422,0.01520519983023405,0.04633859172463417,0.0008777018520049751,-0.02093021385371685,-0.0576515831053257,0.0024204759392887354,-0.014334938488900661,0.037704676389694214,-0.05378640443086624,0.07752491533756256,0.03983664885163307,0.011373341083526611,0.028141554445028305,0.06642758101224899,0.010028908960521221,-0.16560102999210358,-0.0603957436978817,0.019255058839917183,0.06251348555088043,-0.04306464642286301,-0.011603737249970436,-0.1412876844406128,0.028875183314085007,0.012146644294261932,0.09015843272209167,0.02441752329468727,-0.0641833171248436,-0.02368435449898243,0.035886574536561966,0.07915724068880081,0.007328965235501528,0.004005815833806992,-0.031211715191602707,0.009362784214317799,-0.020274367183446884,-0.010129624046385288,0.08842065930366516,-0.06304334849119186,0.006769231520593166,-0.026976432651281357,0.028727538883686066,-0.08106134086847305,0.044799525290727615,-0.023124337196350098,0.01713540591299534,-0.04493173584342003}
18	Dashboard layout breaks on small screens	The dashboard components overlap on smaller screen sizes.	medium	2025-06-16 18:47:06.635722	{0.006857214029878378,0.06676025688648224,0.04318879917263985,-0.061175841838121414,0.0655239149928093,-0.015234158374369144,-0.06317497789859772,0.04193030297756195,-0.007689991965889931,0.006270832847803831,0.0037258814554661512,0.04997994005680084,-0.0024381414987146854,0.016607118770480156,0.009797935374081135,-0.07925429940223694,-0.009687880985438824,-0.025496551766991615,-0.060672394931316376,0.016167955473065376,-0.1470750868320465,-0.04760944843292236,-0.06724879145622253,0.010595858097076416,-0.0187832098454237,0.10371292382478714,-0.04014715179800987,-0.02287178300321102,-0.009436409920454025,-0.08171974122524261,0.007218998856842518,0.03924562409520149,-0.016664579510688782,-0.022470640018582344,-0.02758704125881195,0.001969787757843733,-0.01873217523097992,0.023343602195382118,-0.03269157186150551,-0.07751384377479553,-0.08624069392681122,0.044116415083408356,0.0344853550195694,0.012645530514419079,-0.021114617586135864,-0.10289303213357925,-0.0031528074759989977,-0.01659783534705639,0.046416230499744415,-0.048345159739255905,-0.08408939838409424,0.08950348198413849,0.03507540002465248,0.008945218287408352,-0.050643209367990494,-0.04155713692307472,-0.017267223447561264,0.06058590114116669,0.06555168330669403,0.11214601248502731,0.06946250796318054,0.03005198948085308,0.06020626798272133,0.0420914851129055,0.03432092443108559,0.008450401946902275,-0.03467802703380585,-0.0732056275010109,-0.0579383559525013,0.1238967701792717,-0.0006589401164092124,-0.06302383542060852,-0.05076923593878746,-0.05203309282660484,0.03931005671620369,-0.030153699219226837,-0.055955663323402405,-0.027857840061187744,-0.03379388153553009,-0.0005035518552176654,-0.05613462254405022,0.06901875138282776,-0.02853400632739067,0.027505505830049515,0.02604880928993225,-0.0745227113366127,0.06796921044588089,-0.12296770513057709,-0.038186460733413696,-0.035952527076005936,-0.021937906742095947,-0.02228054776787758,0.011211459524929523,0.03127805516123772,-0.06786032021045685,-0.0913451611995697,-0.008773382753133774,-0.04445880651473999,-0.006572037935256958,0.09499979019165039,-0.019808992743492126,0.013815898448228836,0.12024400383234024,0.11170113831758499,0.011629919521510601,-0.008757940493524075,-0.03778081014752388,0.025334017351269722,-0.02319353260099888,0.053032517433166504,0.02959642931818962,0.0806434378027916,-0.07916582375764847,0.1077803447842598,-0.027995774522423744,-0.054121602326631546,-0.04157126694917679,-0.09049589931964874,-0.06633473932743073,0.0875851958990097,0.025102850049734116,0.0401962548494339,-0.0900307148694992,0.007771057542413473,0.060401033610105515,0.07621297985315323,0.0023826302494853735,8.525624509288925e-34,-0.06478378176689148,-0.0077746412716805935,-0.051731523126363754,0.08762460947036743,0.09987927228212357,0.114812932908535,-0.053848423063755035,0.08347323536872864,0.0855504646897316,0.005798638798296452,0.10075034201145172,0.052857108414173126,0.019006194546818733,-0.03594975173473358,0.06285436451435089,-0.005254810675978661,0.019220134243369102,0.07735344022512436,-0.10186467319726944,-0.026147283613681793,-0.002042259555310011,-0.033054765313863754,-0.005510469898581505,0.0027580305468291044,-0.03338058665394783,0.05828654393553734,0.03479795902967453,0.031083932146430016,-0.09924452006816864,0.012672912329435349,-0.03501587733626366,-0.041466109454631805,0.13127703964710236,-0.014724086970090866,0.0019190493039786816,-0.024349184706807137,0.000999719137325883,-0.04276741296052933,0.030047792941331863,0.027670888230204582,-0.14958137273788452,0.010844502598047256,0.041938845068216324,0.04382018744945526,-0.032926540821790695,0.01963047869503498,0.04352216795086861,0.04549785330891609,0.00044901217916049063,-0.0751274898648262,-0.02989146113395691,-0.036213312298059464,0.04721081256866455,-0.05237587168812752,0.0014618603745475411,-0.025949833914637566,0.023456105962395668,-0.01158231496810913,0.017528554424643517,0.00893468875437975,-0.019559485837817192,-0.0068380567245185375,-0.12203308939933777,-0.03378146141767502,0.0349465012550354,0.004828360863029957,0.028727658092975616,0.085921511054039,-0.02771740034222603,-0.07370883226394653,0.012713903561234474,0.023310715332627296,0.08274197578430176,0.09370448440313339,-0.005583010148257017,-0.009671997278928757,0.03900068998336792,0.0017133016372099519,-0.059642497450113297,0.0448945127427578,-0.008444379083812237,-0.02410953864455223,0.05417005717754364,-0.022832999005913734,-0.012665379792451859,-0.0748228058218956,0.01741785556077957,0.04235261306166649,-0.002421332523226738,0.0310074333101511,-0.046574484556913376,-0.04011464864015579,0.024700669571757317,-0.013970213942229748,0.011885087005794048,-1.4839678538715607e-33,-0.05305996909737587,-0.016165345907211304,0.022071752697229385,-0.08538073301315308,0.0779932364821434,0.04914885386824608,0.04304035007953644,0.1266222894191742,0.026645828038454056,-0.009197226725518703,-0.02936532534658909,-0.027101870626211166,-0.06557805836200714,0.031025493517518044,-0.056685805320739746,0.02735217846930027,0.04420456290245056,-0.014941642992198467,-0.012875854969024658,-0.0019521410576999187,-0.024170586839318275,0.0077703604474663734,-0.054909322410821915,0.07108169794082642,0.07609298825263977,0.029071196913719177,0.01644156686961651,0.005675017833709717,-0.023868558928370476,0.12764619290828705,-0.010655498132109642,-0.06380526721477509,-0.00548056373372674,0.06598550081253052,0.10518678277730942,0.030749693512916565,-0.11399377137422562,0.014112833887338638,-0.08022844046354294,-0.009911184199154377,-0.07231082767248154,0.029484400525689125,0.041012510657310486,0.0429053008556366,0.04084741324186325,-0.015117742121219635,0.032071925699710846,0.0094299940392375,-0.11413116753101349,-0.024693146347999573,0.07514434307813644,0.018286103382706642,0.057880330830812454,-0.031759168952703476,-0.034843701869249344,-0.016756847500801086,-0.031867846846580505,0.04453122243285179,-0.03154975548386574,-0.014195160008966923,0.063429094851017,0.05003350228071213,-0.04135352373123169,-0.027084967121481895,0.03024708665907383,0.0012801490956917405,0.01426791213452816,0.0015250948490574956,0.0008450110326521099,0.049117688089609146,0.02366589941084385,-0.04508133977651596,0.003043045522645116,-0.0823463574051857,-0.00030122269527055323,0.053077034652233124,0.0005436867941170931,0.028729816898703575,0.038631439208984375,0.042185794562101364,0.03282948583364487,-0.026949163526296616,-0.008525321260094643,-0.020122021436691284,0.03092164173722267,0.015791378915309906,-0.025491416454315186,0.037482768297195435,-0.022639354690909386,0.09232224524021149,-0.040226731449365616,0.01861281506717205,0.07369376718997955,-0.0023131135385483503,0.01473406795412302,-1.3580314650596392e-08,0.04770800098776817,-0.033038582652807236,-0.0030934447422623634,0.1083025336265564,0.040400873869657516,-0.027975428849458694,-0.010379031300544739,-0.017068171873688698,-0.04342874884605408,0.03393157571554184,-0.07278058677911758,-0.03217856585979462,-0.03488001599907875,0.005912240594625473,-0.026737099513411522,-0.043417513370513916,-0.03926314786076546,0.0902947187423706,-0.03874054551124573,-0.042295146733522415,-0.062469106167554855,0.016326338052749634,0.08672593533992767,-0.0374859943985939,0.024080317467451096,-0.06686978787183762,-0.013688365928828716,-0.009525628760457039,-0.0027785145211964846,-0.09467243403196335,-0.047419000416994095,-0.020633617416024208,-0.0047952295280992985,0.009337877854704857,0.01170108187943697,-0.07047516852617264,0.01675768941640854,0.03398561105132103,0.038768135011196136,-0.09400894492864609,-0.018148409202694893,-0.04420512914657593,0.01074149552732706,0.010139811784029007,-0.02189815416932106,0.04387064650654793,0.047581836581230164,0.07181315124034882,0.0314505510032177,-0.041373226791620255,-0.043952781707048416,-0.05014332756400108,0.018174847587943077,-0.059385329484939575,-0.017652282491326332,-0.0653243213891983,0.025052718818187714,0.055966950953006744,0.07951594144105911,-0.04004301130771637,-0.0806688740849495,0.08259953558444977,-0.024989280849695206,0.01771712303161621}
19	Password reset email not sent	User does not receive a reset email after requesting it.	high	2025-06-16 18:47:06.639644	{0.02120758779346943,-0.03478366509079933,0.04168296232819557,-0.006350390613079071,-0.011538450606167316,-0.03328655660152435,0.05467190220952034,-0.04385353624820709,0.07506585866212845,0.02682117186486721,-0.007747624069452286,0.06486216932535172,0.02741027995944023,0.023386122658848763,-0.07437863945960999,0.07162372767925262,-0.059624284505844116,-0.0061753434129059315,-0.03562479093670845,-0.06322307884693146,-0.03219107910990715,-0.04477141797542572,0.028232214972376823,-0.023931782692670822,0.007636363618075848,-0.023347411304712296,-0.03838358819484711,0.029016966000199318,-0.1496911197900772,0.014538146555423737,-0.003772405907511711,0.0250131543725729,0.007717873435467482,-0.005753347184509039,0.003492597257718444,0.06115126609802246,-0.024394458159804344,0.041495949029922485,-0.02289609983563423,-0.05940336734056473,-0.10681959241628647,0.005326028913259506,-0.029852185398340225,0.006001629866659641,0.06520641595125198,0.01123923622071743,0.008820575661957264,0.04316568002104759,-0.02403995953500271,-0.009341557510197163,0.09701460599899292,-0.018689420074224472,-0.012089782394468784,-0.02451573684811592,-0.01743263565003872,0.0771377831697464,-0.0012154722353443503,0.05414967238903046,0.07501274347305298,-0.05152857303619385,-0.0016401606844738126,-0.004091296344995499,-0.05246012285351753,0.0036829975433647633,-0.05952814593911171,-0.043289437890052795,-0.02169337123632431,-0.037184905260801315,0.014425614848732948,-0.02594342827796936,-0.04264088347554207,0.0008190458756871521,-0.05419131740927696,-0.001081372145563364,0.05465811863541603,0.0536886490881443,-0.03991513326764107,-0.03354211896657944,0.0016090626595541835,0.14372307062149048,-0.0779285579919815,-0.03437452018260956,-0.029131067916750908,0.02230043336749077,0.10492153465747833,0.05603272095322609,0.01747475005686283,0.024209534749388695,-0.016986964270472527,-0.03801010921597481,0.07005881518125534,0.011743023060262203,-0.09401197731494904,0.04325892776250839,-0.08770621567964554,0.05779727175831795,0.004048705566674471,0.061415430158376694,-0.09742424637079239,0.0685088112950325,0.07828968018293381,0.02753184735774994,-0.002637599827721715,-0.08503824472427368,0.04639552906155586,-0.0028480293694883585,0.10428284853696823,0.03916696459054947,-0.023923169821500778,-0.0017583809094503522,0.003107795026153326,-0.04373113438487053,0.04049490764737129,0.05006417632102966,0.0451558381319046,0.009698302485048771,-0.030670231208205223,0.03408148139715195,0.00804170873016119,0.03931591287255287,-0.07711891084909439,-0.055213093757629395,0.037921227514743805,-0.06030482053756714,-0.021300043910741806,-0.03153863176703453,0.032730698585510254,1.1649211005608776e-34,-0.10429005324840546,0.04638867452740669,-0.0281692948192358,0.025499539449810982,-0.010591146536171436,-0.04939925670623779,0.06086141616106033,-0.011423611082136631,-0.04370087757706642,-0.0175460334867239,-0.06530047953128815,-0.01045348308980465,0.10189665853977203,-0.05593745410442352,-0.07517343759536743,0.010420099832117558,0.009342939592897892,0.03305162116885185,-0.0024447080213576555,0.00011023096885764971,-0.04419175907969475,0.0442349910736084,0.11022896319627762,-0.016540542244911194,-0.04669932648539543,-0.08131758868694305,0.039785031229257584,-0.03840886428952217,-0.01032270584255457,0.0009073338005691767,-0.049302950501441956,0.017056280747056007,0.041412949562072754,0.08148610591888428,-0.03252498060464859,0.04535895586013794,0.09955403953790665,-0.028973378241062164,0.015483277849853039,0.0342552475631237,-0.020524101331830025,0.029105907306075096,0.06962226331233978,-0.03921283036470413,-0.029153896495699883,0.017303967848420143,0.1003551110625267,0.038888923823833466,0.053504787385463715,0.013175539672374725,-0.02957526035606861,0.013195725157856941,-0.014910112135112286,-0.0446215383708477,0.029558289796113968,0.040225330740213394,0.017392950132489204,-5.6654305808478966e-05,-0.07169227302074432,-0.0065685235895216465,0.06137217581272125,0.028688926249742508,0.005215714685618877,-0.08110940456390381,0.08474557101726532,-0.06257765740156174,0.04480370506644249,-0.03245941177010536,-0.0019502354552969337,0.06787770241498947,0.051418621093034744,-0.002853281795978546,0.010862457565963268,0.08530168235301971,-0.026993276551365852,-0.05084057152271271,0.056138068437576294,-0.021396303549408913,-0.020945250988006592,-0.003037678077816963,0.004047848749905825,0.05935328081250191,-0.05625374615192413,0.04405225068330765,-0.06482483446598053,0.013848496600985527,0.007843771018087864,0.11494729667901993,-0.06444396078586578,0.0035759108141064644,-0.04284479469060898,-0.07735458761453629,0.08893634378910065,-0.015519269742071629,0.03918285295367241,3.864489106206119e-34,-0.028915762901306152,0.024985983967781067,-0.03397934138774872,-0.0230787992477417,0.06930051743984222,0.07296764850616455,0.022429781034588814,0.022431766614317894,0.005083093419671059,0.022101467475295067,0.07730410993099213,0.0652870461344719,-0.010032487101852894,0.025365151464939117,0.04072807729244232,-0.009294082410633564,0.04325591400265694,0.052882034331560135,-0.07423430681228638,0.022262290120124817,-0.03558608889579773,0.10784682631492615,-0.06288161128759384,-0.00010152863978873938,0.00600591441616416,0.059903584420681,-0.06172862648963928,0.09968628734350204,-0.03909211978316307,-0.006834309082478285,0.08766819536685944,0.03386103734374046,0.0068629104644060135,0.2046077996492386,-0.0024488905910402536,-0.09223910421133041,0.05678321421146393,-0.0077446456998586655,0.06258050352334976,0.023143472149968147,0.04863802716135979,0.0839231088757515,0.017626138404011726,0.012834100052714348,-0.04819710552692413,0.008319733664393425,0.0004282435984350741,0.004175894893705845,0.03735267370939255,0.04183878004550934,0.0020634133834391832,0.0030597583390772343,0.10095680505037308,-0.054434485733509064,-0.02219245210289955,0.05953267961740494,0.02415802888572216,-0.07688095420598984,0.03548939898610115,-0.11024285107851028,-0.053503673523664474,-0.002969755558297038,0.05171113833785057,-0.0034758674446493387,0.016506150364875793,-0.009579180739820004,0.0003210442664567381,-0.0039147427305579185,0.010368232615292072,0.025422951206564903,-0.014590021222829819,0.02265889383852482,0.010311485268175602,-0.004402001388370991,0.08169689029455185,-0.040616508573293686,-0.11723743379116058,0.07308375835418701,-0.09371699392795563,-0.0038635917007923126,0.08225304633378983,-0.06295745819807053,-0.10679075121879578,-0.014715339057147503,0.029705923050642014,-0.04150080680847168,0.007931127212941647,-0.03458772227168083,0.10464675724506378,-0.012187021784484386,0.009123305790126324,-0.06048078462481499,0.028316175565123558,0.009678749367594719,-0.008098484016954899,-1.3086165928655191e-08,0.018873004242777824,-0.04156606271862984,0.05303440988063812,0.027771716937422752,-0.008985486812889576,0.022933410480618477,0.011617491021752357,-0.06341458857059479,-0.12796875834465027,-0.08203063160181046,-0.1187872439622879,-0.00547579163685441,0.005590616725385189,0.023475753143429756,0.0037569631822407246,-0.07474493235349655,-0.045660316944122314,-0.08939675241708755,-0.047276828438043594,-0.05691858381032944,-0.010878140106797218,0.04432559758424759,-0.048235487192869186,-0.10121311992406845,0.02977931872010231,0.03553738072514534,-0.01676422543823719,0.05471537634730339,0.021210061386227608,-0.01755756512284279,-0.024517571553587914,-0.047243453562259674,-0.0035174773074686527,-0.0856022760272026,-0.14471915364265442,-0.002307122340425849,0.015845147892832756,-0.09736154973506927,-0.06777133792638779,-0.07429663836956024,0.03062606230378151,0.0037168655544519424,0.07836993038654327,-0.004179614596068859,-0.030340630561113358,-0.02784530259668827,0.011530702002346516,0.032984815537929535,-0.016863742843270302,0.01898183487355709,-0.06753788143396378,0.07656950503587723,-0.01169210858643055,0.04814549908041954,0.0097352871671319,-0.040779534727334976,0.08010163903236389,-0.038505785167217255,-0.030223790556192398,-0.023388763889670372,0.014431705698370934,0.04670269414782524,-0.046740900725126266,-0.07508610934019089}
21	Text box area not wokring	cannot enter any input into the textbox area	critical	2025-06-16 19:23:39.588873	\N
20	Modal not working properly	there is some error in the modal and its not working properly 	medium	2025-06-16 18:52:31.12516	{0.010655160062015057,0.001460059080272913,0.049713678658008575,-0.0037372945807874203,0.027300633490085602,-0.023061027750372887,0.007559203077107668,-0.01152113638818264,0.06599710881710052,-0.07007340341806412,0.07042022794485092,0.04605160653591156,-0.010829525999724865,0.022766461595892906,-0.00044995624921284616,0.01768178679049015,-0.07466478645801544,-0.08526341617107391,-0.10494650900363922,-0.04653292894363403,0.023647945374250412,-0.0056871697306632996,0.025114785879850388,0.002233171835541725,-0.007945617660880089,0.07527654618024826,-0.007260119542479515,0.05381112918257713,0.024892374873161316,-0.06763467192649841,-0.014219246804714203,0.011743650771677494,-0.025582976639270782,-0.09465407580137253,-0.011841935105621815,-0.02836610935628414,-0.013758145272731781,-0.030304722487926483,0.00964695680886507,-0.0439898744225502,-0.06465267390012741,-0.019358191639184952,0.00015986284415703267,0.009161217138171196,-0.09117814153432846,-0.043883342295885086,0.07164949178695679,0.013720587827265263,0.08373629301786423,0.04083532094955444,-0.04175039753317833,-0.021861201152205467,0.11502830684185028,-0.027579426765441895,-0.028502613306045532,-0.01259753480553627,0.003933272324502468,-0.027628714218735695,0.07997364550828934,-0.035409122705459595,0.0072708213701844215,0.03491205722093582,-0.08555056154727936,0.007094831205904484,0.08597975969314575,-0.060312189161777496,-0.03211427852511406,-0.11128906160593033,-0.08110584318637848,-0.059423789381980896,0.021296504884958267,-0.02679964154958725,0.01522592268884182,0.04840176925063133,-0.04124438390135765,-0.1133134663105011,-0.04957069829106331,0.0293156448751688,0.05184563994407654,0.04861188679933548,0.06518865376710892,-0.0917348563671112,0.07262086868286133,-0.017779581248760223,0.11579049378633499,0.0265728160738945,-0.008460630662739277,-0.013711816631257534,-0.08591874688863754,-0.024913378059864044,0.059690963476896286,0.04983645677566528,0.006510252133011818,0.07748191058635712,-0.015903625637292862,0.026941422373056412,-0.04857826605439186,-0.06261906772851944,-0.0831005647778511,0.15779121220111847,0.01388807874172926,0.060740675777196884,-0.07481876760721207,0.04475579783320427,0.00491432286798954,0.02290312573313713,-0.016385624185204506,0.06341122090816498,-0.0324820838868618,0.054484885185956955,0.00464150495827198,0.0556829608976841,0.006878554821014404,0.09781154245138168,0.012665600515902042,-0.042868033051490784,0.05825906619429588,0.04503750056028366,0.016149573028087616,-0.11021462082862854,0.0346335768699646,-0.046007972210645676,-0.07209751009941101,-0.028409995138645172,0.0013529849238693714,0.012549599632620811,-0.0018807508749887347,-1.7785971558750167e-33,0.06302359700202942,-0.039268817752599716,-0.08286110311746597,0.06276291608810425,-0.02229112572968006,-0.00373079814016819,-0.026220371946692467,0.04406774789094925,-0.04883753880858421,0.037590544670820236,-0.015050480142235756,0.007351824082434177,-0.04131389409303665,0.0004445188387762755,0.022233709692955017,-0.01688167080283165,0.01252475380897522,-0.047446705400943756,-0.05600062757730484,-0.00969043467193842,-0.015517892315983772,0.04425867646932602,0.04224938899278641,0.0361570380628109,-0.020035654306411743,0.06618835031986237,0.06116316467523575,0.034038688987493515,-0.030234580859541893,0.007668499369174242,-0.003192370291799307,0.0037026789505034685,0.013894486241042614,-0.03629361093044281,0.0344892255961895,0.05170357599854469,-0.019569935277104378,0.014012359082698822,-0.04668498784303665,-0.03768686205148697,-0.018775727599859238,-0.0839347392320633,-0.052324868738651276,-0.029975395649671555,-0.012707121670246124,0.05716336518526077,0.05729341879487038,0.09555480629205704,-0.050930172204971313,-0.0429464727640152,-0.08206897228956223,0.04070049896836281,-0.02702493406832218,-0.034621354192495346,-0.00876872893422842,0.026390807703137398,-0.05357355251908302,0.03591187298297882,0.05164420232176781,-0.06890817731618881,0.04523751139640808,-0.04637300223112106,0.0025267917662858963,0.006346466951072216,0.04446069896221161,0.002997233299538493,-0.04342186450958252,0.02074277773499489,0.05384841561317444,-0.02586778812110424,-0.06976386904716492,0.003693025093525648,0.10141865164041519,0.10968401283025742,-0.06791795790195465,-0.010303199291229248,-0.005482407286763191,-0.07797989249229431,0.01708136312663555,0.05650430545210838,0.044327713549137115,0.012174650095403194,0.07347103208303452,0.0016219473909586668,0.06316761672496796,-0.09874039143323898,0.027619769796729088,0.00864358153194189,0.04847528785467148,0.047378282994031906,0.004145890008658171,-0.008922378532588482,0.019070591777563095,0.002161895390599966,-0.032280489802360535,-9.994586534923766e-34,0.001775334938429296,0.012875521555542946,-0.06229598820209503,0.022353116422891617,-0.027149725705385208,0.003356690052896738,0.03601131960749626,-0.0015533106634393334,0.022557450458407402,-9.53559429035522e-05,0.04437848925590515,0.029342276975512505,0.053930383175611496,-0.0070948307402431965,0.05078846216201782,0.08305668830871582,0.06067586690187454,0.04960010573267937,0.00683098379522562,-0.02302493341267109,-0.017562177032232285,0.04167027026414871,-0.06443369388580322,0.002654781797900796,-0.06811175495386124,-0.012752125971019268,-0.10289774090051651,-0.01921461895108223,-0.04329797253012657,-0.007947085425257683,0.06455318629741669,0.047015875577926636,0.07382864505052567,0.05290689691901207,0.053511038422584534,0.08651147037744522,-0.010178914293646812,-0.05309661850333214,0.04139600321650505,-0.0061684902757406235,-0.06599488109350204,0.026648469269275665,0.0008559115813113749,-0.04337900131940842,0.05772954970598221,-0.05394322797656059,0.04144452512264252,-0.11335419863462448,0.0002180793380830437,-0.03281367942690849,0.025861574336886406,-0.04179790988564491,0.022910770028829575,-0.0867336168885231,0.08790075778961182,0.01816464215517044,-0.07311662286520004,0.0025057478342205286,-0.01849212311208248,0.0951269119977951,-0.017137639224529266,0.03204869478940964,0.009004694409668446,-0.058245573192834854,0.02781386859714985,-0.026909327134490013,0.06292911618947983,0.033263158053159714,0.1010337769985199,-0.011573090218007565,-0.03217689320445061,0.014131493866443634,0.05988435447216034,-0.051704395562410355,0.023454420268535614,0.030601106584072113,0.024577457457780838,0.04735685512423515,-0.027789637446403503,-0.007486084010452032,0.03323747217655182,-0.03516951948404312,-0.05525472015142441,-0.09050910919904709,-0.05171391740441322,0.007277046330273151,0.04927731305360794,0.016296928748488426,-0.03378959745168686,-0.028292454779148102,0.021519174799323082,-0.004489957354962826,0.09946556389331818,0.03788125887513161,0.11908049136400223,-1.4427015138096522e-08,0.005231297574937344,0.023807507008314133,-0.033919986337423325,-0.06892198324203491,0.006986874621361494,-0.021739674732089043,0.06259525567293167,-0.1212315484881401,-0.07310155034065247,-0.11920458823442459,-0.009776616469025612,-0.028535671532154083,-0.018743043765425682,-0.04574612155556679,-0.07457537204027176,-0.053744468837976456,-0.12055721879005432,0.047181304544210434,0.004124870523810387,0.025367584079504013,0.009983728639781475,-0.05596568435430527,0.0914074182510376,-0.030863944441080093,-0.014647085219621658,-0.0719265416264534,-0.07904655486345291,-0.02938719466328621,-0.011172891594469547,0.06707622855901718,-0.01627453602850437,0.07429373264312744,0.02158268913626671,-0.12259224057197571,-0.1174626350402832,-0.04053238034248352,0.11310084909200668,0.01668510027229786,0.06611797958612442,-0.07279156893491745,0.09231335669755936,-0.09585433453321457,-0.039639875292778015,0.020325178280472755,-0.006867253687232733,0.04521535709500313,0.0602215901017189,-0.015571977011859417,-0.04439383000135422,-0.043949324637651443,-0.010386398062109947,0.048029039055109024,0.0502169094979763,0.00764461001381278,0.04881799966096878,-0.03824480250477791,0.03115389496088028,0.07318884134292603,0.020654302090406418,-0.05908241868019104,0.011272952891886234,0.01356011163443327,-0.04646173119544983,-0.10622809827327728}
\.


--
-- TOC entry 5247 (class 0 OID 24657)
-- Dependencies: 221
-- Data for Name: master_table; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.master_table (s_no, test_scenario_id, test_scenario, testcase_id, testcase_description, prerequisite, steps_to_reproduce, expected_result, actual_result, test_result, status, comments, test_suite) FROM stdin;
293	TS_Finetune_014	Validate Path Configuration	TC_293	Clicking fine-tune button without selecting any nvme mount point	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure other required fields\n4. Leave NVME Mount Point unselected\n5. Scroll down and click Start Finetuning button	Error : Please Select nvme mount point	Error : Please Select nvme mount point	PASS	COMPLETED	\N	Finetune
294	TS_Finetune_015	Validate Path Configuration	TC_294	Entering correct output dir	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure other required fields\n4. Click on Output Directory field in Path Configuration\n5. Enter a valid directory path (e.g., "/usr/local/models/")\n6. Verify the path appears in configuration summary	The entered directory path should reflect in the configuration summary	The entered directory path should reflect in the configuration summary	PASS	COMPLETED	\N	Finetune
295	TS_Finetune_016	Validate Path Configuration	TC_295	Clicking finetune button by Entering a output dir which is unavailable	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure other required fields\n4. Click on Output Directory field in Path Configuration\n5. Enter an invalid or non-existent directory path\n6. Verify error message appears	Error : Directory does not exist. Please enter a valid path	Error : Directory does not exist. Please enter a valid path	PASS	COMPLETED	\N	Finetune
296	TS_Finetune_017	Validate Path Configuration	TC_296	Clicking fine-tune button without providing output dir	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure other required fields\n4. Leave Output Directory field empty\n5. Scroll down and click Start Finetuning button	Error : Please provide output dir	Error : Please enter an ouput directory	PASS	COMPLETED	\N	Finetune
297	TS_Finetune_018	Validate Path Configuration	TC_297	Changing the log file name	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Log Name field in Path Configuration\n4. Try to Enter a new log name\n5. Verify that log file file name can be chnaged or updated	Should be able to provide or update the log file name	able to change the log file name	PASS	COMPLETED	If no log file name is given it is taking .log as log name. But It should throw an error msg saying log name should not be empty please provide the log name	Finetune
298	TS_Finetune_019	Validate Hardware Configuration	TC_298	Selecting only one GPU (eg:1 out of 2)	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Locate GPU selection area in Hardware Configuration\n4. Click to select only one GPU from available options (e.g., GPU 0)\n5. Verify num_gpus=1 and specify_gpus="0" in configuration summary	update the num_gpus and specified GPUs correctly.	updated the num_gpus and specified GPUs correctly.	PASS	COMPLETED	\N	Finetune
299	TS_Finetune_020	Validate Hardware Configuration	TC_299	Selecting more than 1 GPU	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3.Locate GPU selection area in Hardware Configuration\n4. Click to select multiple GPUs\n5. Verify num_gpus and specify_gpus updated correctly in configuration summary	update the num_gpus and specified GPUs correctly.	updated the num_gpus and specified GPUs correctly.	PASS	COMPLETED	\N	Finetune
356	TS_Datasets_002	Validating Dataset Path	TC_356	Checking whether the dataset path is editable and able to give custom path.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. The custom path should be available in the host system (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
361	TS_Datasets_003	Validating Dataset Path	TC_361	Looking for available datasets without providing any dataset path.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
365	TS_Datasets_004	Validating Dataset Path	TC_365	Providing Path to dataset which is not available in the host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. The path to the datasets should not be available in the host system (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
279	TS_Finetune_001	Validate Model Configuration	TC_279	To verify the functionality of select model field	1. Should be able to login to the GUI. (GUI)\n2. The dataset path should be in the default path /usr/local/datasets on the dataset page, and model path should be in  /media/models in models page \n3. Test models and datasets should be available in the respective default paths of dataset page and model page	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. click on select models option under the Select Model label in Model Configuration.\nScenario 1:\nclick on any of the models available from the dropdown\nScenario 2:\n1. Open terminal and go to the path specified in models page\n2. verify the models available in path specified in models page (terminal) with models listed in drop down\nScenario 3:\n1.Click finetune button without selecting any model\nScenario 4:\n1. search for any available model in the search bar\n2. Search for any unavaible model in the search bar\n\n	Scenario 1:\nThe selected model should reflect in the configuration summary	The selected model is reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
300	TS_Finetune_021	Validate Hardware Configuration	TC_300	Clicking finetune button without selecting any GPUs	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure all the required fields\n4. Try to deselect all GPU options unselected	Error : Please select the GPU	unable to deselect GPU 0 .Even if I try to deselect GPU 0, it auomatically selected after 2 seconds if no other GPU is selected	PASS	COMPLETED	\N	Finetune
301	TS_Finetune_022	Validate Hardware Configuration	TC_301	To verify the GPU utilization in Hardware configuration	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Monitor GPU utilization in nvidia-smi(terminal)\n4.Verify GPU utilization in Hardware configuration matches with the nvidia-smi(terminal)	GPU utilization in both GUI and terminal should match	GPU utilization in both GUI and terminal is matched	PASS	COMPLETED	\N	Finetune
302	TS_Finetune_023	Validate Hardware Configuration	TC_302	Selecting/Changing the precision mode	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Precision Mode dropdown in Hardware Configuration\n4. Select different precision mode option (e.g., FP32)\n5. Verify selection appears in configuration summary	Should reflect in the configuration summary	reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
303	TS_Finetune_024	Validate Training Parameters	TC_303	Entering non-negative number for train batch size	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Train Batch Size field in Training Parameters\n4. Enter a positive number (e.g., 2)\n5. Verify value appears in configuration summary	Should reflect in the configuration summary	reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
304	TS_Finetune_025	Validate Training Parameters	TC_304	Entering negative number for train batch size	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Train Batch Size field in Training Parameters\n4. Enter a negative number (e.g., -2)\n5. Verify error message appears	Error : train batch size should not be a negative value	Unable to give negative values to the train batch size	PASS	COMPLETED	\N	Finetune
305	TS_Finetune_026	Validate Training Parameters	TC_305	Entering alphanumeric value for train batch size	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Train Batch Size field in Training Parameters\n4. Enter an alphanumeric value (e.g., "2a")\n5. Verify error message appears	Error : train batch size should not be a alphanumeric value	Unable to give alphanumeric values to the train batch size	PASS	COMPLETED	\N	Finetune
306	TS_Finetune_027	Validate Training Parameters	TC_306	Clicking finetune button without providing train batch size	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure other required fields\n4. Leave Train Batch Size field empty\n5. Scroll down and click Start Finetuning button	Error : Please provide train batch size	Error : Please provide train batch size	PASS	COMPLETED	\N	Finetune
93	TS_Inference_020	Validating Text-to-Text task type	TC_93	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in message field\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input	\N	NOT-TESTED	NEW	\N	Inference
254	TS_Monitor_001	\N	TC_254	Verify that the values displayed in the Statistics table match the selected configuration from the Fine-tuning page, both during and after the fine-tuning process.	\N	\N	\N	\N	NOT-TESTED	NEW	313	Monitor
255	TS_Monitor_002	\N	TC_255	Verify that, when no fine-tuning process is running, the GUI displays the maximum NVMe cache usage from the most recent fine-tuning session.	\N	\N	\N	\N	NOT-TESTED	NEW	260	Monitor
256	TS_Monitor_003	\N	TC_256	Verify that the GUI displays the maximum GPU utilization and maximum VRAM usage from the most recent fine-tuning job when no training is currently active.	\N	\N	\N	\N	NOT-TESTED	NEW	261	Monitor
257	TS_Monitor_004	\N	TC_257	Verify that the GUI displays the maximum CPU usage and maximum DRAM usage from the most recent fine-tuning job when no training is currently active.	\N	\N	\N	\N	NOT-TESTED	NEW	262	Monitor
258	TS_Monitor_005	\N	TC_258	Verify that the loss vs. timestamp graph is correctly plotted for both live fine-tuning and the most recent completed fine-tuning job.	\N	\N	\N	The time of the loss plotted in the graph is not the exact time when loss has been calculated. (the x-axis time is a start of that iteration, not when the loss has been calculated)\n\nSometimes the line in the graph takes a break, and I cant even able to reproduce the same bug again.\n\nI can't to see the loss/epoch/iteration details for some of the iterations in between.	NOT-TESTED	NEW	#299\n#324\n#335	Monitor
94	TS_Inference_021	Validating Text-to-Text task type	TC_94	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input to the text box, the input should be passed to the model	\N	NOT-TESTED	NEW	\N	Inference
259	TS_Monitor_006	\N	TC_259	Verify that the log view displays the most recent 50 entries for both live fine-tuning and the most recently completed fine-tuning job.	\N	\N	\N	\N	NOT-TESTED	NEW	300	Monitor
260	TS_Monitor_007	\N	TC_260	Verify that the training log file can be downloaded for both live fine-tuning and the most recently completed fine-tuning job.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Monitor
261	TS_Monitor_008	\N	TC_261	Verify that GPU, CPU, and DRAM metrics are fetched and displayed accurately in real-time during the fine-tuning process.	\N	\N	\N	Sometimes the GPU Statistics, failed to fetch the live data in real time during live finetuning., unless we restart the GPU container.	NOT-TESTED	NEW	#301	Monitor
262	TS_Monitor_009	\N	TC_262	Verify that the elapsed time counter functions correctly and continues to run accurately during fine-tuning sessions exceeding 2 days	\N	\N	\N	\N	NOT-TESTED	NEW	265	Monitor
263	TS_Monitor_010	\N	TC_263	Verify that the elapsed time counter handles date changes correctly by starting fine-tuning before midnight (e.g., 11 PM) and ensuring the elapsed time continues accurately past midnight (e.g., after 12 AM).	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Monitor
264	TS_Monitor_011	\N	TC_264	Verify that the 'Stop Training' button is enabled during the fine-tuning process and functions correctly when clicked, terminating the training as expected.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Monitor
265	TS_Monitor_012	\N	TC_265	Verify that the values for 'Current Epoch', 'Micro Batches', and 'Total Epoch' are correctly initialized at the start of fine-tuning and continue to update accurately as training progresses.	\N	\N	\N	\N	NOT-TESTED	NEW	314	Monitor
266	TS_Monitor_013	\N	TC_266	Verify that the NVMe drive is correctly detected and displayed in the GUI, even when the mount point is different from the default /mnt/nvme0 on the host system.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Monitor
267	TS_Monitor_014	\N	TC_267	Verify that the NVMe drive is detected and its usage metrics are fetched correctly across all supported configurations, including partitions, different file systems (e.g., ext4, xfs), LVM volumes, and RAID 0 setups.	\N	\N	\N	\N	NOT-TESTED	NEW	281	Monitor
268	TS_Monitor_015	\N	TC_268	Verify that the GUI accurately fetches and displays GPU details only for the selected GPUs during the fine-tuning process.	\N	\N	\N	\N	NOT-TESTED	NEW	271	Monitor
269	TS_Monitor_016	\N	TC_269	Verify that the log file view allows scrolling to the top while the training process is ongoing.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Monitor
270	TS_Monitor_017	\N	TC_270	Verify that when opening the Monitor page for the first time after GUI container creation (without starting fine-tuning), no details from any previous fine-tuning processes are displayed.	\N	\N	\N	\N	NOT-TESTED	NEW	265	Monitor
271	TS_Monitor_018	\N	TC_271	Verify that after leaving the Monitor page idle for an extended period (e.g., 30 minutes) and returning to it, the page updates correctly and displays the latest fine-tuning status without requiring a manual refresh.	\N	\N	\N	it takes too much time to open the GUI (around 15 secs), after sometime it shows GUI page is not responding, after than the monitor page opens.	NOT-TESTED	NEW	#270	Monitor
272	TS_Monitor_019	\N	TC_272	Verify the behavior when restarting the GUI container during an active fine-tuning process (simulating a system restart). Ensure that fine-tuning stops as expected and check how the GUI handles the interrupted session upon restart.	\N	\N	\N	\N	NOT-TESTED	NEW	304	Monitor
273	TS_Monitor_020	\N	TC_273	Verify the behavior when stopping the GUI container, unmounting NVMe drives on the host system, and then restarting the container while no training process is running. Ensure that the system correctly handles missing mount points, considering a scenario where the system was rebooted and the mounts were not persistent.	\N	\N	\N	The GUI is not checking whether the mount point is a aidaptiv cache or not. Its fetching the boot drive details.\nIf I start the finetuning, I am getting the error message from the middleware via log file, not from the GUI.	NOT-TESTED	NEW	#273	Monitor
274	TS_Monitor_021	\N	TC_274	Verify that the GUI accurately displays the real-time GPU VRAM usage for the ongoing fine-tuning process while also showing the total VRAM usage across all processes running on the same GPU.	\N	\N	\N	No need to check this	NOT-TESTED	NEW	288	Monitor
275	TS_Monitor_022	\N	TC_275	Verify the system's stability and performance when running fine-tuning for 'n' instances (e.g., 10, 20, 30) in parallel, using different model and dataset combinations.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Monitor
276	TS_Monitor_023	\N	TC_276	Verify the system behavior when starting two fine-tuning processes on a single GPU with 16GB VRAM, where the first process already consumes 15GB. Ensure that the second process is terminated while the first process continues running as expected.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Monitor
277	TS_Monitor_024	\N	TC_277	Verify that the Monitor page correctly handles and displays errors related to CUDA out-of-memory, insufficient SSD space, and failure to save the model due to storage limitations.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Monitor
278	TS_Monitor_025	\N	TC_278	Verify that opening approximately 50 Monitor page tabs for the same GUI container port during fine-tuning does not cause performance issues, crashes, or connectivity problems, and ensure all tabs remain accessible and responsive.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Monitor
307	TS_Finetune_028	Validate Training Parameters	TC_307	Entering negative number for total batch size	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Total Batch Size field in Training Parameters\n4. Enter a negative number (e.g., -128)\n5. Verify error message appears	Error : total batch size should not be a negative value	Unable to give negative values to the Total batch size	PASS	COMPLETED	\N	Finetune
308	TS_Finetune_029	Validate Training Parameters	TC_308	Clicking finetune button without providing total batch size	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1. Configure other required fields\n2. Leave Total Batch Size field empty\n3. Scroll down and click Start Finetuning button	Error : Please provide total batch size	Error : Please provide total batch size	PASS	COMPLETED	\N	Finetune
309	TS_Finetune_030	Validate Training Parameters	TC_309	Entering non-negative number for training epochs	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Training Epochs field in Training Parameters\n4. Enter a positive number (e.g., 1)\n5. Verify value appears in configuration summary	Should reflect in the configuration summary	reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
310	TS_Finetune_031	Validate Training Parameters	TC_310	Entering negative number for training epochs	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1. Click on Training Epochs field in Training Parameters\n2. Enter a negative number (e.g., -1)\n3. Verify error message appears	Error : training epoch should not be a negative value	Unable to give negative values in the Traning Epochs	PASS	COMPLETED	\N	Finetune
311	TS_Finetune_032	Validate Training Parameters	TC_311	Entering value to max iter in the range of [-1, infinity]	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Max Iterations field in Training Parameters\n4. Enter a valid value (-1 or positive number).      5.Verify value appears in configuration summary	Should reflect in the configuration summary	reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
312	TS_Finetune_033	Validate Training Parameters	TC_312	Enter negative number for max iter apart from -1	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Max Iterations field in Training Parameters\n4. Enter an invalid negative number (e.g., -2)\n5. Verify error message appears	Error : Value must be -1 or a positive number	Value must be -1 or a positive number	PASS	COMPLETED	\N	Finetune
313	TS_Finetune_034	Validate Optimizer Settings	TC_313	Updating value to the learning rate	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Learning Rate field in Optimizer Settings\n4. Enter a new value (e.g., 0.01)\n5. Verify value appears in configuration summary	Should reflect in the configuration summary	reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
314	TS_Finetune_035	Validate Optimizer Settings	TC_314	Clicking finetune button without providing learning rate	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure other required fields\n4. Leave Learning Rate field empty\n5. Scroll down and click Start Finetuning button	Error : please provide learning rate	Error : please provide learning rate	PASS	COMPLETED	\N	Finetune
315	TS_Finetune_036	Validate Optimizer Settings	TC_315	Updating value to the LR Scheduler Mode	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3.Click on LR Scheduler Mode field in Optimizer Settings\n4. Enter a new value (e.g., 1)\n5. Verify value appears in configuration summary	Should reflect in the configuration summary	reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
316	TS_Finetune_037	Validate Optimizer Settings	TC_316	Clicking finetune button without providing LR Scheduler mode	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1. Configure other required fields\n2. Leave LR Scheduler Mode field empty\n3. Scroll down and click Start Finetuning button	Error : Please provide LR Scheduler Mode	Error : Please provide LR Scheduler Mode	PASS	COMPLETED	\N	Finetune
589	TS_Models_024	yoyoy	TC_Models_001	yoyoy	yoyoy	yoyoy	yoyoy	\N	not-tested	pending	yoyoy	Models
317	TS_Finetune_038	Validate Optimizer Settings	TC_317	Updating value of Beta1	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Beta1 field in Optimizer Settings\n4. Enter a new value (e.g., 0.9)\n5. Verify value appears in configuration summary	Should reflect in the configuration summary	reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
318	TS_Finetune_039	Validate Optimizer Settings	TC_318	Clicking finetune button without providing value for Beta1	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure other required fields\n4. Leave Beta1 field empty\n5. Scroll down and click Start Finetuning button	Error : Please provide Beta1 value	Error : Please provide Beta1 value	PASS	COMPLETED	\N	Finetune
319	TS_Finetune_040	Validate Optimizer Settings	TC_319	Updating value of Beta2	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Beta2 field in Optimizer Settings\n4. Enter a new value (e.g., 0.95)\n5. Verify value appears in configuration summary	Should reflect in the configuration summary	reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
95	TS_Inference_022	Validating Text-to-Text task type	TC_95	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded	\N	NOT-TESTED	NEW	\N	Inference
320	TS_Finetune_041	Validate Optimizer Settings	TC_320	Clicking finetune button without providing value for Beta2	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure other required fields\n4. Leave Beta2 field empty\n5. Scroll down and click Start Finetuning button	Error : Please provide Beta2 value	Error : Please provide Beta2 value	PASS	COMPLETED	\N	Finetune
321	TS_Finetune_042	Validate Optimizer Settings	TC_321	Updating value of Epsilon	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Epsilon field in Optimizer Settings\n4. Enter a new value (e.g., 1e-8)\n5. Verify value appears in configuration summary	Should reflect in the configuration summary	reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
322	TS_Finetune_043	Validate Optimizer Settings	TC_322	Clicking finetune button without providing value for Epsilon	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure other required fields\n4. Leave Epsilon field empty\n5. Scroll down and click Start Finetuning button	Error : Please provide Epsilon value	Error : Please provide Epsilon value	PASS	COMPLETED	\N	Finetune
323	TS_Finetune_044	Validate Optimizer Settings	TC_323	Updating value of Weight Delay	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Weight Decay field in Optimizer Settings\n4. Enter a new value (e.g., 0.01)\n5. Verify value appears in configuration summary	Should reflect in the configuration Weight Delay	reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
324	TS_Finetune_045	Validate Optimizer Settings	TC_324	Clicking finetune button without providing value for Weight Delay	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure other required fields\n4. Leave Weight Decay field empty\n5. Scroll down and click Start Finetuning button	Error : Please provide Weight Delay value	Error : Please provide Weight Decay value	PASS	COMPLETED	\N	Finetune
325	TS_Finetune_046	Validate LoRA Configuration	TC_325	Enabling LoRA	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Locate LoRA Configuration section\n4. Enable LoRA option\n5. Verify enable_lora: true appears in configuration summary	update the value to true in configuration summary	reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
517	TS_Datasets_030	Validating file upload	TC_517	Trying to upload a 2 dataset  files one which is already exists and one new dataset file to the default dataset path in host system	\N	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
590	TS_Models_025	haii i am testsing	TC_Models_002	haii i am testsing	haii i am testsing	haii i am testsing	haii i am testsing	\N	not-tested	pending	haii i am testsing	Models
283	TS_Finetune_002	Validate Model Configuration	TC_283	To verify the functionality of select dataset field	1. Should be able to login to the GUI. (GUI)\n2. The dataset path should be in the default path /usr/local/datasets on the dataset page, and model path should be in  /media/models in models page \n3. Test models and datasets should be available in the respective default paths of dataset page and model page	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. click on select datasets option under the Model Path label in Model Configuration.\nScenario 1:\nclick on any of the models available from the dropdown\nScenario 2:\n1. Open terminal and go to the path specified in models page\n2. verify the models available in path specified in models page (terminal) with models listed in drop down\nScenario 3:\n1.Click finetune button without selecting any model\nScenario 4:\n1. search for any available dataset in the search bar\n2. Search for any unavaible dataset in the search bar\n\n	Scenario 1:\nThe selected dataset should reflect in the configuration summary	The selected dataset is reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
326	TS_Finetune_047	Validate LoRA Configuration	TC_326	Disabling LoRA	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Locate LoRA Configuration section\n4. Disable LoRA option\n5. Verify enable_lora: false appears in configuration summary	update the value to false in configuration summary	updated the value to false in configuration summary	PASS	COMPLETED	\N	Finetune
327	TS_Finetune_048	To validate connection	TC_327	Check If GUI is listening to the port	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Launch the MiPhi GUI application\n4. Wait for connection status\n5. Verify "Connected" status appears with green indicator	Show connected msg	Shown connected msg	PASS	COMPLETED	\N	Finetune
96	TS_Inference_023	Validating Text-to-Text task type	TC_96	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed	\N	NOT-TESTED	NEW	\N	Inference
328	TS_Finetune_049	To validate connection	TC_328	Check If GUI is not listening to the port (or) Network Error	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Launch the MiPhi GUI application\n4. Attempt to connect with incorrect port or network issues\n4. Observe connection status message	Show Network error (or) Trying to connect	Shown Loading message	PASS	COMPLETED	\N	Finetune
329	TS_Finetune_050	To validate concurrent execution	TC_329	To check if the GUI is allowing to start multiple finetuning in multiple tabs	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Open multiple tabs in a browser.\n4. Connect to GUI in all tabs with same port.\n5. select all the required configurations in all tabs \n6. Try to start finetuning in all the tabs one after the other.	Should not allow more than 1 finetuning in a same port	Unable to start finetuning in multiple tabs	PASS	COMPLETED	\N	Finetune
330	TS_Finetune_052	To validate Training Parameters	TC_330	Entering alphanumeric value for max iterations	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on max iter field in Training Parameters\n4. Enter an alphanumeric value (eg : e, 2e, 3e etc)\n5. Verify error message appears	Error : max iter should not be a alphanumeric value	Unble to give alphanumeric values to the max iterations	PASS	COMPLETED	\N	Finetune
331	TS_Finetune_053	To validate Training Parameters	TC_331	Entering alphanumeric value for Total batch size	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Total Batch size field in Training Parameters\n4. Enter an alphanumeric value (eg : e, 2e, 3e etc)\n5. Verify error message appears	Error : Total batch size should not be a alphanumeric value	Unable to give alphanumeric values to the train batch size	PASS	COMPLETED	\N	Finetune
332	TS_Finetune_054	To validate Optimizer Settings	TC_332	Entering alphanumeric value for Learning Rate	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Learning Rate field in Optimizer settings\n4. Enter an alphanumeric value (eg : e, 2e, 3e etc)\n5. Verify error message appears	Error : Learning Rate should not be a alphanumeric value	Unable to give alphanumeric values to the Learning Rate	PASS	COMPLETED	\N	Finetune
591	TS_Models_026	wow	TC_Models_003	wow	wow	wow	wow	\N	not-tested	pending	wow	Models
333	TS_Finetune_055	To validate Optimizer Settings	TC_333	Entering alphanumeric value for LR Scheduler Mode	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on LR Scheduler mode field in Optimizer settings\n4. Enter an alphanumeric value (eg : e, 2e, 3e etc)\n5. Verify error message appears	Error : LR Scheduler mode should not be a alphanumeric value	Unable to give alphanumeric values to the LR Scheduler Mode	PASS	COMPLETED	\N	Finetune
334	TS_Finetune_056	To validate Optimizer Settings	TC_334	Entering alphanumeric value for Beta1	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Beta1 field in Optimizer settings\n4. Enter an alphanumeric value (eg : e, 2e, 3e etc)\n5. Verify error message appears	Error : Beta1 should not be a alphanumeric value	Unable to give alphanumeric values to the Beta1	PASS	COMPLETED	\N	Finetune
335	TS_Finetune_057	To validate Optimizer Settings	TC_335	Entering alphanumeric value for Beta2	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Beta2 field in Optimizer settings\n4. Enter an alphanumeric value (eg : e, 2e, 3e etc)\n5. Verify error message appears	Error : Beta2 should not be a alphanumeric value	Unable to give alphanumeric values to the Beta2	PASS	COMPLETED	\N	Finetune
74	TS_Inference_001	Validating Text-to-Text task type	TC_74	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Text-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models	\N	NOT-TESTED	NEW	\N	Inference
75	TS_Inference_002	Validating Text-to-Text task type	TC_75	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down	\N	NOT-TESTED	NEW	\N	Inference
76	TS_Inference_003	Validating Text-to-Text task type	TC_76	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
77	TS_Inference_004	Validating Text-to-Text task type	TC_77	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU	\N	NOT-TESTED	NEW	\N	Inference
78	TS_Inference_005	Validating Text-to-Text task type	TC_78	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's	\N	NOT-TESTED	NEW	\N	Inference
336	TS_Finetune_058	To validate Optimizer Settings	TC_336	Entering alphanumeric value for Weight Decay	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on weight decay field in Optimizer settings\n4. Enter an alphanumeric value (eg : e, 2e, 3e etc)\n5. Verify error message appears	Error : Weight decay should not be a alphanumeric value	UnAble to give alphanumeric values to the weight decay	PASS	COMPLETED	\N	Finetune
337	TS_Finetune_059	To validate Optimizer Settings	TC_337	Entering negative value for LR Scheduler Mode other than -1	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1. Click on LR Scheduler mode field in Optimizer settings\n2. Enter a negative value other than -1 (eg : -2, -10  etc)\n3. Verify error message appears	Error : LR Scheduler mode should not be negative	Unable to give negative values othe than -1 to the LR Scheduler mode	FAIL	NEEDS-RETEST	Able to give -1 using down arrow but unable to enter -1 value in the text field	Finetune
79	TS_Inference_006	Validating Text-to-Text task type	TC_79	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
80	TS_Inference_007	Validating Text-to-Text task type	TC_80	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down	\N	NOT-TESTED	NEW	\N	Inference
81	TS_Inference_008	Validating Text-to-Text task type	TC_81	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point	\N	NOT-TESTED	NEW	\N	Inference
82	TS_Inference_009	Validating Text-to-Text task type	TC_82	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)	\N	NOT-TESTED	NEW	\N	Inference
83	TS_Inference_010	Validating Text-to-Text task type	TC_83	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)	\N	NOT-TESTED	NEW	\N	Inference
84	TS_Inference_011	Validating Text-to-Text task type	TC_84	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task\n3. Click on "Text-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0	\N	NOT-TESTED	NEW	\N	Inference
85	TS_Inference_012	Validating Text-to-Text task type	TC_85	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model	\N	NOT-TESTED	NEW	\N	Inference
86	TS_Inference_013	Validating Text-to-Text task type	TC_86	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU	\N	NOT-TESTED	NEW	\N	Inference
87	TS_Inference_014	Validating Text-to-Text task type	TC_87	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path	\N	NOT-TESTED	NEW	\N	Inference
88	TS_Inference_015	Validating Text-to-Text task type	TC_88	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
89	TS_Inference_016	Validating Text-to-Text task type	TC_89	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Leave the input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
90	TS_Inference_017	Validating Text-to-Text task type	TC_90	To verify the functionality of send button without passing any input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in the message field\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please enter the input	\N	NOT-TESTED	NEW	\N	Inference
91	TS_Inference_018	Validating Text-to-Text task type	TC_91	To verify the functionality of send button by passing an input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully (Try with different models)\n3. Enter text input and click "Send" button\n4. Verify model generates corresponding output\nConfirm output is displayed correctly in response area	The input should be passed to the model once the user clicks send button 	\N	NOT-TESTED	NEW	\N	Inference
92	TS_Inference_019	Validating Text-to-Text task type	TC_92	To verify whether the output is being generated for an input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input exceeding the maximum allowed length\n4. Verify input field enforces character limit\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input provided	\N	NOT-TESTED	NEW	\N	Inference
593	TC_Models_001	testing 3	TC_567	testing 3	testing 3	testing 3	testing 3	\N	not-tested	pending	testing 3	Models
97	TS_Inference_024	Validating Text-to-Text task type	TC_97	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output	\N	NOT-TESTED	NEW	\N	Inference
98	TS_Inference_025	Validating Image-to-Text task type	TC_98	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Image-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models	\N	NOT-TESTED	NEW	\N	Inference
99	TS_Inference_026	Validating Image-to-Text task type	TC_99	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down	\N	NOT-TESTED	NEW	\N	Inference
100	TS_Inference_027	Validating Image-to-Text task type	TC_100	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
101	TS_Inference_028	Validating Image-to-Text task type	TC_101	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU	\N	NOT-TESTED	NEW	\N	Inference
102	TS_Inference_029	Validating Image-to-Text task type	TC_102	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's	\N	NOT-TESTED	NEW	\N	Inference
103	TS_Inference_030	Validating Image-to-Text task type	TC_103	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
104	TS_Inference_031	Validating Image-to-Text task type	TC_104	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down	\N	NOT-TESTED	NEW	\N	Inference
105	TS_Inference_032	Validating Image-to-Text task type	TC_105	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point	\N	NOT-TESTED	NEW	\N	Inference
106	TS_Inference_033	Validating Image-to-Text task type	TC_106	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)	\N	NOT-TESTED	NEW	\N	Inference
107	TS_Inference_034	Validating Image-to-Text task type	TC_107	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)	\N	NOT-TESTED	NEW	\N	Inference
108	TS_Inference_035	Validating Image-to-Text task type	TC_108	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task\n3. Click on "Image-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0	\N	NOT-TESTED	NEW	\N	Inference
109	TS_Inference_036	Validating Image-to-Text task type	TC_109	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model	\N	NOT-TESTED	NEW	\N	Inference
110	TS_Inference_037	Validating Image-to-Text task type	TC_110	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU	\N	NOT-TESTED	NEW	\N	Inference
111	TS_Inference_038	Validating Image-to-Text task type	TC_111	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path	\N	NOT-TESTED	NEW	\N	Inference
112	TS_Inference_039	Validating Image-to-Text task type	TC_112	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
113	TS_Inference_040	Validating Image-to-Text task type	TC_113	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3.  Don't Upload input image\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
114	TS_Inference_041	Validating Image-to-Text task type	TC_114	To verify the functionality of send button without passing any input image	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input image	\N	NOT-TESTED	NEW	\N	Inference
115	TS_Inference_042	Validating Image-to-Text task type	TC_115	To verify the functionality of send button by passing an input image	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully (Try with different models)\n3.Upload input image and click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input image should be passed to the model once the user clicks send button 	\N	NOT-TESTED	NEW	\N	Inference
116	TS_Inference_043	Validating Image-to-Text task type	TC_116	To verify whether the output is being generated for an input image provided	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image with more size than  maximum allowed size\n4. Verify image doesn't upload\n5. Confirm error message displays reached the maximum allowed size 	The output should be generated for the input image provided	\N	NOT-TESTED	NEW	\N	Inference
117	TS_Inference_044	Validating Image-to-Text task type	TC_117	To verify the maximum number of input images that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give more than one input image at a time	\N	NOT-TESTED	NEW	\N	Inference
118	TS_Inference_045	Validating Image-to-Text task type	TC_118	To verify wehther the enter key is working to pass input image to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by selecting an input image , the input should be passed to the model	\N	NOT-TESTED	NEW	\N	Inference
119	TS_Inference_046	Validating Image-to-Text task type	TC_119	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded	\N	NOT-TESTED	NEW	\N	Inference
120	TS_Inference_047	Validating Image-to-Text task type	TC_120	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input images\n3. verify all the formats are supported	The model should be automatically unloaded and a fresh page should be displayed	\N	NOT-TESTED	NEW	\N	Inference
121	TS_Inference_048	Validating Image-to-Text task type	TC_121	To verify the format of input images supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The user should be able to give any format of input image	\N	NOT-TESTED	NEW	\N	Inference
122	TS_Inference_049	Validating Image-to-Text task type	TC_122	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output	\N	NOT-TESTED	NEW	\N	Inference
123	TS_Inference_050	Validating Speech-to-Text task type	TC_123	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Speech-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models	\N	NOT-TESTED	NEW	\N	Inference
594	TS_Models_027	new testing	TC_568	new testing	new testing	new testing	new testing	\N	not-tested	pending	new testing	Models
124	TS_Inference_051	Validating Speech-to-Text task type	TC_124	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down	\N	NOT-TESTED	NEW	\N	Inference
125	TS_Inference_052	Validating Speech-to-Text task type	TC_125	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
126	TS_Inference_053	Validating Speech-to-Text task type	TC_126	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU	\N	NOT-TESTED	NEW	\N	Inference
127	TS_Inference_054	Validating Speech-to-Text task type	TC_127	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's	\N	NOT-TESTED	NEW	\N	Inference
128	TS_Inference_055	Validating Speech-to-Text task type	TC_128	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
129	TS_Inference_056	Validating Speech-to-Text task type	TC_129	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down	\N	NOT-TESTED	NEW	\N	Inference
130	TS_Inference_057	Validating Speech-to-Text task type	TC_130	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point	\N	NOT-TESTED	NEW	\N	Inference
131	TS_Inference_058	Validating Speech-to-Text task type	TC_131	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)	\N	NOT-TESTED	NEW	\N	Inference
132	TS_Inference_059	Validating Speech-to-Text task type	TC_132	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)	\N	NOT-TESTED	NEW	\N	Inference
133	TS_Inference_060	Validating Speech-to-Text task type	TC_133	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task\n3. Click on "Speech-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0	\N	NOT-TESTED	NEW	\N	Inference
134	TS_Inference_061	Validating Speech-to-Text task type	TC_134	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model	\N	NOT-TESTED	NEW	\N	Inference
135	TS_Inference_062	Validating Speech-to-Text task type	TC_135	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU	\N	NOT-TESTED	NEW	\N	Inference
136	TS_Inference_063	Validating Speech-to-Text task type	TC_136	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path	\N	NOT-TESTED	NEW	\N	Inference
137	TS_Inference_064	Validating Speech-to-Text task type	TC_137	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
138	TS_Inference_065	Validating Speech-to-Text task type	TC_138	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Don't Upload input audio file\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
139	TS_Inference_066	Validating Speech-to-Text task type	TC_139	To verify the functionality of send button without passing any input audio	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input audio	\N	NOT-TESTED	NEW	\N	Inference
140	TS_Inference_067	Validating Speech-to-Text task type	TC_140	To verify the functionality of send button by passing an input audio	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully (Try with different models)\n3. Upload input audio file and click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input audio should be passed to the model once the user clicks send button 	\N	NOT-TESTED	NEW	\N	Inference
141	TS_Inference_068	Validating Speech-to-Text task type	TC_141	To verify whether the output is being generated for an input audio file	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file exceeding the maximum allowed time limit\n4. Verify upload doesn't succeed\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input audio provided	\N	NOT-TESTED	NEW	\N	Inference
142	TS_Inference_069	Validating Speech-to-Text task type	TC_142	To verify the maximum number of input audio's that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give more than one input audio at a time	\N	NOT-TESTED	NEW	\N	Inference
143	TS_Inference_070	Validating Speech-to-Text task type	TC_143	To verify wehther the enter key is working to pass input image to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input audio, the input should be passed to the model	\N	NOT-TESTED	NEW	\N	Inference
144	TS_Inference_071	Validating Speech-to-Text task type	TC_144	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded	\N	NOT-TESTED	NEW	\N	Inference
145	TS_Inference_072	Validating Speech-to-Text task type	TC_145	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input audio's\n3. verify all the formats are supported	The model should be automatically unloaded and a fresh page should be displayed	\N	NOT-TESTED	NEW	\N	Inference
146	TS_Inference_073	Validating Speech-to-Text task type	TC_146	To verify the format of input audio's supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The user should be able to give any format of input audio	\N	NOT-TESTED	NEW	\N	Inference
147	TS_Inference_074	Validating Speech-to-Text task type	TC_147	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select any Language and Load a Speech-to-Text model successfully\n3. Verify the user can be able to select any language from the dropdown	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output	\N	NOT-TESTED	NEW	\N	Inference
148	TS_Inference_075	Validating Speech-to-Text task type	TC_148	To verify the functionality of language selection dropdown  	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select any Language and Load a Speech-to-Text model successfully\n3. Upload an audio file\n4. Verify the output language against the selected language	The user should be able to select any language from the drop down	\N	NOT-TESTED	NEW	\N	Inference
149	TS_Inference_076	Validating Speech-to-Text task type	TC_149	To verify the selected language against the generated output 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The selected language and  the language of output generated should be same	\N	NOT-TESTED	NEW	\N	Inference
150	TS_Inference_077	Validating Image-to-Image task type	TC_150	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Image-to-Image task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models	\N	NOT-TESTED	NEW	\N	Inference
151	TS_Inference_078	Validating Image-to-Image task type	TC_151	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down	\N	NOT-TESTED	NEW	\N	Inference
152	TS_Inference_079	Validating Image-to-Image task type	TC_152	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
153	TS_Inference_080	Validating Image-to-Image task type	TC_153	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU	\N	NOT-TESTED	NEW	\N	Inference
154	TS_Inference_081	Validating Image-to-Image task type	TC_154	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's	\N	NOT-TESTED	NEW	\N	Inference
155	TS_Inference_082	Validating Image-to-Image task type	TC_155	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
156	TS_Inference_083	Validating Image-to-Image task type	TC_156	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down	\N	NOT-TESTED	NEW	\N	Inference
157	TS_Inference_084	Validating Image-to-Image task type	TC_157	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point	\N	NOT-TESTED	NEW	\N	Inference
158	TS_Inference_085	Validating Image-to-Image task type	TC_158	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)	\N	NOT-TESTED	NEW	\N	Inference
159	TS_Inference_086	Validating Image-to-Image task type	TC_159	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)	\N	NOT-TESTED	NEW	\N	Inference
160	TS_Inference_087	Validating Image-to-Image task type	TC_160	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task\n3. Click on "Image-to-Image-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0	\N	NOT-TESTED	NEW	\N	Inference
161	TS_Inference_088	Validating Image-to-Image task type	TC_161	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model	\N	NOT-TESTED	NEW	\N	Inference
162	TS_Inference_089	Validating Image-to-Image task type	TC_162	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU	\N	NOT-TESTED	NEW	\N	Inference
163	TS_Inference_090	Validating Image-to-Image task type	TC_163	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path	\N	NOT-TESTED	NEW	\N	Inference
164	TS_Inference_091	Validating Image-to-Image task type	TC_164	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
165	TS_Inference_092	Validating Image-to-Image task type	TC_165	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3.  Don't Upload input image and leave input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
595	TS_Users_055	hi	TC_569	hi	hi	hi	hi		not-tested	not-tested	hi	Users
166	TS_Inference_093	Validating Image-to-Image task type	TC_166	To verify the functionality of send button without passing any input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image and  leave the text input field empty \n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input image	\N	NOT-TESTED	NEW	\N	Inference
167	TS_Inference_094	Validating Image-to-Image task type	TC_167	To verify the functionality of send button by passing an input image and leaving the text input field empty	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully (Try with different models)\n3.Upload input image and enter input text click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input image should be passed to the model and should be able to get ouput also	\N	NOT-TESTED	NEW	\N	Inference
168	TS_Inference_095	Validating Image-to-Image task type	TC_168	To verify the functionality of send button by passing an input image and input text	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image with more size than  maximum allowed size\n4. Verify image doesn't upload\n5. Confirm error message displays reached the maximum allowed size 	The output image should be generated for the provided input image and input text	\N	NOT-TESTED	NEW	\N	Inference
169	TS_Inference_096	Validating Image-to-Image task type	TC_169	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input	\N	NOT-TESTED	NEW	\N	Inference
170	TS_Inference_097	Validating Image-to-Image task type	TC_170	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by selecting an input image, the input image should be passed to the model	\N	NOT-TESTED	NEW	\N	Inference
171	TS_Inference_098	Validating Image-to-Image task type	TC_171	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded	\N	NOT-TESTED	NEW	\N	Inference
172	TS_Inference_099	Validating Image-to-Image task type	TC_172	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed	\N	NOT-TESTED	NEW	\N	Inference
173	TS_Inference_100	Validating Image-to-Image task type	TC_173	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input images\n3. verify all the formats are supported	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output	\N	NOT-TESTED	NEW	\N	Inference
174	TS_Inference_101	Validating Image-to-Image task type	TC_174	To verify the format of input images supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to upload any format of images	\N	NOT-TESTED	NEW	\N	Inference
175	TS_Inference_102	Validating Text-to-Image task type	TC_175	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Text-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models	\N	NOT-TESTED	NEW	\N	Inference
176	TS_Inference_103	Validating Text-to-Image task type	TC_176	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down	\N	NOT-TESTED	NEW	\N	Inference
177	TS_Inference_104	Validating Text-to-Image task type	TC_177	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
178	TS_Inference_105	Validating Text-to-Image task type	TC_178	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU	\N	NOT-TESTED	NEW	\N	Inference
179	TS_Inference_106	Validating Text-to-Image task type	TC_179	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's	\N	NOT-TESTED	NEW	\N	Inference
180	TS_Inference_107	Validating Text-to-Image task type	TC_180	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match	\N	NOT-TESTED	NEW	\N	Inference
181	TS_Inference_108	Validating Text-to-Image task type	TC_181	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down	\N	NOT-TESTED	NEW	\N	Inference
182	TS_Inference_109	Validating Text-to-Image task type	TC_182	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point	\N	NOT-TESTED	NEW	\N	Inference
183	TS_Inference_110	Validating Text-to-Image task type	TC_183	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)	\N	NOT-TESTED	NEW	\N	Inference
184	TS_Inference_111	Validating Text-to-Image task type	TC_184	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)	\N	NOT-TESTED	NEW	\N	Inference
185	TS_Inference_112	Validating Text-to-Image task type	TC_185	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task\n3. Click on "Text-to-Image-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0	\N	NOT-TESTED	NEW	\N	Inference
186	TS_Inference_113	Validating Text-to-Image task type	TC_186	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model	\N	NOT-TESTED	NEW	\N	Inference
187	TS_Inference_114	Validating Text-to-Image task type	TC_187	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU	\N	NOT-TESTED	NEW	\N	Inference
188	TS_Inference_115	Validating Text-to-Image task type	TC_188	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path	\N	NOT-TESTED	NEW	\N	Inference
189	TS_Inference_116	Validating Text-to-Image task type	TC_189	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
190	TS_Inference_117	Validating Text-to-Image task type	TC_190	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Leave the input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded	\N	NOT-TESTED	NEW	\N	Inference
191	TS_Inference_118	Validating Text-to-Image task type	TC_191	To verify the functionality of send button without passing any input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Enter text input in the message field\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please enter the input	\N	NOT-TESTED	NEW	\N	Inference
192	TS_Inference_119	Validating Text-to-Image task type	TC_192	To verify the functionality of send button by passing an input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully (Try with different models)\n3. Enter text input and click "Send" button\n4. Verify model generates corresponding output\nConfirm output is displayed correctly in response area	The input should be passed to the model once the user clicks send button 	\N	NOT-TESTED	NEW	\N	Inference
193	TS_Inference_120	Validating Text-to-Image task type	TC_193	To verify whether the output image is being generated for an input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Enter text input exceeding the maximum allowed length\n4. Verify input field enforces character limit\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input provided	\N	NOT-TESTED	NEW	\N	Inference
194	TS_Inference_121	Validating Text-to-Image task type	TC_194	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in message field\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input	\N	NOT-TESTED	NEW	\N	Inference
195	TS_Inference_122	Validating Text-to-Image task type	TC_195	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input to the text box, the input should be passed to the model	\N	NOT-TESTED	NEW	\N	Inference
196	TS_Inference_123	Validating Text-to-Image task type	TC_196	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded	\N	NOT-TESTED	NEW	\N	Inference
197	TS_Inference_124	Validating Text-to-Image task type	TC_197	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed	\N	NOT-TESTED	NEW	\N	Inference
198	TS_Inference_125	Validating Text-to-Image task type	TC_198	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a text-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another text-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output	\N	NOT-TESTED	NEW	\N	Inference
199	TS_Inference_126	Validating concurrency	TC_199	To verify the concurency of text to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a image-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another image-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.	\N	NOT-TESTED	NEW	\N	Inference
200	TS_Inference_127	Validating concurrency	TC_200	To verify the concurency of image to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a speech-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another speech-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.	\N	NOT-TESTED	NEW	\N	Inference
201	TS_Inference_128	Validating concurrency	TC_201	To verify the concurency of speech to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a image-to-image model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another image-to-image model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.	\N	NOT-TESTED	NEW	\N	Inference
202	TS_Inference_129	Validating concurrency	TC_202	To verify the concurency of image to image task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a text-to-image model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another text-to-image model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.	\N	NOT-TESTED	NEW	\N	Inference
203	TS_Inference_130	Validating concurrency	TC_203	To verify the concurency of text to image task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.	\N	NOT-TESTED	NEW	\N	Inference
338	TS_Finetune_060	To validate Optimizer Settings	TC_338	Entering negative value for Learning Rate	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Learning rate field in Optimizer settings\n4. Enter a negative value (eg : -0.0011,-0.002  etc)\n5. Verify error message appears	Error : Learning rate should not be negative	Unable to give negative values to the Learning rate	PASS	COMPLETED	\N	Finetune
204	TS_Logs_001	To ensure that the application is accessible and the login page loads correctly.	TC_204	Verify Application URL Accessibility and Port Availability	Check for a stable internet connection	Steps: (GUI)\n1. The system is connected to a stable internet network and check if the required ports are open.\n2. Open the application URL in a supported web browser.(chrome,edge)	"1.The application should be reachable, and no network-related errors should appear.\n"\n2.The login page should load without errors  with specified port 	"1.The application is reachable, and no network-related errors should appear.\n"\n2.The login page is loaded without errors with specified port.	PASS	COMPLETED	\N	logs
205	TS_Logs_002	To ensure all required elements (Email, Password, Eye Icon, Sign In, and Forgot Password) are present.	TC_205	Verify the Presence of Required Elements on the Login Page	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application.\n2.Navigate to the login page.\n3.Check for the presence of the following elements:\n- Email input field\n- Password input field\n- Eye icon (password visibility toggle)\n- Sign In button\n- Forgot Password link	All elements should be visible and correctly labeled.	All elements are visible and correctly labeled.	PASS	COMPLETED	\N	logs
206	TS_Logs_003	To ensure all required elements (Email, Password, Eye Icon, Sign In, and Forgot Password) are present and functional on the login page.	TC_206	Verify Functionality of Login Page Elements	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1.Click on the Email input field and enter a valid email.\n2.Click on the Password input field and enter a valid password.\n3.Click the Eye icon to toggle password visibility.\n4.Click the "Sign In" button after entering credentials.\n5.Click on the "Forgot Password" link.	1.Users should be able to type in both fields.\n2.Clicking the Eye icon should toggle password visibility (masked/unmasked).\n3.The "Sign In" button should be clickable and proceed to authentication.\n4.Clicking "Forgot Password" should give a pop up for password recovery	1.User is able to type in both fields.\n2.Clicking the Eye icon should toggle password visibility (masked/unmasked).\n3.The "Sign In" button is clickable and proceed to authentication.\n4.Clicking "Forgot Password" shows password recovery pop up 	PASS	COMPLETED	\N	logs
207	TS_Logs_004	Verify that the user can successfully log in with the correct email and password.	TC_207	Verify login with valid credentials	1.The application should be accessible, and the login page should be functional.\n2.A valid test account (email & password) should be available.\n3.A stable internet connection and a supported browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Enter a valid email and password. \n3. Click the "Sign In" button.	User should be logged in and redirected to the Dashboard	User is able to logged in and redirected to the Dashboard	PASS	COMPLETED	\N	logs
208	TS_Logs_005	Verify that the system does not allow login with both incorrect email and password	TC_208	Verify login with Invalid Email & Invalid Password	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application.\n 2. Enter an invalid email or password. \n3. Click "Sign In".	"Invalid Credentials" error message should be displayed.	"Invalid Credentials" error message should be displayed.	PASS	COMPLETED	\N	logs
209	TS_Logs_006	Verify that the system does not allow login with empty fields	TC_209	Verify login with empty fields	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Leave the email and password fields blank. \n3. Click "Sign In".	A pop-up msg comes "please fill out this field"	A pop-up msg comes "please fill out this field"	PASS	COMPLETED	\N	logs
210	TS_Logs_007	Verify that the system does not allow login with a valid email but an incorrect password.	TC_210	Verify login with Valid Email & Invalid Password	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3.Enter a valid email (e.g., user@example.com).\n4.Enter an invalid password (e.g., WrongPass123).\n5.Click the Sign In button.	1.An error message should appear: "Incorrect password. Please try again."\n2.The user should not be logged in.	1.An error message should appear: "Incorrect password. Please try again." instead of this invalid credentials is poped up \n2.The user should not be logged in.	PASS	COMPLETED	\N	logs
211	TS_Logs_008	 Verify that the system does not allow login with an incorrect email and a valid password.	TC_211	Verify login with Invalid Email & Valid Password	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3.Enter an invalid email (e.g., wronguser@example.com).\n4.Enter a valid password (e.g., Correct@Pass123).\n5.Click the Sign In button.	1.An error message should appear: "User not found. Please check your email."\n2.The user should not be logged in.	1.An error message should appear: "User not found. Please check your email."instead of this invalid credentials is poped up.\n2.The user should not be logged in.	PASS	COMPLETED	\N	logs
212	TS_Logs_009	Ensure that the password input field masks the entered characters for security.	TC_212	Verify password masking	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3.Click on the password input field.\n4.Type any password (e.g., Test@123).\n5.Observe how the entered password is displayed.\n6.Click on the "Eye" icon to toggle visibility.	"1.The password should be masked as dots or asterisks while typing.\n"\n2.Clicking the "Eye" icon should reveal the password in plain text.\n3.Clicking the "Eye" icon again should re-mask the password.	"1.The password is masked as dots or asterisks while typing.\n"\n2.Clicking the "Eye" icon should reveal the password in plain text.\n3.Clicking the "Eye" icon again should re-mask the password.	PASS	COMPLETED	\N	logs
213	TS_Logs_010	Confirm that users can request a password reset and receive a reset email.	TC_213	Verify "Forgot Password" functionality	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n4. Click "Forgot Password?". \n5. Enter a registered email. \n6. Submit the request.\t	A reset password email should be sent to the user.\t	A reset password email is sent to the user.\t	PASS	COMPLETED	\N	logs
596	TS_Models_028	hiii this is me testing	TC_570	hiii this is me testing	hiii this is me testing	hiii this is me testing	hiii this is me testing	\N	not-tested	pending	hiii this is me testing	Models
214	TS_Logs_011	 Ensure that inactive users are logged out automatically after a predefined idle period.	TC_214	Verify session timeout	1.The application should be accessible, and the login page should be functional.\n2.A valid test account (email & password) should be available.\n3.A stable internet connection and a supported browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3. Enter a valid email and password. \n4. Click the "Sign In" button.\n5. Login successfully.\n6. Stay inactive for a specified time (e.g., 10 mins).	User should be logged out automatically after session timeout.	User should be logged out automatically after session timeout.	PASS	COMPLETED	\N	logs
215	TS_Logs_012	 Validate that the login page displays correctly across various devices and screen resolutions.	TC_215	Verify UI responsiveness on different screen sizes	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3. Open the login page on desktop, tablet, and mobile resolutions.	UI elements should be properly aligned and readable.	UI elements should be properly aligned and readable.	PASS	COMPLETED	\N	logs
216	TS_Logs_013	Check whether the system treats email input as case-insensitive or case-sensitive during login.	TC_216	Verify login with case-sensitive email	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3. Enter a registered email in a different case (e.g., "USER@EXAMPLE.COM" instead of "user@example.com"). \n4. Enter the correct password and log in.	Login should be successful if the email is case-insensitive.	"The user is redirected back to the login page after logout\t"	PASS	COMPLETED	\N	logs
217	TS_Logs_014	Ensure that security measures like account lockout or CAPTCHA activation trigger after several failed login attempts.	TC_217	Verify login after multiple failed attempts	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3. Enter incorrect credentials multiple times (e.g., 5 times). \n4. Try logging in again.	The system should lock the account temporarily or show a CAPTCHA.	The user is redirected back to the login page after logout	PASS	COMPLETED	\N	logs
218	TS_Logs_015	Confirm that users are redirected to the login page when trying to access a restricted area after logging out.	TC_218	Verify login page redirection after logout	1.The application should be accessible via a valid URL.\n2.A stable internet connection must be available.\n3.A supported web browser should be used.	Steps: (GUI)\n1. Launch the application. \n2. Open the login page.\n3. Enter a valid email and password. \n4. Click the "Sign In" button.\n5. Login successfully. \n6. Logout from the dashboard. \n7. Try accessing the dashboard URL directly.	The user should be redirected back to the login page.\t	The user is redirected back to the login page after logout\t	PASS	COMPLETED	\N	logs
219	TS_Logs_016	To verify that only an Admin user can create new users in the system and ensure proper navigation to the "Create User" page.	TC_219	Verify User Creation (Admin Only)	1.The application should be up and running.\n2.The user should have Admin privileges to access the "Create User" option.\n3.A valid admin account should exist in the system.	Steps: (GUI)\n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, the user is redirected to the Dashboard.\n5.On the dashboard, locate the User icon at the top-right corner.\n6.Click on the User icon to open the dropdown menu.\nVerify that the dropdown menu contains the following options:\n-Account Settings\n-Create User\n-Logout\n7.Click on "Create User".\n8.The system navigates to the "User Management - 9.Create User" page.\n10.On the "Create User" page:\n-Enter a Username.\n-Enter a valid Email.\n-Enter and confirm the Password.\n-Select a Role from the dropdown (e.g., Read, Write, Admin).\n11.Click on the "Create User" button.\n12.Verify that a success message appears and the user is added to the system.\n13.Navigate to the "Manage Users" section to confirm the newly created user is listed.	"1.Only Admin users should see the ""Create User"" option.\n"\n"2.After clicking ""Create User,"" the user should be taken to the User Management page.\n"\n"3.A new user should be created successfully with the provided credentials and role.\n"\n4.The newly created user should appear in the "Manage Users" list.	"1.Only Admin users should see the ""Create User"" option.\n"\n"2.After clicking ""Create User,"" the user is taken to the User Management page.\n"\n3.A new user is created successfully with the provided credentials and role.\n4.The newly created user should appear in the "Manage Users" list.	PASS	COMPLETED	\N	logs
220	TS_Logs_017	To verify that a user cannot be created if any of the required fields are left empty and proper validation messages are displayed	TC_220	Verify that the system does not allow user creation with empty fields	1.The application should be up and running.\n2.The user should be logged in with Admin privileges.\n3.The Admin should be on the "User Management - Create User" page.	Steps: (GUI) \n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, navigate to the Dashboard.\n5.Click on the User icon at the top-right corner.\n6.Select "Create User" from the dropdown.\n7.The system navigates to the Create User page.\n8.Click the "Create User" button without filling any fields.\n9.Observe the validation messages.	"1.The system should not allow user creation.\n"\n"2.Each empty field should display an appropriate validation message:\n-Username: ""Please fill this field.""\n-Email: ""Please enter a valid email.""\n-Password: ""Password is required.""\n-Confirm Password: ""Please confirm your password.""\n-Role: ""Please select a role."""	"1.The system should not allow user creation.\n"\n"2.Each empty field is display an appropriate validation message:\n-Username: ""Please fill this field.""\n-Email: ""Please enter a valid email.""\n-Password: ""Password is required.""\n-Confirm Password: ""Please confirm your password.""\n-Role: ""Please select a role."""	PASS	COMPLETED	\N	logs
339	TS_Finetune_061	To validate Optimizer Settings	TC_339	Entering negative value for Beta1	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Beta1 field in Optimizer settings\n4. Enter a negative value (eg : -0.9, -0.4  etc)\n5. Verify error message appears	Error : Beta1 should not be negative	Unable to give negative values to the Beta1	PASS	COMPLETED	\N	Finetune
221	TS_Logs_018	To ensure that the password follows the security guidelines and matches the confirmation password before allowing user creation.	TC_221	Verify that password requirements and matching constraints are enforced	1.The application should be up and running.\n2.The user should be logged in with Admin privileges.\n3.The Admin should be on the "User Management - Create User" page.	Steps: (GUI) \n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, navigate to the Dashboard.\n5.Click on the User icon at the top-right corner.\n6.Select "Create User" from the dropdown.\n7.The system navigates to the Create User page.\n8.Fill in the following details:\n-Username: TestUser\n-Email: testuser@example.com\n-Password: password123 (Invalid: does not start with a capital letter)\n-Confirm Password: password1234 (Does not match)\n-Role: Read\n9.Click the "Create User" button.\n10.Observe the validation messages.	1.The system should not allow user creation.                                                                                                                                   2.The following error messages should appear:\nPassword Requirements Not Met:\n-"Password must start with a capital letter."\n-"Password must be at least 8 characters long."\n-"Password must be alphanumeric."                                                                                                     3.Passwords Do Not Match:\n-"Passwords must be the same."	"1.The system should not allow user creation.\n"\nPassword must be at least 8 characters long, even it is not alpha numeric it is creating the new user\n"3.Passwords Do Not Match:\n-""Passwords must be the same."""	PASS	COMPLETED	\N	logs
222	TS_Logs_019	To verify that only an Admin user can create new users in the system and ensure created user is listed correctly 	TC_222	Verify Manage User 	1.The application should be up and running.\n2.The user should have Admin privileges to access the "Create User" option.\n3.A valid admin account should exist in the system.	Steps: (GUI) \n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, the user is redirected to the Dashboard.\n5.On the dashboard, locate the User icon at the top-right corner.\n6.Click on the User icon to open the dropdown menu.\nVerify that the dropdown menu contains the following options:\n-Account Settings\n-Create User\n-Logout\n7.Click on "Create User".\n8.The system navigates to the "User Management - 9.Create User" page.\n10.After success message appears move to User managment and confirm the newly created user is listed correctly as we created\n11.Try to delete User it should ask for the conformation to delete a user	"1.Newly created user is listed correctly as we have created\n"\n2.While deleting a User it should ask for Conformation	"1.Newly created user is listed correctly as we have created\n"\n2.While deleting a User it should ask for Conformation	PASS	COMPLETED	\N	logs
223	TS_Logs_020	Verify that the error message displayed during user creation (e.g., "Password does not match") disappears when navigating to a different section like "Manage Users".	TC_223	Verify Error Message Disappears on Navigation	1.The application should be up and running.\n2.The user should have Admin privileges to access the "Create User" option.\n3.A valid Admin account should exist in the system.	Steps: (GUI)\n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, navigate to the Dashboard.\n5.Click on the User icon at the top-right corner.\n6.From the dropdown, select "Create User".\n7.Click the "Create User" page:\n-Enter a Username.\n-Enter a valid Email.\n-Enter a Password and a different Confirm Password (mismatch).\n-Select a Role from the dropdown.\n8.Click on the "Create User" button.\n9.Verify that an error message appears: "Password does not match".\n10.Navigate to the "Manage Users" section.\n11.Check if the error message persists or disappears.	1.The error message "Password does not match" should appear on the Create User page.\n2.When navigating to another section (Manage Users), the error message should disappear.	1.The error message "Password does not match" should appear on the Create User page.\n2.When navigating to another section (Manage Users), the error message is disappearing.	PASS	COMPLETED	\N	logs
224	TS_Logs_021	Verify that when an Admin deletes a newly created user while the user is logged in on another tab, the deleted user's session should be handled properly, and the user should not be able to access the application.	TC_224	Verify User Deletion and Session Handling	1.The application should be up and running.\n2.The user should have Admin privileges to access the "Create User" option.\n3.A valid Admin account should exist in the system.\n4.The Admin user should have created a new user successfully.\n5.The newly created user should be logged in using a different browser tab.	Steps: (GUI)\n1.Launch the application and log in with Admin credentials.\n2.Navigate to the "Create User" page.\n3.Create a new user by providing valid credentials and selecting a role.\n4.Verify that the user is successfully created.\n5.Open a new tab and log in using the newly created user's credentials.\n6.In the Admin session (previous tab), navigate to the "Manage Users" section.\n7.Locate the newly created user and delete the account.\n8.Navigate back to the new user's session (second tab).\n9.Check if the page is still accessible or if the session is terminated.	1.After deletion by the Admin, the new user's session should be terminated, and they should be logged out automatically.\n2.If the user tries to perform any action, they should see an error message like "User does not exist" or be redirected to the login page.	The deleted user's session remains active, and the user can still access the application even after deletion.	FAIL	NEEDS-RETEST	\N	logs
225	TS_Logs_022	Trying to Create new user with same username or email id	TC_225	Verify Create user 	1.The application should be up and running.\n2.The user should have Admin privileges to access the "Create User" option.\n3.A valid Admin account should exist in the system.	Steps: (GUI)\n1.Launch the application.\n2.Enter valid Admin credentials (Email & Password).\n3.Click on the "Login" button.\n4.After successful login, navigate to the Dashboard.\n5.Click on the User icon at the top-right corner.\n6.From the dropdown, select "Create User".\n7.Click the "Create User" page:\n-Create a new user with same username or email which is already exist 	Should show the message like "User already exist"	Should show the message like "User already exist"	PASS	COMPLETED	\N	logs
340	TS_Finetune_062	To validate Optimizer Settings	TC_340	Entering negative value for Beta2	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Beta2 field in Optimizer settings\n4. Enter a negative value (eg : -0.95, -0.48  etc)\n5. Verify error message appears	Error : Beta2 should not be negative	Unable to give negative values to the Beta2	PASS	COMPLETED	\N	Finetune
511	TS_Datasets_029	Validating file upload	TC_511	Clicking on cancel button during file upload is in progress to the default datasets path on host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. A dataset  file should be available in the remote system.	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
226	TS_Logs_023	Verify that when updating the name in "Account Settings," entering another user's credentials during verification does not update the wrong user's details.	TC_226	Incorrect User Credentials Affecting Account Setting	1.The application should be up and running.\n2.The user should have valid credentials to access the system.\n3.The user should be logged in to their account.\nThe "Account Settings" page should be accessible.\n5.The system should require identity verification before updating personal details.	Steps: (GUI)\n1.Launch the application and log in with valid credentials (User A).\n2.Navigate to the Account Settings page.\n3.Under General Information Settings, modify the New Name field.\n4.Click on Update Name.\n5.A "Verify Your Identity" pop-up appears, prompting for email and password.\n6.Enter credentials of another user (User B) instead of User A.\n7.Click Verify and observe the result.\n8.After verification, check whose name is updated in the system.	If incorrect credentials are entered, the system should display an error message like "Invalid credentials" and not allow the update.\nThe name should be updated only for the user who initiated the change (User A).\nThe system should not update another user's profile (User B).	If incorrect credentials are entered, the system should display an error message like "Invalid credentials" and not allow the update.\nThe name should be updated only for the user who initiated the change (User A).\nThe system should not update another user's profile (User B).	PASS	COMPLETED	\N	logs
227	TS_Logs_024	Check whether eye icon is present in account settings while updating the name	TC_227	Verify Account Settings while updating the name	1.The application should be up and running.\n2.The user should have valid credentials to access the system.\n3.The user should be logged in to their account.\nThe "Account Settings" page should be accessible.\n5.The system should require identity verification before updating personal details.	Steps: (GUI)\n1.Launch the application and log in with valid credentials (User A).\n2.Navigate to the Account Settings page.\n3.Under General Information Settings, modify the New Name field.\n4.Click on Update Name.\n5.A "Verify Your Identity" pop-up appears, prompting for email and password.\n6.Click on the Email input field and enter a valid email.\n7.Click on the Password input field and enter a valid password.\n8.Click the Eye icon to toggle password visibility.	Clicking the "Eye" icon should reveal the password in plain text.	Clicking the "Eye" icon is revealing the password in plain text.	PASS	COMPLETED	\N	logs
228	TS_Logs_025	To verify that the system correctly validates the New Name field in the Account Settings page and prevents users from entering special characters when updating their name.	TC_228	Verify Account Settings while updating the name	1.The application should be up and running.\n2.The user should have valid credentials to access the system.\n3.The user should be logged in to their account.\nThe "Account Settings" page should be accessible.\n5.The system should require identity verification before updating personal details.	Steps: (GUI)\n1.Launch the application and log in with valid credentials (User A).\n2.Navigate to the Account Settings page.\n3.Under General Information Settings, modify the New Name field.\n4. Set new name with special characters \n5.Click on Update Name.	"An error message should be displayed, such as:\n""Invalid characters in name"""\nThe name should not be updated in the account settings.	No error message is displayed. \nThe name is updated in the account settings.	PASS	COMPLETED	\N	logs
229	TS_Logs_026	Verify that the password field in Security Settings:\n-Is masked by default.\n-Has an eye toggle to show/hide the password.\n-Accepts only alphanumeric characters.\n-Ensures the new password and confirm password match before allowing an update	TC_229	 Verify Password Field Functionality in Security Settings	1.The application should be up and running.\n2.The user should be logged in with valid credentials.\n3.The user should navigate to Account Settings > Security Settings.	Steps: (GUI):\n1.Launch the application.\n2.Enter valid user credentials (Email & Password).\n3.Click on the "Login" button.\n4.Navigate to Account Settings from the user profile dropdown.\n5.Click on the "Security" tab.\n6.Locate the Change Password section.\n7.Enter a new password in the New Password field.\n8.Verify the following:\n-The password should be masked by default.\n-An eye toggle should be available to show/hide the password.\n-The system should only allow alphanumeric characters.\n-Enter a different password in the Confirm Password field.\n9.Click on the Update Password button.\n10.Observe the validation messages displayed.	Password should be masked by default.\nEye toggle should show/hide the password.\nOnly alphanumeric passwords should be accepted.\nError message should appear if passwords do not match.	 Password is masked correctly.\nEye toggle is showing/hideing the password.\nOnly alphanumeric passwords should be accepted.\n Error message appears	PASS	COMPLETED	\N	logs
341	TS_Finetune_063	To validate Optimizer Settings	TC_341	Entering negative value for weight decay	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on weight decay field in Optimizer settings\n4. Enter a negative value (eg : -0.011,-0.02  etc)\n5. Verify error message appears	Error : weight decay should not be negative	Unable to give negative values to the weight decay	PASS	COMPLETED	\N	Finetune
342	TS_Finetune_064	To validate Optimizer Settings	TC_342	Entering negative value for Epsilon	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Epsilon field in Optimizer settings\n4. Enter a negative value (eg : -1e-8, -2e-8  etc)\n5. Verify error message appears	Error : Epsilon should not be negative	Unable to give negative values to the Epsilon	PASS	COMPLETED	\N	Finetune
287	TS_Finetune_008	Validate Model Configuration	TC_287	Selecting task type for the model	1. Should be able to login to the GUI. (GUI)\n2. The dataset path should be in the default path /usr/local/datasets on the dataset page, and model path should be in  /media/models in models page \n3. Test models and datasets should be available in the respective default paths of dataset page and model page	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on select a model option under Model Path in Model Configuration\nScenario 1:\n1. Select Llama-2-7b-hf from the dropdown\n2. Click on Task Type dropdown\n3. Select Text Generation option\nScenario 2:\n1. Select Llama-2-7b-hf from the dropdown\n2. Click on Task Type dropdown\n3. Select Image Classification option\n	Scenario 1:\nThe selected task type should reflect in the configuration summary	The selected task type is reflected in the configuration summary	FAIL	NEEDS-RETEST	\N	Finetune
343	TS_Finetune_065	To validate Optimizer Settings	TC_343	Entering LR Scheduler mode beyond 5	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on LR Scheduler mode field in Optimizer settings\n4. Enter a number beyond 5 (eg: 7, 8 etc)\n5. Verify error message appears	Error : LR Scheduler should not exceed 5	Unable to give values beyond 5 to the LR Scheduler mode	PASS	COMPLETED	\N	Finetune
344	TS_Finetune_066	To Validate LoRA Configuration	TC_344	To verify the enabling, disabling LoRA and selecting LoRA Task Type.	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on LoRA Configuration\n4. Enable LoRA \n5. Verify enable_lora set to true in the configuration summary\n6. Verify lora_rank and lora_alpha set to default values in the configuration summary\n7. Verify LoRA Task Type is set to CAUSAL_LM and remains not editable	Enabling, disabling LoRA and selecting LoRA Task Type(CAUSAL_LM) should work as expected	Enabling and disabling LoRA is working fine but middleware only supports CAUSAL_LM as LoRA Task Type but when I give random text instead of CAUSAL_LM. I am able to start finetuning	PASS	COMPLETED	Make that LoRA Task Type field as unchangable	Finetune
345	TS_Finetune_067	To validate Path Configuration	TC_345	To verify the mount point is actually mounted to aiDAPTIV drive or not	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3.First unmount the aiDAPTIV nvme drive\n4.Now click on select mount point from path configuration\n5. Verify still the mount points is avalable to select	The particualar mount point which is unmounted from the aiDAPTIV nvme drive should not be available to select as a mount point	Even though the aiDAPTIV nvme drive is unmounted still the same mount point is available for selection	PASS	COMPLETED	\N	Finetune
346	TS_Finetune_068	To validateModel Configuration	TC_346	Disable Search Bar and Show "No Model Available" When No Models Are Present	Preconditions:\n1.The fine-tune page must be accessible.\n2.The model directory path selected should contain no models (e.g., an empty or incorrect directory).\n3.The user should have the necessary permissions to access the fine-tune page.	Steps:\n1.Login to the GUI.\n2.Navigate to the MODELS page.\n3.Select a model path where no models are present.\n4. Navigate to the fine-tune page\n5.Verify that the model selection dropdown does not contain any models.\n6.Check if the search bar in the model selection field is disabled.\n7.Observe if a message like "No model is available" is displayed.	Search bar is disabled and "No model is available" message is displayed.	Search bar is Enabled and "No model is available" message is not displayed.\n	PASS	COMPLETED	\N	Finetune
347	TS_Finetune_069	To validateModel Configuration	TC_347	Error Handling When Starting Fine-Tuning Without Selecting Model or Dataset	Preconditions:\n1.The fine-tune page must be accessible.\n2.The model directory path selected should contain no models (e.g., an empty or incorrect directory).\n3.The user should have the necessary permissions to access the fine-tune page.\n4. No model or dataset is selected	Steps (GUI):\n1.Login to the MiPhi GUI.\n2.Navigate to the Fine-tuning page.\n3.Without selecting any model or dataset, click the "Start Fine-Tuning" button.\n4.Observe the error message displayed by the system.\n5.Verify if the system correctly highlights the missing configurations (Model and Dataset sections should open automatically).	1.The system should display an appropriate error message: "Select Model" or "Select Dataset".	1. The system incorrectly shows a batch size error instead of the expected "Select Model" or "Select Dataset" error.	PASS	COMPLETED	\N	Finetune
289	TS_Finetune_010	Validate Model Configuration	TC_289	Giving Non-negative number  for max seq len.	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Max Sequence Length field in Model Configuration\n4. Enter a positive number (e.g., 2048)\n5. Verify the value in configuration summary	The entered max seq len should reflect in the configuration summary	The entered max seq len is reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
230	TS_Models_001	\N	TC_230	Verify that the default model path is correctly displayed in the GUI, ensure that the path exists within the GUI container on the host system, and confirm that all available models within that path are listed correctly in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. /media/models/ path exists inside the container  with at least one model.\n\n4. SSH access to the host system is available.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Check if the default path /media/models/ is shown.\n\n5. Verify if models are listed under this path in the GUI.\n\n6. SSH into the host system.\n\n7. Run the following to check inside the container:\ndocker exec -it <container_name> ls /media/models/\n\n8. Confirm the models listed in the GUI match those in the container.	1. Able to open the GUI in the browser.\n\n2. Successfully logged into the GUI.\n\n3. Navigated to the Models page without issues.\n\n4. Default model path /media/models/ is displayed correctly.\n\n5. Available models under /media/models/ are listed in the GUI.\n\n6. SSH connection to the host system is successful.\n\n7. Container lists contents of /media/models/ without errors.\n\n8. Models listed in the GUI match the contents of /media/models/ inside the container.	\N	PASS	COMPLETED	\N	Models
231	TS_Models_002	\N	TC_231	Verify that when a valid custom model path is provided, the GUI correctly accesses the specified directory and lists all available models present in that path.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to host system.\n\n4. A valid custom model path exists in the container (e.g., /custom_models/) and contains model directories.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter a valid custom model path (e.g., /custom_models/) in the input field.\n\n5. Click the Search button.\n\n6. Verify that available models are listed correctly in the GUI.\n\n7. SSH into the host system.\n\n8. Run the following to verify model directories:\ndocker exec -it <container_name> ls /custom_models/\n\n9. Cross-check if the listed models in the GUI match with the container’s directory contents.	1. GUI opens successfully in the browser.\n\n2. Login is successful using valid credentials.\n\n3. Navigated to the Models page without any issues.\n\n4. Able to enter the valid custom model path /custom_models/ in the input field.\n\n5. Search button works and triggers model lookup.\n\n6. Models present in /custom_models/ are displayed correctly in the GUI.\n\n7. SSH connection to the host system is established successfully.\n\n8. Command executes successfully and lists contents of /custom_models/ inside the container.\n\n9. Models listed in the GUI match exactly with the directories listed inside the container.	\N	PASS	COMPLETED	\N	Models
232	TS_Models_003	\N	TC_232	Verify that when no model path is provided (i.e., the path field is empty or removed), the GUI does not display any models and handles the absence of a model path gracefully without errors	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Clear the model path input field (ensure it’s empty).\n\n5. Click the Search button.\n\n6. Verify that no models are displayed in the list.	1. GUI loads successfully in the browser.\n\n2. User logs in without any authentication issues.\n\n3. Models Page opens and is fully functional.\n\n4. Model path input field is cleared successfully and remains empty.\n\n5. Search button responds without any crash or freeze.\n\n6. No models are displayed; GUI shows a message like "No path provided" or "No models found" without any errors or unexpected behavior.	\N	PASS	COMPLETED	\N	Models
233	TS_Models_004	\N	TC_233	 Verify navigation to the Fine-tuning page under different model path conditions\na. Without providing any model path\nb. With an invalid model path (non-existent on the host system)\nc. With a valid model path where no models are available	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to host system.\n\n4. A valid custom model path (e.g., /media/models/) exists in the container without  any model directories.\n\n5. An invalid model path (e.g., /random/path) 	Open the GUI in a browser.\nLogin using valid credentials.\nNavigate to the Models Page.\n\na. Without providing any model path\nEnsure the model path input is empty.\nClick the Search button.\nClick on the Fine-tuning tab/page.\nVerify that you are not redirected to the Fine-tuning page\n\nb. With an invalid model path\nEnter an invalid path (e.g., /invalid/path) in the model path input field.\nClick the Search button.\nObserve that no models are listed and throws error.\nClick on the Fine-tuning tab/page.\nVerify that you are not redirected to the Fine-tuning page.\n\nc. With a valid model path\nEnter a valid model path (e.g., /media/models/).\nClick the Search button.\nConfirm that no models are listed.\nClick on the Fine-tuning tab/page.\nVerify that you are not redirected to the Fine-tuning page.	GUI loads successfully in the browser.\nUser logs in without any issues.\nModels page opens properly.\n\nInput field is empty.\nNo models are listed after clicking Search.\nUser is not redirected to the Fine-tuning page.\n\nInvalid model path is accepted by input.\nNo models are displayed.\nAn appropriate error or warning is shown.\nUser is not redirected to the Fine-tuning page.\n\nValid model path is accepted by input.\nNo models are listed (if directory is empty).\nGUI handles it without error.\nUser is not redirected to the Fine-tuning page.	\N	PASS	COMPLETED	\N	Models
234	TS_Models_005	\N	TC_234	Verify that an invalid or non-existent model path results in no models listed and a clear error or warning in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to host system (needed to confirm invalid path).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter an invalid or non-existent model path (e.g., /invalid_model_path) in the input field.\n\n5. Click the Search button.\n\n6. Verify that no models are listed in the GUI.\n\n7. Confirm that a clear error or warning message is shown indicating the path is invalid or unavailable.\n\n8. SSH into the host system and verify the directory does not exist:\ndocker exec -it <container_name> ls /invalid_model_path  	1. GUI opens successfully in the browser.\n\n2. User logs in without any errors.\n\n3. Models page is displayed correctly.\n\n4. Invalid path is entered into the input field.\n\n5. Search button is clickable and triggers the check.\n\n6. No models are listed in the GUI.\n\n7. A clear error or warning message appears, indicating the path is invalid or unavailable.\n\n8. Command confirms that /invalid_model_path does not exist inside the container.	\N	PASS	COMPLETED	\N	Models
290	TS_Finetune_011	Validate Model Configuration	TC_290	Clicking finetune button without max seq len	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Configure other required fields in Model Configuration\n4. Leave Max Sequence Length field empty (remove default value)\n5. Scroll down and click Start Finetuning button	Error : Please provide a valid max seq len	Error : Please provide a valid max seq len	PASS	COMPLETED	\N	Finetune
235	TS_Models_006	\N	TC_235	Verify that the custom model path remains persistent after refreshing the models page.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A valid custom model path exists in the container (e.g., /custom_models/) with model directories.\n\n4. SSH access to host system (optional, to verify directory contents).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter a valid custom model path (e.g., /custom_models/) in the input field.\n\n5. Click the Search button.\n\n6. Confirm models from the custom path are listed.\n\n7. Refresh the page (F5 or browser reload).\n\n8. Verify that the custom model path is still present in the input field.\n\n9. Ensure that the models are re-listed without needing to re-enter the path.	1. GUI is accessible and loads successfully in the browser.\n\n2. User is authenticated and logged in successfully.\n\n3. Models Page is displayed without any issues.\n\n4.Custom model path is entered successfully.\n\n5. Search action is triggered without any error.\n\n6. Models present under /custom_models/ are listed accurately in the GUI.\n\n7. Page refresh completes successfully.\n\n8. The custom model path remains unchanged in the input field after the refresh.\n\n9. Models from the custom path are re-displayed without needing to re-enter the path.	\N	PASS	COMPLETED	\N	Models
236	TS_Models_007	\N	TC_236	Verify that the GUI lists only valid model directories, ignoring unrelated folders in the given model path.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A valid model path (e.g., /media/models/) exists with:\nSome valid model directories.\nSome unrelated/non-model folders (e.g., text files, logs, temp folders).\n\n4. SSH access to host system to verify contents.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Check if the default path /media/models/ is shown.\n\n5. Verify that only valid model directories are listed in the GUI.\n\n6. SSH into the host system.\n\n7. Run:\ndocker exec -it <container_name> ls /media/models/\n\n8. Cross-check the GUI list excludes unrelated folders or files.	GUI loads successfully in the browser.\n\nLogin is successful with valid credentials.\n\nModels Page is displayed correctly.\n\nDefault model path /media/models/ is pre-filled or visible in the input field.\n\nOnly valid model directories (e.g., containing expected structure/files) are shown in the GUI.\n\nSSH connection to the host system is successful.\n\nCommand runs without errors and lists contents of /media/models/ inside the container.\n\nGUI displays only valid models; unrelated files/folders (e.g., .txt, .log, temp files) are not shown.	\N	PASS	COMPLETED	\N	Models
237	TS_Models_008	\N	TC_237	Verify that clicking the eye icon opens a model preview and displays all relevant details accurately	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. At least one model is available in the default or custom path (e.g., /media/models/).\n\n4. SSH access to host system (for validation).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure a model is listed in the models list.\n\n5. Click on the eye icon corresponding to a listed model.\n\n6. Verify a preview pop-up opens showing model details (e.g., model name, path, size, etc.,).\n\n7. SSH into the host system and run:\ndocker exec -it <container_name> ls -lh /media/models/<model_name>/\nto validate file size and structure match the preview details.	GUI opens successfully in the browser.\n\nUser logs in successfully with valid credentials.\n\nModels Page loads without issues.\n\nAt least one model is visible in the models list.\n\nClicking the eye icon triggers a model preview popup.\n\nThe popup displays correct model details, including name, path, and size.\n\nSSH access and command execution are successful; file size and structure match the preview details shown in the GUI.	\N	PASS	COMPLETED	\N	Models
238	TS_Models_009	\N	TC_238	Verify that deleting a model from the GUI removes it from the list and confirms deletion on the host system.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. At least one model is available in the default or custom path (e.g., /media/models/).\n\n4. SSH access to host system.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Identify a model listed under the model path.\n\n5. Click the delete icon for that model.\n\n6. Confirm the deletion in the prompt.\n\n10. Verify that the model is removed from the list in the GUI.\n\n11. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/\n\n12. Ensure that the deleted model directory no longer exists.	GUI opens successfully in the browser.\n\nUser logs in successfully with valid credentials.\n\nModels Page loads correctly.\n\nAt least one model is listed under the specified model path.\n\nClicking the delete icon initiates a deletion prompt.\n\nUpon confirmation, the deletion process begins.\n\nThe model is removed from the list in the GUI.\n\nSSH access to the host system is successful.\n\nRunning the ls command confirms that the deleted model directory no longer exists in the specified path.	\N	PASS	COMPLETED	\N	Models
239	TS_Models_010	\N	TC_239	Verify that the search correctly filters available models and shows no results for non-existent ones.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model path is provided in the GUI with some models available in it (e.g., /media/models/).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure the model path is set to a valid directory where models exist.\n\n5. In the Search field, enter a valid model name or partial name of an existing model.\n\n6. Verify that the correct models matching the search criteria are listed in the GUI.\n\n7. In the Search field, enter a non-existent model name or invalid search term.\n\n8. Verify that no models are listed and the GUI shows a message like "No models found."\n\n9. SSH into the host system and confirm that the non-existent model does not exist in the model path.\ndocker exec -it <container_name> ls /media/models/	GUI opens successfully in the browser.\n\nLogin completes successfully with valid credentials.\n\nModels Page loads without issues.\n\nValid model path is recognized and models are listed.\n\nEntering a valid model name or partial name filters the list accordingly.\n\nOnly models matching the search criteria are displayed.\n\nEntering a non-existent or invalid model name clears the list.\n\nGUI displays a message like “No models found.”\n\nSSH command confirms that the non-existent model is not present in the specified directory.	\N	PASS	COMPLETED	\N	Models
1	TS_Users_001	Super Admin Creates Container with Admin and Write User	TC_001	Super Admin creates a container and adds Admin and Write users. Make sure both users have the correct roles and can access the container based on their permissions.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
2	TS_Users_002	Super Admin Creates Container with Admin and Read User	TC_002	Super Admin sets up a container with Admin and Read users. Make sure Admin can manage the container fully, and Read user can only view it. 	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
3	TS_Users_003	 Super Admin Creates Container with Only Admin	TC_003	Super Admin creates a container with only an Admin user. Ensure the container works with one user, and that Read/Write users can be added later. Verify Admin has full access.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
4	TS_Users_004	 Super Admin Creates Container with Only Write User	TC_004	Super Admin creates a container with only a Write user. Ensure the container works with a non-admin user. Verify Write user can fine-tune but not add users. Check if Super Admin can add an Admin later.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
5	TS_Users_005	 Super Admin Creates Container with Only Read User	TC_005	Super Admin creates a container with only a Read user. Ensure the Read user can log in with limited access. Verify fine-tuning is blocked. Check that Super Admin can add an Admin later.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
6	TS_Users_006	 Super Admin Adds Write User After Container Creation	TC_006	Super Admin creates a container with an Admin, then adds a Write user. Ensure the Write user has the right permissions, can fine-tune but not manage users.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
7	TS_Users_007	 Super Admin Adds Read User After Container Creation	TC_007	Super Admin adds a Read user to a container with an Admin. Verify the Read user has view-only access,can log in but not fine-tune or change settings. 	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
8	TS_Users_008	Super Admin Adds Admin After Container Creation	TC_008	Super Admin adds an Admin to a container that had no Admin before. Ensure the new Admin has full management access and can perform all admin tasks.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
9	TS_Users_009	Super Admin Tries to Add Second Admin	TC_009	Super Admin tries to add a second Admin to a container. Confirm the system blocks this with an error.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
10	TS_Users_010	Super Admin Tries to Add Third User	TC_010	Super Admin tries to add a third user to a container that already has Admin and Read/Write users. Verify the system blocks this with a clear message about user limits.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
11	TS_Users_011	Super Admin Removes Admin User	TC_011	Super Admin removes an Admin user from a container. Confirm the Admin is deleted with a success message and cannot log in. Ensure a new Admin can be added after removal.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
12	TS_Users_012	Super Admin Removes Read User	TC_012	Super Admin deletes a Read user from a container. Confirm the user is blocked from logging in. Ensure a new Read/Write user can be added afterward.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
13	TS_Users_013	Super Admin Removes Write User	TC_013	Super Admin removes a Write user from a container. Ensure active Write user sessions terminate correctly. Verify the ability to add a replacement user.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
14	TS_Users_014	Super Admin Modifies Admin Credentials	TC_014	Super Admin updates an Admin's username, email, and password. Verify the changes are applied successfully. Confirm the Admin can log in with the new credentials, not the old ones.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
15	TS_Users_015	Super Admin Modifies Read User Credentials	TC_015	Super Admin updates multiple credentials for a Read user. Ensure the Read user can log in with the new credentials only. Verify the role and view-only permissions stay intact.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
16	TS_Users_016	Super Admin Modifies Write User Credentials	TC_016	Super Admin updates a Write user’s username, email, and password. Confirm the Write user can log in only with the new credentials. Verify their fine-tuning permissions remain unchanged.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
17	TS_Users_017	Super Admin Deletes Container	TC_017	Super Admin deletes a container with active users. Confirm all users lose access and NVMe resources are released properly.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
18	TS_Users_018	Super Admin Logs Into Any Container	TC_018	Super Admin accesses multiple containers. Ensure they can reach every container regardless of account status. Confirm Super Admin has full permissions and can perform all operations across containers.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
19	TS_Users_019	Super Admin Attempts to Create User with Existing Username	TC_019	Super Admin attempts to create a user with a duplicate username. Ensure the system detects the duplication and prevents creation with a clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
20	TS_Users_020	Super Admin Attempts to Create User with Invalid Email	TC_020	Super Admin attempts to create a user with various invalid email formats. Ensure the system correctly validates the email and rejects invalid entries with clear error messages.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
21	TS_Users_021	Super Admin Attempts to Create User with Weak Password	TC_021	Super Admin attempts to create a user with a password that violates strength policies. Ensure the system enforces password requirements, rejects weak passwords, and displays helpful guidance in the error messages.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
22	TS_Users_022	Super Admin Attempts to Create User with Mismatched Passwords	TC_022	Super Admin enters different strings in the password and confirm fields. Ensure the system detects the mismatch and prevents account creation with a clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
23	TS_Users_023	Admin Creates Write User	TC_023	Container Admin creates a Write user with full details. Ensure successful creation with correct permissions. Confirm the new Write user can log in and perform fine-tuning operations.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
24	TS_Users_024	Admin Creates Read User	TC_024	Container Admin creates a Read user. Verify the user is created with view-only permissions. Ensure the Read user can access logs but cannot fine-tune or modify settings.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
25	TS_Users_025	Admin Tries to Create Second Admin	TC_025	Container Admin tries to add a second Admin. Ensure the system blocks this with a clear error message and keeps only one Admin per container.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
26	TS_Users_026	Admin Modifies Own Credentials	TC_026	Container Admin updates their username, email, and password. Ensure the changes are saved with proper validation, they can log in only with the new credentials, and their admin role and access remain unchanged	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
27	TS_Users_027	Admin Modifies Write User Credentials	TC_027	Container Admin updates a Write user’s username, email, and password. Confirm the Write user can log in only with the new credentials and retains their fine-tuning permissions.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
28	TS_Users_028	Admin Modifies Read User Credentials	TC_028	Container Admin updates a Read user’s username, email, and password. Ensure the Read user can log in only with the new credentials, and their view-only permissions remain unchanged.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
29	TS_Users_029	Admin Removes Write User	TC_029	Container Admin deletes a Write user. Ensure the user is removed and cannot access the container, and a replacement user can be created.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
30	TS_Users_030	Admin Removes Read User	TC_030	Container Admin deletes a Read user. Ensure the Read user can no longer log in, container operations continue unaffected, and a replacement user can be added.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
31	TS_Users_031	Admin Removes Own Account	TC_031	Container Admin attempts to delete their own account. Ensure the system prompts confirmation and warning. Verify container access and management behavior after the Admin is removed.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
32	TS_Users_032	Admin Logs Into Own Container	TC_032	Container Admin logs into the container. Ensure they authenticate successfully and can access user management, fine-tuning, and all admin functions.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
33	TS_Users_033	Admin Attempts to Access Another Container	TC_033	Admin tries to access a different container. Ensure the system blocks cross-container access with an error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
34	TS_Users_034	Admin Attempts to Create User with Existing Username	TC_034	Admin attempts to create a user with an existing username. Ensure the system detects duplicates globally across containers, blocks creation with a clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
35	TS_Users_035	Admin Attempts to Create User with Invalid Email	TC_035	Admin attempts to create a user with invalid email formats. Ensure email validation applies the same standards as Super Admin, with clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
36	TS_Users_036	Write User Logs In and Performs Fine-Tuning	TC_036	Write user logs in and attempts fine-tuning operations. Test model selection, dataset configuration, and training initiation.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
37	TS_Users_037	Write User Updates Own Credentials	TC_037	Write user attempts to modify their own username, email, and password. Verify system allows self-credential updates with proper validation. Confirm Write user can login with new credentials only.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
38	TS_Users_038	Write User Attempts to Update Other User's Credentials	TC_038	Write user tries to modify credentials of Admin user. Verify system blocks this unauthorized action with appropriate error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
39	TS_Users_039	Write User Attempts to Create New User	TC_039	Write user tries to create another user in the container. Verify system prevents this action with clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
40	TS_Users_040	Write User Attempts to Access Another Container	TC_040	Write user attempts to access a different container through URL. Verify system enforces strict container isolation with appropriate error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
41	TS_Users_041	Read User Logs In and Views GUI	TC_041	Read user logs into their container. Verify successful access to GUI with all view-only elements. Check that interface shows appropriate read-only controls.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
42	TS_Users_042	Read User Attempts to Update Own Credentials	TC_042	Read user tries to modify their own account details. Verify system blocks credential self-management for Read users.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
43	TS_Users_043	Read User Attempts to Create New User	TC_043	Read user tries to access user management to create new users. Verify system prevents access to user creation functions. Check appropriate error messages.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
44	TS_Users_044	Read User Attempts to Access Another Container	TC_044	Read user attempts to access a different container. Verify system enforces container isolation with clear error message.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
45	TS_Users_045	System Handles User Deletion Gracefully	TC_045	Delete users under different conditions (logged in, performing operations). Verify system properly terminates sessions and revokes access.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
46	TS_Users_046	Concurrent Login Management	TC_046	Attempt to login to same account from multiple locations/browsers. Verify system behavior for concurrent sessions (allow/block/notify). Check for session tracking and appropriate handling of simultaneous operations.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
47	TS_Users_047	Admin Attempts to Change User Roles	TC_047	Container Admin attempts to change a Read user to Write user. Verify if this operation is permitted with appropriate system response. Check affected user permissions after attempt. Test with different role combinations to ensure consistent behavior.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
48	TS_Users_048	Email Notifications for Account Creation	TC_048	Create new users with valid email addresses. Verify system sends appropriate welcome/setup emails. Check email content includes necessary information without sensitive data. Test email delivery to various domains.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
49	TS_Users_049	Email Notifications for Credential Changes	TC_049	Change credentials for various user types. Verify appropriate notification emails are sent for security-sensitive changes. Check emails contain sufficient information without exposing sensitive data. Test notification delivery timing.	\N	\N	\N	\N	NOT-TESTED	NEW	\N	Users
240	TS_Models_011	\N	TC_240	Verify that the search is disabled when no models are available, either due to an empty or invalid model path.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. The model path is empty, or\nThe model path is invalid (does not exist or points to a non-existent directory).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure that the model path field is empty or points to an invalid directory (e.g., /nonexistent/path/).\n\n5. Verify that the Search button is disabled or unclickable.\n\n6. If the model path is empty, verify that no models are displayed in the list.\n\n7. If the model path is invalid, verify that no models are listed, and the search functionality remains disabled.\n\n8. SSH into the host system to confirm that the model path is indeed empty or points to an invalid location.\ndocker exec -it <container_name> ls /path/to/models/\n\n9. Verify that no models exist in the model path.	GUI opens successfully in the browser.\n\nLogin completes successfully using valid credentials.\n\nModels Page loads correctly.\n\nThe model path field is empty or contains an invalid path (e.g., /nonexistent/path/).\n\nThe Search button is disabled or unclickable.\n\nIf the path is empty, no models are shown in the list.\n\nIf the path is invalid, no models are listed, and the search remains disabled or results in an error message.\n\nSSH confirms that the provided path does not exist on the host.\n\nNo model directories or files are found in the specified invalid path.	\N	PASS	COMPLETED	\N	Models
291	TS_Finetune_012	Validate Model Configuration	TC_291	Giving negative number for max seq len	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Max Sequence Length field in Model Configuration\n4. Enter a negative number (e.g., -100)\n5. Verify error message appears	Error : Please provide a valid max seq len	Error : Please provide a valid max seq len	PASS	COMPLETED	\N	Finetune
241	TS_Models_012	\N	TC_241	Verify that uploading a model ZIP file completes successfully and the extracted model appears both in the GUI and on the host system.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model ZIP file is available for upload.\n\n5. The models path in the GUI is set to a valid directory where the model will be uploaded.\n\n6. Ensure there is enough disk space to upload the model.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select a valid model ZIP file from your system.\n\n6. Wait for the upload process to complete.\n\n7. Verify that the upload completes successfully, and the progress bar shows 100%.\n\n8. Once the upload is complete, ensure the model appears in the Models List on the GUI.\n\n9. SSH into the host system and navigate to the model path directory.\ndocker exec -it <container_name> ls /path/to/models/\n\n10. Verify that the model folder extracted from the ZIP file exists in the directory on the host system.	GUI loads successfully in the browser.\n\nLogin completes successfully with valid credentials.\n\nModels Page is displayed without errors.\n\nUpload Model dialog opens upon clicking the Upload button.\n\nA valid model ZIP file is successfully selected from the local system.\n\nUpload process begins and progresses without interruption.\n\nUpload completes successfully, and the progress bar reaches 100%.\n\nThe newly uploaded model appears in the Models List in the GUI.\n\nSSH into the host confirms access to the container and model path.\n\nThe extracted model folder exists under the model path in the host system.	Remote system:\nSession gets end if I am uploading a bigger model.\nEg: Llama-3.1-8b of size 47GB.\n\nHost system:\nSome models are getting upload, and some models are not getting upload. Can't understand what's the issue. (host system)\nExample:Able to upload model zip file from /home/antpc to /media/models. But can't able to upload model zip file from /media to /media/models/	FAIL	NEEDS-RETEST	\N	Models
242	\N	\N	TC_242	Verify the behavior of the GUI when navigating between pages or refreshing the browser tab while a file upload is in progress.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model ZIP file is available for upload.\n\n5. The models path in the GUI is set to a valid directory where the model will be uploaded.\n\n6. Ensure there is enough disk space to upload the model.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select a valid model ZIP file to upload.\n\n6. As the upload progresses (before it completes), do one of the following:\nNavigate to a different page (e.g., Datasets Page or Monitor Page).\nOr refresh the browser tab.\n\n7. Observe the behavior of the GUI and the ongoing upload.\n\n8. Check if the upload resumes, restarts.	GUI opens and login is successful.\n\nModels Page loads correctly.\n\nModel ZIP file is accepted and upload starts.\n\nDuring navigation to another page or refreshing the tab:\nGUI should handle the interruption gracefully without crashing.\nUpload should either resume automatically or restart cleanly if needed.	Remote System:\nThe uploading process gets stopped, if I navigate to some other page (from model page to finetune page)	FAIL	NEEDS-RETEST	#336	Models
243	TS_Models_013	\N	TC_243	Verify that uploading a non-model ZIP file triggers an appropriate error message in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A non-model ZIP file (e.g., a .txt.zip, .json.zip, or any other file type not a model) is available for upload.\n\n5. The models path in the GUI is set to a valid directory where the model is supposed to be uploaded.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select a non-model ZIP file (e.g., .txt.zip, .json.zip, etc.) from your system.\n\n6. Click the Upload button to initiate the upload.\n\n7. Wait for the upload process to complete.\n\n8. Ensure that the GUI displays an appropriate error message indicating that the file is not a valid model ZIP file.\n\n9. Verify that no model is listed in the models page after the upload attempt.\n\n10. SSH into the host system and check the model path directory.\ndocker exec -it <container_name> ls /path/to/models/\n\n11. Confirm that the non-model ZIP file was not extracted or saved in the models directory.	GUI loads successfully in the browser.\n\nLogin completes successfully using valid credentials.\n\nModels Page is displayed without any errors.\n\nUpload Model dialog opens correctly.\n\nA non-model ZIP file is selected from the local system.\n\nUpload is attempted by clicking the Upload button.\n\nUpload process completes or halts with error handling.\n\nGUI displays an error message indicating the file is not a valid model ZIP file.\n\nNo new model appears in the models list after the failed upload.\n\nSSH access to the host system and the container is successful.\n\nThe non-model ZIP file is not present or extracted in the model path directory.	\N	PASS	COMPLETED	\N	Models
244	TS_Models_014	\N	TC_244	Verify that uploading a corrupted or improperly structured ZIP file (e.g., model.txt.zip) is handled gracefully with an appropriate error message in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A corrupted or improperly structured ZIP file (e.g., model.txt.zip or any other file with incorrect contents) is available for upload.\n\n5. The models path in the GUI is set to a valid directory where models are supposed to be uploaded.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select the corrupted or improperly structured ZIP file (e.g., model.txt.zip).\n\n6. Click the Upload button to initiate the upload.\n\n7. Ensure that the GUI displays an appropriate error message indicating that the ZIP file is corrupted or improperly structured.\n\n8. Verify that the model does not appear in the models list after the upload attempt.\n\n9. SSH into the host system and check the model path directory.\ndocker exec -it <container_name> ls /path/to/models/\n\n10. Confirm that the corrupted ZIP file was not extracted or saved in the models directory.	GUI opens successfully in the browser.\n\nLogin is successful with valid credentials.\n\nModels Page is displayed correctly.\n\nUpload Model dialog opens without issues.\n\nA corrupted or improperly structured ZIP file is selected.\n\nUpload is initiated by clicking the Upload button.\n\nGUI shows a clear and appropriate error message indicating the ZIP file is corrupted or not structured properly.\n\nThe corrupted model does not appear in the models list on the GUI.\n\nSSH into the host system and list command runs successfully.\n\nThe corrupted ZIP file is not found or extracted in the models directory.	The error message is not properly handled.\n"Upload failed: Request failed with status code 500. Click Resume?"	FAIL	NEEDS-RETEST	#298	Models
352	TS_Datasets_001	Validating Dataset Path	TC_352	Checking whether the default path to datasets is available in the GUI as well as in the host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
245	TS_Models_015	\N	TC_245	Verify that uploading a model with the same name prompts for replacement and overwrites the existing model if confirmed.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model ZIP file (e.g., test_model.zip) is available.\n\n5. The model with the same name (test_model) already exists in the current models path (e.g., /media/models/).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure the models path is set to /media/models/.\n\n5. Confirm that test_model is already listed.\n\n6. Click the Upload Model button.\n\n7. Select the same model ZIP file (test_model.zip).\n\n8. Click the Upload button.\n\n9. Verify that a confirmation prompt appears asking if you want to replace the existing model.\n\n10. Confirm the replacement and wait for the upload to complete.\n\n11. SSH into the host system and check for updated files in /media/models/test_model/:\ndocker exec -it <container_name> ls -l /media/models/test_model/ \n\n12. Confirm that the existing model has been overwritten with the new contents.	GUI opens successfully in the browser.\n\nLogin completes successfully with valid credentials.\n\nModels Page loads correctly.\n\nModel path is correctly set to /media/models/.\n\ntest_model is listed in the models table.\n\nUpload Model dialog opens without issues.\n\ntest_model.zip is selected from the local system.\n\nUpload process is initiated upon clicking the Upload button.\n\nA confirmation prompt appears, asking whether to replace the existing test_model.\n\nUpon confirmation, upload completes successfully and the progress bar shows 100%.\n\nSSH command executes successfully and lists contents of /media/models/test_model/.\n\nFile timestamps or contents indicate that the model has been successfully overwritten with the new files.	\N	PASS	COMPLETED	\N	Models
246	TS_Models_016	\N	TC_246	Verify that refreshing the GUI during model upload allows resuming the upload process properly.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A large model ZIP file (to ensure noticeable upload time) is ready for testing.\n\n4. Stable network connection.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click Upload Model and select the large ZIP file.\n\n5. Start the upload process.\n\n6. While the upload is in progress, refresh the browser tab.\n\n7. Observe the behavior after the page reloads.\n\n8. Check whether the upload resumes automatically or prompts to resume after the page is refreshed.\n\n9. After upload completion, verify the model appears in the GUI.\n\n10. SSH into the host system to confirm the model is present in the models path:\ndocker exec -it <container_name> ls /media/models/\n	GUI opens in the browser successfully.\n\nLogin is successful using valid credentials.\n\nModels Page loads correctly.\n\nUpload Model button allows selection of a large ZIP file.\n\nUpload process begins, showing progress (e.g., progress bar).\n\nRefreshing the browser tab interrupts the upload process.\n\nAfter reload, the GUI:\n\nDoes not resume the upload automatically.\n\nDoes not prompt to resume the interrupted upload.\n\nUser must restart the upload manually.\n\nOnce the upload completes successfully, the uploaded model is listed in the Models Page.\n\nSSH into the host and run docker exec -it <container_name> ls /media/models/ shows the uploaded model directory is present and accessible.	For first time refresh it shows a resume button to continue the upload the process.\nBut if refresh again(second time) the zip file goes off from the file uploading field.	NOT-TESTED	NEW	253	Models
247	TS_Models_017	\N	TC_247	Verify that selecting another ZIP file during an ongoing upload is blocked or disabled until the upload completes.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A large model ZIP file (for longer upload duration).\n\n4. Another model ZIP file for testing selection attempt during upload.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click Upload Model and select the large ZIP file.\n\n5. Begin the upload process.\n\n6. During the upload, try to click "Upload" again and select another ZIP file.\n\n7. Observe the behavior:\nThe second file selection should be blocked or disabled.\nNo interference with the current ongoing upload should occur. \n\n8. Wait for the upload to complete and confirm only the first file was processed.\n\n9. Verify the model appears in the GUI and on the host system:\ndocker exec -it <container_name> ls /media/models/	GUI opens successfully in the browser.\n\nLogin is successful with valid credentials.\n\nModels Page loads correctly.\n\nClicking Upload Model allows selecting a large ZIP file.\n\nUpload process begins and shows progress (e.g., progress bar or status).\n\nWhen trying to click "Upload" again and select another file during the current upload:\n\nThe second upload option is disabled or blocked.\n\nThe GUI does not allow starting a new upload while one is in progress.\n\nNo interference with the current upload occurs.\n\nOnce the first upload completes, only the initially selected model is processed and listed.\n\nThe uploaded model is displayed in the GUI list.\n\nSSH verification:\ndocker exec -it <container_name> ls /media/models/\nConfirms the model folder exists, indicating a successful single upload.	\N	NOT-TESTED	NEW	\N	Models
248	TS_Models_018	\N	TC_248	Verify whether the GUI allows uploading multiple model ZIP files at once, and handles them correctly.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. Multiple valid model ZIP files are ready for upload.\n\n4. SSH access to host system to verify uploads.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click Upload Model and try selecting multiple ZIP files at once using Ctrl or Shift key.\n\n5. Observe if the GUI accepts multiple files simultaneously.\n\n6. If accepted, check upload progress for each file.\n\n7. Wait for uploads to complete.\n\n8. Verify all uploaded models appear in the GUI.\n\n9. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/\n\n10. Confirm that all uploaded models exist in the container path.	GUI opens successfully in the browser.\n\nLogin with valid credentials is successful.\n\nModels Page loads as expected.\n\nWhen clicking Upload Model and selecting multiple .zip files using Ctrl or Shift:\nGUI should allow multiple file selection if supported.\n\nIf multiple files are accepted:\nUpload progress is shown individually for each file, or a batch progress indicator appears.\n\nAll uploads complete without error.\n\nUploaded models are all listed in the GUI after completion.\n\nSSH verification:\ndocker exec -it <container_name> ls /media/models/\nConfirms that each uploaded model folder exists inside /media/models/.\n\nDirectory names should match the uploaded .zip contents.	Remote:\nIt shows message as upload successfully after uploading each file.\nUnless you click 'ok', the next uploading process won't start.\n\nHost:\nIt shows message as upload successfully after uploading each file.\nUnless you click 'ok', the next uploading process won't start.\n\nI selected two files (125m, 1b), but only 125m got uploaded, 1b got failed at upload process 100%.	FAIL	NEEDS-RETEST	#334	Models
292	TS_Finetune_013	Validate Path Configuration	TC_292	Selecting a nvme mount point	1. Should be able to login to the GUI. (GUI)\n2. The dataset should be in the default path /usr/local/datasets on the dataset page, and /media/models in models page \n3. Test modelsand datasets should be available 	Steps: (GUI)\n1.Login to the GUI.\n2.Navigate to finetune page.\n3. Click on Select Mount Point dropdown under NVME Path in Path Configuration\n4. Select an available mount point from the dropdown\n5. Verify the selection appears in configuration summary	The selected mount point should reflect in the configuration summary	The selected mount point is reflected in the configuration summary	PASS	COMPLETED	\N	Finetune
249	TS_Models_019	\N	TC_249	Verify that uploading the same model ZIP file from multiple GUI tabs in parallel does not cause conflicts or errors.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A valid model ZIP file is ready for upload.\n\n4. SSH access to host system to verify uploads.	1. Open the GUI in two separate browser tabs.\n\n2. Login in both tabs using valid credentials.\n\n3. Navigate to the Models Page in both tabs.\n\n4. In each tab, select the same model ZIP file for upload.\n\n5. Click Upload in both tabs simultaneously or within a short time gap.\n\n6. Monitor both tabs for:\nAny errors or upload failures.\nProper UI handling of the upload process.\n\n7. After uploads complete, verify:\nModel is listed only once in the GUI.\nNo duplicate or corrupted entries.\n\n8. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/\n\n9. Confirm that the model directory exists and is valid (not duplicated or partially written).	1. GUI opens successfully in both browser tabs.\n\n2. Login is successful in both tabs using valid credentials.\n\n3. Models Page loads properly in each tab with all interface elements accessible.\n\n4. When the same .zip model file is selected for upload in both tabs the file is accepted without issue in both sessions.\n\n5. When uploads are initiated simultaneously or close in time:\n-> The GUI handles the uploads gracefully, without freezing or crashing.\n-> No upload errors or conflicts are shown in either tab.\n-> If a file conflict occurs, the system should prevent duplicate entries or show an informative message (e.g., "Model already exists").\n\n6. After uploads complete:\n-> The model appears only once in the GUI list, even if upload was triggered twice.\n-> No duplicate or corrupted model entries are visible.\n\n7. On SSH into the host system and running:\ndocker exec -it <container_name> ls /media/models/\nThe model directory exists and is correctly written.	\N	NOT-TESTED	NEW	286	Models
250	TS_Models_020	\N	TC_250	Verify that uploading different model ZIP files in parallel from multiple GUI tabs works successfully without issues.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. At least two valid model ZIP files are ready for upload.\n\n4. SSH access to host system to verify uploads.	1. Open the GUI in two different browser tabs.\n\n2. Login in both tabs using valid credentials.\n\n3. Navigate to the Models Page in both tabs.\n\n4. In Tab 1, select and upload model_1.zip.\n\n5. In Tab 2, select and upload model_2.zip.\n\n6. Trigger the uploads simultaneously or with a short delay.\n\n7. Wait for both uploads to complete.\n\n8. Confirm:\nBoth models are listed in the GUI without error.\nGUI remains responsive during parallel upload.\n\n9. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/ \n\n10. Validate that both model_1 and model_2 directories are present and complete.	1. GUI opens in both tabs without error.\n\n2. Login succeeds in both tabs using valid credentials.\n\n3. Models Page loads properly in both tabs.\n\n4.model_1.zip and model_2.zip are accepted for upload.\n\n5. Simultaneous uploads are handled smoothly; no crashes or UI issues.\n\n6. Both models appear once in the GUI after upload.\n\n7. GUI stays responsive throughout the process.\n\n8. docker exec -it <container_name> ls /media/models/ shows both model_1 and model_2 directories.\n\n9. Directories are complete, with no duplicates or partial files.	\N	NOT-TESTED	NEW	287	Models
251	TS_Models_021	\N	TC_251	Verify that uploading a large dataset(to datasets page) and a model ZIP file(to models page) in parallel works smoothly without affecting each other.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A large dataset json file is available for upload.\n\n4. A valid model ZIP file is ready for upload.\n\n5. SSH access to host system for verification.	1. Open the GUI in two different browser tabs.\n\n2. Login using valid credentials in both tabs.\n\n3. In Tab 1, navigate to the Datasets Page.\n\n4. In Tab 2, navigate to the Models Page.\n\n5. In Tab 1, select and start uploading the large dataset json file.\n\n6. In Tab 2, select and start uploading the model ZIP file.\n\n7. Let both uploads happen in parallel.\n\n8. Wait for both uploads to complete.\n\n9. Confirm:\nThe dataset appears under the available datasets.\nThe model appears under the available models.\nGUI remains responsive and no errors occur during or after upload.\n\n10. SSH into the host system and verify:\ndocker exec -it <container_name> ls /usr/local/datasets/\ndocker exec -it <container_name> ls /media/models/\n\n11. Ensure both uploads are reflected correctly in their respective locations.	1. GUI opens in both tabs without issues.\n\n2. Login is successful in both tabs.\n\n3. Datasets Page and Models Page load correctly in respective tabs.\n\n4. Both dataset and model files are accepted for upload.\n\n5. Parallel uploads proceed without UI lag or conflict.\n\n6. Uploads complete successfully in both tabs.\n\n7. Dataset appears in Available Datasets; model appears in Available Models.\n\n8. GUI stays responsive; no errors or glitches during or after uploads.\n\n9. SSH check confirms dataset in /usr/local/datasets/, model in /media/models/.\n\n10. Both directories exist and contents are complete.\n	\N	NOT-TESTED	NEW	\N	Models
252	TS_Models_022	\N	TC_252	Cancelling the file upload process during the file upload is in progress.	\N	\N	\N	Clicking on the cancel button during the file upload process, not warning the user to confirm cancellation of upload process, its directly stopping the file upload.\n	NOT-TESTED	NEW	#254	Models
253	TS_Models_023	\N	TC_253	Verify that storage details are shown correctly when the model path is on \n(a) boot drive,\n (b) external drive, and \n(c) RAID on external drives.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. Model directories must exist in all three locations:\nBoot drive (e.g., /media/models_boot/)\nExternal drive (e.g., /media/models_ext/)\nRAID (e.g., /mnt/raid/models/)\n\n5. Proper permissions are given to allow container access to these paths.	 For each path (boot, external, RAID):\n1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter the corresponding model path in the input field.\n\n5. Click the Search button.\n\n6. Observe the storage details displayed (Total, Used, Free).\n\n7. SSH into the host system and run:\ndocker exec -it <container_name> df -h <model_path>\n\n8. Compare the values in GUI vs. output of the above command to validate accuracy.\n\n9. Repeat for all 3 paths (boot, external, RAID).	1. GUI opens and login succeeds.\n\n2. Models Page loads properly.\n\n3. Model path is accepted in the input field.\n\n4. Clicking Search displays storage details (Total, Used, Free).\n\n5. SSH command returns disk usage for the given path.\n\n6. GUI values match df -h output from container.\n\n7. Validation passes for boot, external, and RAID paths.	\N	NOT-TESTED	NEW	\N	Models
349	TS_Finetune_070	To validateModel Configuration	TC_349	Error Message Should Appear Only Once When Clicking "Start Fine-Tuning" Without Configuration	Preconditions:\n1.The fine-tune page must be accessible.\n2.The model directory path selected should contain no models (e.g., an empty or incorrect directory).\n3.The user should have the necessary permissions to access the fine-tune page.\n4. No model or dataset is selected	Steps (GUI):\n1. Login to the MiPhi GUI.\n2. Navigate to the Fine-tuning page.\n3. Without selecting a model or dataset, click the "Start Fine-Tuning" button multiple times.\n4. Observe the error messages displayed.\n5. Verify the content of the error message (it should instruct the user to select a model and dataset, not a batch size issue).\n6. Check whether the error message appears only once instead of being duplicated multiple times.	The error message appears only once regardless of how many times the user clicks "Start Fine-Tuning".	The error message appears only once regardless of how many times the user clicks "Start Fine-Tuning".	FAIL	NEEDS-RETEST	The error message is coming once only for the first time, when the error message disappears and if I click start finetuning without selecting any parameters it is not popping out the error.	Finetune
351	TS_Finetune_071	To Validate Parameters in exp_config file and GUI	TC_351	Verify Missing Configuration Parameters in Fine-tune Page.	Preconditions:\n1.The fine-tune page must be accessible.\n2.The model directory path selected should contain no models (e.g., an empty or incorrect directory).\n3.The user should have the necessary permissions to access the fine-tune page.\n	Steps (GUI):\n1. Login to the MiPhi GUI.\n2. Open exp_config.yaml in terminal and note down all key configuration parameters.\n3. Navigate to the Fine-tune page in the GUI.\n4. Compare the displayed configuration summary on the Fine-tune page with the parameters in exp_config.yaml.\n5. Identify any missing parameters that are present in exp_config.yaml but not displayed in the Fine-tune page.\n\n	All configuration parameters from exp_config.yaml should be displayed in the Fine-tune page under the Configuration Summary section.	 Following Parameters are missing in GUI\n- triton\n- weight_file_format\n- from_config\n- Lora_task_type	PASS	COMPLETED	\N	Finetune
565	TS_Users_050	hi this is me testing the add testcase	TC_1	hi this is me testing the add testcase	hi this is me testing the add testcase	hi this is me testing the add testcase	hi this is me testing the add testcase		not-tested	not-tested	hi this is me testing the add testcase	Users
370	TS_Datasets_005	Validating Dataset Path	TC_370	Switching to other pages 'n' number of times after giving custom path to datasets to check whether it is persistant or not.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. The custom path should be available in the host system (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
376	TS_Datasets_006	Validating Dataset Path	TC_376	Refreshing the datasets pages 'n' number of times after giving custom path to datasets to check whether it is persistent or not.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. The custom path should be available in the host system (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
382	TS_Datasets_007	Validating Available datasets	TC_382	Checking whether the datasets are listed from the default path. (Consider datasets are already avaiable in the default path)	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. There should be some datasets available in the default path to datasets (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
388	TS_Datasets_008	Validating Available datasets	TC_388	Checking whether only the datasets are listed from the default path. (Consider few datasets are already avaiable in the default path)	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. There should be some datasets available in the default path to datasets (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
394	TS_Datasets_009	Validating Available datasets	TC_394	Remove the default path to datasets and re-enter the default path again.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. There should be some datasets available in the default path to datasets (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
403	TS_Datasets_010	Validating Available datasets	TC_403	Checking the available datasets from the default path, where no dataset are available in that path on host system	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. No datasets should available in the default path to datasets (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
409	TS_Datasets_011	Validating Available datasets	TC_409	Checking whether the datasets are listed from the custom path apart from default path.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. There should be some datasets available in the custom path to datasets (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
414	TS_Datasets_013	Validating Available datasets	TC_414	Looking for available datasets by providing path to dataset which is not available in the host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. The custom path should not be available in the host system.(Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
420	TS_Datasets_014	Validating Available datasets	TC_420	Looking for available datasets, after changing the path to dataset from default to custom, but not clicking the search button	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. There should be some datasets available in the custom path to datasets (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
427	TS_Datasets_015	Validating Available datasets	TC_427	Looking for preview of a dataset from the list of available datasets from the default datasets path.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. There should be some datasets available in the default path to datasets (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
488	TS_Datasets_025	Validating file upload	TC_488	Trying to upload an incorrect  formated file to the default path to datasets. (Eg: dataset.txt)	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. An incorrect json file in the remote system.	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
434	TS_Datasets_016	Validating Available datasets	TC_434	Deleting a dataset from the list of available datasets from the default datasets path.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. There should be some datasets available in the default path to datasets (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
439	TS_Datasets_017	Validating Available datasets	TC_439	Searching for a dataset which is available in the list of available datasets from the default datasets path.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. There should be some datasets available in the default path to datasets (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
444	TS_Datasets_018	Validating Available datasets	TC_444	Searching for a dataset which is not available from the list of available datasets from the default datasets path.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. There should be some datasets available in the default path to datasets (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
449	TS_Datasets_019	Validating Available datasets	TC_449	Searching for a dataset by giving an invalid path to datasets, which means the dataset path doesn't exist in the host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. An unavailable dir path from the host system (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
461	TS_Datasets_021	Validating file upload	TC_461	Trying to upload a dataset file from remote system to the default datasets path on host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. A dataset file should be available in the remote system.	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
455	TS_Datasets_020	Validating Available datasets	TC_455	Searching for a dataset from a default datasets path, where no datasets are available in that path.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. There should not be any datasets available in the default datasets path(Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
467	TS_Datasets_022	Validating file upload	TC_467	Trying to upload a file to the default path to datasets which is not actually a datasets file.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. A non json(text,doc etc) file should be available in the remote system.	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
473	TS_Datasets_023	Validating file upload	TC_473	Trying to upload a dataset file to a custom path which is available in the host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. A valid custom dir path form host system for datasets path (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
481	TS_Datasets_024	Validating file upload	TC_481	Trying to upload a dataset to a random path to datasets, which is not available in the host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. An unavailable dir path from the host system (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
493	TS_Datasets_026	Validating file upload	TC_493	Trying to upload multiple dataset file along with one .txt file to a custom path which is available in the host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Multiple dataset files(.json) should be available in the remote system.	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
498	TS_Datasets_027	Validating file upload	TC_498	Trying to upload a dataset  file which is already exists in the default dataset path in host system (To replace the existing dataset.)	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. A dataset file in the remote system.	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
505	TS_Datasets_028	Validating file upload	TC_505	Refreshing the datasets page while dataset  file upload is in progress to the default path of the host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. A dataset  file should be available in the remote system.	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	NOT-TESTED	IN-PROGRESS	\N	Datasets
579	TS_Logs_027	oiiiii	TC_565	oiiiii	oiiiii	oiiiii	oiiiii	\N	not-tested	pending	oiiiii	Logs
580	TS_Users_054	bleeeeeeechhhh	TC_566	bleeeeeeechhhh	bleeeeeeechhhh	bleeeeeeechhhh	bleeeeeeechhhh	\N	not-tested	pending	bleeeeeeechhhh	Users
523	TS_Datasets_031	Validating storage details	TC_523	Looking for storage details where the given dataset path is a part of boot drive of the host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
528	TS_Datasets_032	Validating storage details	TC_528	Looking for storage details where the given dataset path is the mount point of an external drive.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
533	TS_Datasets_033	Validating storage details	TC_533	Looking for storage details where the given dataset path is the mount point of more than one drive (RAID/LVM)	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
538	TS_Datasets_034	Validating storage details	TC_538	Looking for a storage details, by giving path to datasets which is not available in the host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. An unavailable dir path from the host system (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
544	TS_Datasets_035	Validating storage details	TC_544	Looking for a storage details without giving any path to datasets	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
549	TS_Datasets_036	Validating file upload	TC_549	Trying to upload a dataset  file which is not of instruct output format	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. A dataset file which is not of instruct output format should be available in the remote system.	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
555	TS_Datasets_037	Validating file upload	TC_555	Trying to upload a dataset  files multiple times	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. There should be some valid datasets(.json format and should be of instrcut & output format) available in the remote system	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
562	TS_Datasets_038	Validating file upload	TC_562	Trying to upload a dataset file(.jsonl) to a custom path which is available in the host system.	1. Should be able to login to the GUI. (GUI)\n2. Should be able to reach datasets page.(GUI)\n3. Should be able to take ssh session to host system. (Terminal)\n4. A valid custom dir path form host system for datasets path (Terminal)	Login to the GUI.	Should be able to login to the GUI	Able to login to the GUI	PASS	COMPLETED	\N	Datasets
\.


--
-- TOC entry 5257 (class 0 OID 25558)
-- Dependencies: 231
-- Data for Name: pending_requests; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.pending_requests (s_no, test_scenario_id, testcase_id, test_scenario, testcase_description, prerequisite, steps_to_reproduce, expected_result, actual_result, test_result, status, comments, test_suite, submitted_by, submitted_at, request_status) FROM stdin;
1	TS_Users_051	TC_563	skibidi	skibidi	skibidi	skibidi	skibidi	\N	not-tested	pending	skibidi	Users	johaan	2025-06-18 12:19:23.365824	approved
3	TS_Users_052	TC_564	goo ggo gaa gaa	goo ggo gaa gaa	goo ggo gaa gaa	goo ggo gaa gaa	goo ggo gaa gaa	\N	not-tested	pending	goo ggo gaa gaa	Users	johaan	2025-06-18 12:47:54.476361	approved
4	TS_Logs_001	TC_565	oiiiii	oiiiii	oiiiii	oiiiii	oiiiii	\N	not-tested	pending	oiiiii	Logs	johaan	2025-06-18 12:51:15.79175	approved
5	TS_Users_053	TC_566	bleeeeeeechhhh	bleeeeeeechhhh	bleeeeeeechhhh	bleeeeeeechhhh	bleeeeeeechhhh	\N	not-tested	pending	bleeeeeeechhhh	Users	johaan	2025-06-18 13:20:57.880536	approved
6	TS_Models_001	TC_1	yoyoy	yoyoy	yoyoy	yoyoy	yoyoy	\N	not-tested	pending	yoyoy	Models	johaan	2025-06-18 13:32:04.33027	approved
8	TS_Models_002	TC_567	haii i am testsing	haii i am testsing	haii i am testsing	haii i am testsing	haii i am testsing	\N	not-tested	pending	haii i am testsing	Models	johaan	2025-06-18 15:43:11.912258	approved
9	TS_Models_003	TC_568	wow	wow	wow	wow	wow	\N	not-tested	pending	wow	Models	johaan	2025-06-18 15:48:10.757713	approved
12	\N	TS_Models_002	testing 3	testing 3	testing 3	testing 3	testing 3	\N	not-tested	pending	testing 3	Models	johaan	2025-06-18 16:00:15.415112	approved
11	\N	TS_Models_001	new testing	new testing	new testing	new testing	new testing	\N	not-tested	pending	new testing	Models	johaan	2025-06-18 15:57:17.810394	approved
13	TS_Models_004	TC_569	hiii this is me testing	hiii this is me testing	hiii this is me testing	hiii this is me testing	hiii this is me testingiii	\N	not-tested	pending	hiii this is me testinggggg	Models	johaan	2025-06-18 16:16:35.911719	approved
14	TS_Logs_002	TC_570	hi	hoi	boi	boi	boiiiiii		not-tested	pending	boiiiii	Logs	johaan	2025-06-18 16:38:47.05636	rejected
\.


--
-- TOC entry 5250 (class 0 OID 24977)
-- Dependencies: 224
-- Data for Name: testplan_registry; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.testplan_registry (id, name, test_suite, created_at, assigned_users) FROM stdin;
12	test3	{Models,Monitor}	2025-06-16 10:15:40.347893	{johaan,maria}
13	test4	{Inference}	2025-06-16 10:53:03.727241	{john,joel}
14	test1	{Inference}	2025-06-16 12:48:09.760227	{johaan}
\.


--
-- TOC entry 5252 (class 0 OID 24987)
-- Dependencies: 226
-- Data for Name: testplans; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.testplans (id, registry_id, test_scenario_id, test_scenario, testcase_id, testcase_description, prerequisite, steps_to_reproduce, expected_result, actual_result, test_result, status, comments, test_suite, executed_by, bug_id, bug_status) FROM stdin;
1093	14	TS_Inference_005	Validating Text-to-Text task type	TC_78	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's		fail	new		Inference	admin	20	In Progress
1085	14	TS_Inference_020	Validating Text-to-Text task type	TC_93	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in message field\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input		not-tested	new		Inference		\N	\N
955	13	TS_Inference_020	Validating Text-to-Text task type	TC_93	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in message field\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input		not-tested	new		Inference		\N	\N
985	13	TS_Inference_031	Validating Image-to-Text task type	TC_104	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down		not-tested	new		Inference		\N	\N
1052	13	TS_Inference_098	Validating Image-to-Image task type	TC_171	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded		not-tested	new		Inference		\N	\N
1153	14	TS_Inference_069	Validating Speech-to-Text task type	TC_142	To verify the maximum number of input audio's that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give more than one input audio at a time		not-tested	new		Inference		\N	\N
1207	14	TS_Inference_123	Validating Text-to-Image task type	TC_196	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded		not-tested	new		Inference		\N	\N
1208	14	TS_Inference_124	Validating Text-to-Image task type	TC_197	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed		not-tested	new		Inference		\N	\N
1209	14	TS_Inference_125	Validating Text-to-Image task type	TC_198	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a text-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another text-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output		not-tested	new		Inference		\N	\N
1111	14	TS_Inference_027	Validating Image-to-Text task type	TC_100	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match		fail	completed	halloooooooo	Inference	admin	20	Open
1080	13	TS_Inference_126	Validating concurrency	TC_199	To verify the concurency of text to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a image-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another image-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.		not-tested	new		Inference		\N	\N
1081	13	TS_Inference_127	Validating concurrency	TC_200	To verify the concurency of image to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a speech-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another speech-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.		not-tested	new		Inference		\N	\N
1082	13	TS_Inference_128	Validating concurrency	TC_201	To verify the concurency of speech to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a image-to-image model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another image-to-image model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.		not-tested	new		Inference		\N	\N
1083	13	TS_Inference_129	Validating concurrency	TC_202	To verify the concurency of image to image task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a text-to-image model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another text-to-image model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.		not-tested	new		Inference		\N	\N
1084	13	TS_Inference_130	Validating concurrency	TC_203	To verify the concurency of text to image task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.		not-tested	new		Inference		\N	\N
937	12	TS_Models_007	\N	TC_236	Verify that the GUI lists only valid model directories, ignoring unrelated folders in the given model path.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A valid model path (e.g., /media/models/) exists with:\nSome valid model directories.\nSome unrelated/non-model folders (e.g., text files, logs, temp folders).\n\n4. SSH access to host system to verify contents.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Check if the default path /media/models/ is shown.\n\n5. Verify that only valid model directories are listed in the GUI.\n\n6. SSH into the host system.\n\n7. Run:\ndocker exec -it <container_name> ls /media/models/\n\n8. Cross-check the GUI list excludes unrelated folders or files.	GUI loads successfully in the browser.\n\nLogin is successful with valid credentials.\n\nModels Page is displayed correctly.\n\nDefault model path /media/models/ is pre-filled or visible in the input field.\n\nOnly valid model directories (e.g., containing expected structure/files) are shown in the GUI.\n\nSSH connection to the host system is successful.\n\nCommand runs without errors and lists contents of /media/models/ inside the container.\n\nGUI displays only valid models; unrelated files/folders (e.g., .txt, .log, temp files) are not shown.		not-tested	new		Models		\N	\N
1089	14	TS_Inference_001	Validating Text-to-Text task type	TC_74	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Text-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models	i am testing the actual results	fail	completed	tesing comments	Inference	johaan	\N	\N
946	12	TS_Models_015	\N	TC_245	Verify that uploading a model with the same name prompts for replacement and overwrites the existing model if confirmed.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model ZIP file (e.g., test_model.zip) is available.\n\n5. The model with the same name (test_model) already exists in the current models path (e.g., /media/models/).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure the models path is set to /media/models/.\n\n5. Confirm that test_model is already listed.\n\n6. Click the Upload Model button.\n\n7. Select the same model ZIP file (test_model.zip).\n\n8. Click the Upload button.\n\n9. Verify that a confirmation prompt appears asking if you want to replace the existing model.\n\n10. Confirm the replacement and wait for the upload to complete.\n\n11. SSH into the host system and check for updated files in /media/models/test_model/:\ndocker exec -it <container_name> ls -l /media/models/test_model/ \n\n12. Confirm that the existing model has been overwritten with the new contents.	GUI opens successfully in the browser.\n\nLogin completes successfully with valid credentials.\n\nModels Page loads correctly.\n\nModel path is correctly set to /media/models/.\n\ntest_model is listed in the models table.\n\nUpload Model dialog opens without issues.\n\ntest_model.zip is selected from the local system.\n\nUpload process is initiated upon clicking the Upload button.\n\nA confirmation prompt appears, asking whether to replace the existing test_model.\n\nUpon confirmation, upload completes successfully and the progress bar shows 100%.\n\nSSH command executes successfully and lists contents of /media/models/test_model/.\n\nFile timestamps or contents indicate that the model has been successfully overwritten with the new files.		not-tested	new		Models		\N	\N
947	12	TS_Models_016	\N	TC_246	Verify that refreshing the GUI during model upload allows resuming the upload process properly.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A large model ZIP file (to ensure noticeable upload time) is ready for testing.\n\n4. Stable network connection.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click Upload Model and select the large ZIP file.\n\n5. Start the upload process.\n\n6. While the upload is in progress, refresh the browser tab.\n\n7. Observe the behavior after the page reloads.\n\n8. Check whether the upload resumes automatically or prompts to resume after the page is refreshed.\n\n9. After upload completion, verify the model appears in the GUI.\n\n10. SSH into the host system to confirm the model is present in the models path:\ndocker exec -it <container_name> ls /media/models/\n	GUI opens in the browser successfully.\n\nLogin is successful using valid credentials.\n\nModels Page loads correctly.\n\nUpload Model button allows selection of a large ZIP file.\n\nUpload process begins, showing progress (e.g., progress bar).\n\nRefreshing the browser tab interrupts the upload process.\n\nAfter reload, the GUI:\n\nDoes not resume the upload automatically.\n\nDoes not prompt to resume the interrupted upload.\n\nUser must restart the upload manually.\n\nOnce the upload completes successfully, the uploaded model is listed in the Models Page.\n\nSSH into the host and run docker exec -it <container_name> ls /media/models/ shows the uploaded model directory is present and accessible.		not-tested	new		Models		\N	\N
948	12	TS_Models_017	\N	TC_247	Verify that selecting another ZIP file during an ongoing upload is blocked or disabled until the upload completes.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A large model ZIP file (for longer upload duration).\n\n4. Another model ZIP file for testing selection attempt during upload.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click Upload Model and select the large ZIP file.\n\n5. Begin the upload process.\n\n6. During the upload, try to click "Upload" again and select another ZIP file.\n\n7. Observe the behavior:\nThe second file selection should be blocked or disabled.\nNo interference with the current ongoing upload should occur. \n\n8. Wait for the upload to complete and confirm only the first file was processed.\n\n9. Verify the model appears in the GUI and on the host system:\ndocker exec -it <container_name> ls /media/models/	GUI opens successfully in the browser.\n\nLogin is successful with valid credentials.\n\nModels Page loads correctly.\n\nClicking Upload Model allows selecting a large ZIP file.\n\nUpload process begins and shows progress (e.g., progress bar or status).\n\nWhen trying to click "Upload" again and select another file during the current upload:\n\nThe second upload option is disabled or blocked.\n\nThe GUI does not allow starting a new upload while one is in progress.\n\nNo interference with the current upload occurs.\n\nOnce the first upload completes, only the initially selected model is processed and listed.\n\nThe uploaded model is displayed in the GUI list.\n\nSSH verification:\ndocker exec -it <container_name> ls /media/models/\nConfirms the model folder exists, indicating a successful single upload.		not-tested	new		Models		\N	\N
1096	14	TS_Inference_008	Validating Text-to-Text task type	TC_81	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point		fail	new		Inference	johaan	20	Open
949	12	TS_Models_018	\N	TC_248	Verify whether the GUI allows uploading multiple model ZIP files at once, and handles them correctly.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. Multiple valid model ZIP files are ready for upload.\n\n4. SSH access to host system to verify uploads.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click Upload Model and try selecting multiple ZIP files at once using Ctrl or Shift key.\n\n5. Observe if the GUI accepts multiple files simultaneously.\n\n6. If accepted, check upload progress for each file.\n\n7. Wait for uploads to complete.\n\n8. Verify all uploaded models appear in the GUI.\n\n9. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/\n\n10. Confirm that all uploaded models exist in the container path.	GUI opens successfully in the browser.\n\nLogin with valid credentials is successful.\n\nModels Page loads as expected.\n\nWhen clicking Upload Model and selecting multiple .zip files using Ctrl or Shift:\nGUI should allow multiple file selection if supported.\n\nIf multiple files are accepted:\nUpload progress is shown individually for each file, or a batch progress indicator appears.\n\nAll uploads complete without error.\n\nUploaded models are all listed in the GUI after completion.\n\nSSH verification:\ndocker exec -it <container_name> ls /media/models/\nConfirms that each uploaded model folder exists inside /media/models/.\n\nDirectory names should match the uploaded .zip contents.		not-tested	new		Models		\N	\N
950	12	TS_Models_019	\N	TC_249	Verify that uploading the same model ZIP file from multiple GUI tabs in parallel does not cause conflicts or errors.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A valid model ZIP file is ready for upload.\n\n4. SSH access to host system to verify uploads.	1. Open the GUI in two separate browser tabs.\n\n2. Login in both tabs using valid credentials.\n\n3. Navigate to the Models Page in both tabs.\n\n4. In each tab, select the same model ZIP file for upload.\n\n5. Click Upload in both tabs simultaneously or within a short time gap.\n\n6. Monitor both tabs for:\nAny errors or upload failures.\nProper UI handling of the upload process.\n\n7. After uploads complete, verify:\nModel is listed only once in the GUI.\nNo duplicate or corrupted entries.\n\n8. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/\n\n9. Confirm that the model directory exists and is valid (not duplicated or partially written).	1. GUI opens successfully in both browser tabs.\n\n2. Login is successful in both tabs using valid credentials.\n\n3. Models Page loads properly in each tab with all interface elements accessible.\n\n4. When the same .zip model file is selected for upload in both tabs the file is accepted without issue in both sessions.\n\n5. When uploads are initiated simultaneously or close in time:\n-> The GUI handles the uploads gracefully, without freezing or crashing.\n-> No upload errors or conflicts are shown in either tab.\n-> If a file conflict occurs, the system should prevent duplicate entries or show an informative message (e.g., "Model already exists").\n\n6. After uploads complete:\n-> The model appears only once in the GUI list, even if upload was triggered twice.\n-> No duplicate or corrupted model entries are visible.\n\n7. On SSH into the host system and running:\ndocker exec -it <container_name> ls /media/models/\nThe model directory exists and is correctly written.		not-tested	new		Models		\N	\N
951	12	TS_Models_020	\N	TC_250	Verify that uploading different model ZIP files in parallel from multiple GUI tabs works successfully without issues.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. At least two valid model ZIP files are ready for upload.\n\n4. SSH access to host system to verify uploads.	1. Open the GUI in two different browser tabs.\n\n2. Login in both tabs using valid credentials.\n\n3. Navigate to the Models Page in both tabs.\n\n4. In Tab 1, select and upload model_1.zip.\n\n5. In Tab 2, select and upload model_2.zip.\n\n6. Trigger the uploads simultaneously or with a short delay.\n\n7. Wait for both uploads to complete.\n\n8. Confirm:\nBoth models are listed in the GUI without error.\nGUI remains responsive during parallel upload.\n\n9. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/ \n\n10. Validate that both model_1 and model_2 directories are present and complete.	1. GUI opens in both tabs without error.\n\n2. Login succeeds in both tabs using valid credentials.\n\n3. Models Page loads properly in both tabs.\n\n4.model_1.zip and model_2.zip are accepted for upload.\n\n5. Simultaneous uploads are handled smoothly; no crashes or UI issues.\n\n6. Both models appear once in the GUI after upload.\n\n7. GUI stays responsive throughout the process.\n\n8. docker exec -it <container_name> ls /media/models/ shows both model_1 and model_2 directories.\n\n9. Directories are complete, with no duplicates or partial files.		not-tested	new		Models		\N	\N
1095	14	TS_Inference_007	Validating Text-to-Text task type	TC_80	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down		fail	new		Inference	johaan	21	Resolved
952	12	TS_Models_021	\N	TC_251	Verify that uploading a large dataset(to datasets page) and a model ZIP file(to models page) in parallel works smoothly without affecting each other.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A large dataset json file is available for upload.\n\n4. A valid model ZIP file is ready for upload.\n\n5. SSH access to host system for verification.	1. Open the GUI in two different browser tabs.\n\n2. Login using valid credentials in both tabs.\n\n3. In Tab 1, navigate to the Datasets Page.\n\n4. In Tab 2, navigate to the Models Page.\n\n5. In Tab 1, select and start uploading the large dataset json file.\n\n6. In Tab 2, select and start uploading the model ZIP file.\n\n7. Let both uploads happen in parallel.\n\n8. Wait for both uploads to complete.\n\n9. Confirm:\nThe dataset appears under the available datasets.\nThe model appears under the available models.\nGUI remains responsive and no errors occur during or after upload.\n\n10. SSH into the host system and verify:\ndocker exec -it <container_name> ls /usr/local/datasets/\ndocker exec -it <container_name> ls /media/models/\n\n11. Ensure both uploads are reflected correctly in their respective locations.	1. GUI opens in both tabs without issues.\n\n2. Login is successful in both tabs.\n\n3. Datasets Page and Models Page load correctly in respective tabs.\n\n4. Both dataset and model files are accepted for upload.\n\n5. Parallel uploads proceed without UI lag or conflict.\n\n6. Uploads complete successfully in both tabs.\n\n7. Dataset appears in Available Datasets; model appears in Available Models.\n\n8. GUI stays responsive; no errors or glitches during or after uploads.\n\n9. SSH check confirms dataset in /usr/local/datasets/, model in /media/models/.\n\n10. Both directories exist and contents are complete.\n		not-tested	new		Models		\N	\N
954	12	TS_Models_023	\N	TC_253	Verify that storage details are shown correctly when the model path is on \n(a) boot drive,\n (b) external drive, and \n(c) RAID on external drives.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. Model directories must exist in all three locations:\nBoot drive (e.g., /media/models_boot/)\nExternal drive (e.g., /media/models_ext/)\nRAID (e.g., /mnt/raid/models/)\n\n5. Proper permissions are given to allow container access to these paths.	 For each path (boot, external, RAID):\n1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter the corresponding model path in the input field.\n\n5. Click the Search button.\n\n6. Observe the storage details displayed (Total, Used, Free).\n\n7. SSH into the host system and run:\ndocker exec -it <container_name> df -h <model_path>\n\n8. Compare the values in GUI vs. output of the above command to validate accuracy.\n\n9. Repeat for all 3 paths (boot, external, RAID).	1. GUI opens and login succeeds.\n\n2. Models Page loads properly.\n\n3. Model path is accepted in the input field.\n\n4. Clicking Search displays storage details (Total, Used, Free).\n\n5. SSH command returns disk usage for the given path.\n\n6. GUI values match df -h output from container.\n\n7. Validation passes for boot, external, and RAID paths.		not-tested	new		Models		\N	\N
906	12	TS_Monitor_001	\N	TC_254	Verify that the values displayed in the Statistics table match the selected configuration from the Fine-tuning page, both during and after the fine-tuning process.	\N	\N	\N		not-tested	new		Monitor		\N	\N
907	12	TS_Monitor_002	\N	TC_255	Verify that, when no fine-tuning process is running, the GUI displays the maximum NVMe cache usage from the most recent fine-tuning session.	\N	\N	\N		not-tested	new		Monitor		\N	\N
908	12	TS_Monitor_003	\N	TC_256	Verify that the GUI displays the maximum GPU utilization and maximum VRAM usage from the most recent fine-tuning job when no training is currently active.	\N	\N	\N		not-tested	new		Monitor		\N	\N
909	12	TS_Monitor_004	\N	TC_257	Verify that the GUI displays the maximum CPU usage and maximum DRAM usage from the most recent fine-tuning job when no training is currently active.	\N	\N	\N		not-tested	new		Monitor		\N	\N
910	12	TS_Monitor_005	\N	TC_258	Verify that the loss vs. timestamp graph is correctly plotted for both live fine-tuning and the most recent completed fine-tuning job.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1086	14	TS_Inference_021	Validating Text-to-Text task type	TC_94	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input to the text box, the input should be passed to the model		not-tested	new		Inference		\N	\N
1087	14	TS_Inference_022	Validating Text-to-Text task type	TC_95	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded		not-tested	new		Inference		\N	\N
1088	14	TS_Inference_023	Validating Text-to-Text task type	TC_96	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed		not-tested	new		Inference		\N	\N
956	13	TS_Inference_021	Validating Text-to-Text task type	TC_94	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input to the text box, the input should be passed to the model		not-tested	new		Inference		\N	\N
1090	14	TS_Inference_002	Validating Text-to-Text task type	TC_75	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down		fail	new		Inference	johaan	\N	\N
1091	14	TS_Inference_003	Validating Text-to-Text task type	TC_76	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match		fail	new		Inference	johaan	\N	\N
1092	14	TS_Inference_004	Validating Text-to-Text task type	TC_77	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU		fail	new		Inference	johaan	\N	\N
1094	14	TS_Inference_006	Validating Text-to-Text task type	TC_79	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match		fail	new		Inference	johaan	\N	\N
957	13	TS_Inference_022	Validating Text-to-Text task type	TC_95	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded		not-tested	new		Inference		\N	\N
958	13	TS_Inference_023	Validating Text-to-Text task type	TC_96	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed		not-tested	new		Inference		\N	\N
959	13	TS_Inference_001	Validating Text-to-Text task type	TC_74	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Text-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models		not-tested	new		Inference		\N	\N
911	12	TS_Monitor_006	\N	TC_259	Verify that the log view displays the most recent 50 entries for both live fine-tuning and the most recently completed fine-tuning job.	\N	\N	\N		not-tested	new		Monitor		\N	\N
912	12	TS_Monitor_007	\N	TC_260	Verify that the training log file can be downloaded for both live fine-tuning and the most recently completed fine-tuning job.	\N	\N	\N		not-tested	new		Monitor		\N	\N
960	13	TS_Inference_002	Validating Text-to-Text task type	TC_75	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down		not-tested	new		Inference		\N	\N
961	13	TS_Inference_003	Validating Text-to-Text task type	TC_76	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
962	13	TS_Inference_004	Validating Text-to-Text task type	TC_77	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU		not-tested	new		Inference		\N	\N
963	13	TS_Inference_005	Validating Text-to-Text task type	TC_78	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's		not-tested	new		Inference		\N	\N
964	13	TS_Inference_006	Validating Text-to-Text task type	TC_79	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
965	13	TS_Inference_007	Validating Text-to-Text task type	TC_80	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down		not-tested	new		Inference		\N	\N
966	13	TS_Inference_008	Validating Text-to-Text task type	TC_81	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point		not-tested	new		Inference		\N	\N
967	13	TS_Inference_009	Validating Text-to-Text task type	TC_82	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)		not-tested	new		Inference		\N	\N
968	13	TS_Inference_010	Validating Text-to-Text task type	TC_83	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)		not-tested	new		Inference		\N	\N
969	13	TS_Inference_011	Validating Text-to-Text task type	TC_84	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task\n3. Click on "Text-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0		not-tested	new		Inference		\N	\N
970	13	TS_Inference_012	Validating Text-to-Text task type	TC_85	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model		not-tested	new		Inference		\N	\N
971	13	TS_Inference_013	Validating Text-to-Text task type	TC_86	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU		not-tested	new		Inference		\N	\N
972	13	TS_Inference_014	Validating Text-to-Text task type	TC_87	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path		not-tested	new		Inference		\N	\N
973	13	TS_Inference_015	Validating Text-to-Text task type	TC_88	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded		not-tested	new		Inference		\N	\N
974	13	TS_Inference_016	Validating Text-to-Text task type	TC_89	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Leave the input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded		not-tested	new		Inference		\N	\N
975	13	TS_Inference_017	Validating Text-to-Text task type	TC_90	To verify the functionality of send button without passing any input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in the message field\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please enter the input		not-tested	new		Inference		\N	\N
976	13	TS_Inference_018	Validating Text-to-Text task type	TC_91	To verify the functionality of send button by passing an input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully (Try with different models)\n3. Enter text input and click "Send" button\n4. Verify model generates corresponding output\nConfirm output is displayed correctly in response area	The input should be passed to the model once the user clicks send button 		not-tested	new		Inference		\N	\N
977	13	TS_Inference_019	Validating Text-to-Text task type	TC_92	To verify whether the output is being generated for an input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input exceeding the maximum allowed length\n4. Verify input field enforces character limit\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input provided		not-tested	new		Inference		\N	\N
978	13	TS_Inference_024	Validating Text-to-Text task type	TC_97	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output		not-tested	new		Inference		\N	\N
979	13	TS_Inference_025	Validating Image-to-Text task type	TC_98	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Image-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models		not-tested	new		Inference		\N	\N
980	13	TS_Inference_026	Validating Image-to-Text task type	TC_99	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down		not-tested	new		Inference		\N	\N
981	13	TS_Inference_027	Validating Image-to-Text task type	TC_100	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
982	13	TS_Inference_028	Validating Image-to-Text task type	TC_101	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU		not-tested	new		Inference		\N	\N
983	13	TS_Inference_029	Validating Image-to-Text task type	TC_102	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's		not-tested	new		Inference		\N	\N
984	13	TS_Inference_030	Validating Image-to-Text task type	TC_103	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
913	12	TS_Monitor_008	\N	TC_261	Verify that GPU, CPU, and DRAM metrics are fetched and displayed accurately in real-time during the fine-tuning process.	\N	\N	\N		not-tested	new		Monitor		\N	\N
914	12	TS_Monitor_009	\N	TC_262	Verify that the elapsed time counter functions correctly and continues to run accurately during fine-tuning sessions exceeding 2 days	\N	\N	\N		not-tested	new		Monitor		\N	\N
986	13	TS_Inference_032	Validating Image-to-Text task type	TC_105	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point		not-tested	new		Inference		\N	\N
987	13	TS_Inference_033	Validating Image-to-Text task type	TC_106	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)		not-tested	new		Inference		\N	\N
988	13	TS_Inference_034	Validating Image-to-Text task type	TC_107	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)		not-tested	new		Inference		\N	\N
989	13	TS_Inference_035	Validating Image-to-Text task type	TC_108	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task\n3. Click on "Image-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0		not-tested	new		Inference		\N	\N
990	13	TS_Inference_036	Validating Image-to-Text task type	TC_109	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model		not-tested	new		Inference		\N	\N
991	13	TS_Inference_037	Validating Image-to-Text task type	TC_110	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU		not-tested	new		Inference		\N	\N
992	13	TS_Inference_038	Validating Image-to-Text task type	TC_111	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path		not-tested	new		Inference		\N	\N
993	13	TS_Inference_039	Validating Image-to-Text task type	TC_112	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded		not-tested	new		Inference		\N	\N
994	13	TS_Inference_040	Validating Image-to-Text task type	TC_113	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3.  Don't Upload input image\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded		not-tested	new		Inference		\N	\N
995	13	TS_Inference_041	Validating Image-to-Text task type	TC_114	To verify the functionality of send button without passing any input image	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input image		not-tested	new		Inference		\N	\N
996	13	TS_Inference_042	Validating Image-to-Text task type	TC_115	To verify the functionality of send button by passing an input image	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully (Try with different models)\n3.Upload input image and click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input image should be passed to the model once the user clicks send button 		not-tested	new		Inference		\N	\N
997	13	TS_Inference_043	Validating Image-to-Text task type	TC_116	To verify whether the output is being generated for an input image provided	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image with more size than  maximum allowed size\n4. Verify image doesn't upload\n5. Confirm error message displays reached the maximum allowed size 	The output should be generated for the input image provided		not-tested	new		Inference		\N	\N
998	13	TS_Inference_044	Validating Image-to-Text task type	TC_117	To verify the maximum number of input images that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give more than one input image at a time		not-tested	new		Inference		\N	\N
999	13	TS_Inference_045	Validating Image-to-Text task type	TC_118	To verify wehther the enter key is working to pass input image to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by selecting an input image , the input should be passed to the model		not-tested	new		Inference		\N	\N
1000	13	TS_Inference_046	Validating Image-to-Text task type	TC_119	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded		not-tested	new		Inference		\N	\N
1001	13	TS_Inference_047	Validating Image-to-Text task type	TC_120	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input images\n3. verify all the formats are supported	The model should be automatically unloaded and a fresh page should be displayed		not-tested	new		Inference		\N	\N
1002	13	TS_Inference_048	Validating Image-to-Text task type	TC_121	To verify the format of input images supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The user should be able to give any format of input image		not-tested	new		Inference		\N	\N
1003	13	TS_Inference_049	Validating Image-to-Text task type	TC_122	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output		not-tested	new		Inference		\N	\N
1004	13	TS_Inference_050	Validating Speech-to-Text task type	TC_123	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Speech-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models		not-tested	new		Inference		\N	\N
1005	13	TS_Inference_051	Validating Speech-to-Text task type	TC_124	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down		not-tested	new		Inference		\N	\N
1006	13	TS_Inference_052	Validating Speech-to-Text task type	TC_125	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
1007	13	TS_Inference_053	Validating Speech-to-Text task type	TC_126	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU		not-tested	new		Inference		\N	\N
1008	13	TS_Inference_054	Validating Speech-to-Text task type	TC_127	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's		not-tested	new		Inference		\N	\N
1009	13	TS_Inference_055	Validating Speech-to-Text task type	TC_128	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
1010	13	TS_Inference_056	Validating Speech-to-Text task type	TC_129	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down		not-tested	new		Inference		\N	\N
915	12	TS_Monitor_010	\N	TC_263	Verify that the elapsed time counter handles date changes correctly by starting fine-tuning before midnight (e.g., 11 PM) and ensuring the elapsed time continues accurately past midnight (e.g., after 12 AM).	\N	\N	\N		not-tested	new		Monitor		\N	\N
1011	13	TS_Inference_057	Validating Speech-to-Text task type	TC_130	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point		not-tested	new		Inference		\N	\N
1012	13	TS_Inference_058	Validating Speech-to-Text task type	TC_131	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)		not-tested	new		Inference		\N	\N
1013	13	TS_Inference_059	Validating Speech-to-Text task type	TC_132	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)		not-tested	new		Inference		\N	\N
1014	13	TS_Inference_060	Validating Speech-to-Text task type	TC_133	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task\n3. Click on "Speech-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0		not-tested	new		Inference		\N	\N
1015	13	TS_Inference_061	Validating Speech-to-Text task type	TC_134	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model		not-tested	new		Inference		\N	\N
1016	13	TS_Inference_062	Validating Speech-to-Text task type	TC_135	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU		not-tested	new		Inference		\N	\N
1017	13	TS_Inference_063	Validating Speech-to-Text task type	TC_136	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path		not-tested	new		Inference		\N	\N
1018	13	TS_Inference_064	Validating Speech-to-Text task type	TC_137	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded		not-tested	new		Inference		\N	\N
1019	13	TS_Inference_065	Validating Speech-to-Text task type	TC_138	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Don't Upload input audio file\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded		not-tested	new		Inference		\N	\N
916	12	TS_Monitor_011	\N	TC_264	Verify that the 'Stop Training' button is enabled during the fine-tuning process and functions correctly when clicked, terminating the training as expected.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1020	13	TS_Inference_066	Validating Speech-to-Text task type	TC_139	To verify the functionality of send button without passing any input audio	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input audio		not-tested	new		Inference		\N	\N
1021	13	TS_Inference_067	Validating Speech-to-Text task type	TC_140	To verify the functionality of send button by passing an input audio	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully (Try with different models)\n3. Upload input audio file and click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input audio should be passed to the model once the user clicks send button 		not-tested	new		Inference		\N	\N
1022	13	TS_Inference_068	Validating Speech-to-Text task type	TC_141	To verify whether the output is being generated for an input audio file	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file exceeding the maximum allowed time limit\n4. Verify upload doesn't succeed\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input audio provided		not-tested	new		Inference		\N	\N
1023	13	TS_Inference_069	Validating Speech-to-Text task type	TC_142	To verify the maximum number of input audio's that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give more than one input audio at a time		not-tested	new		Inference		\N	\N
1024	13	TS_Inference_070	Validating Speech-to-Text task type	TC_143	To verify wehther the enter key is working to pass input image to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input audio, the input should be passed to the model		not-tested	new		Inference		\N	\N
1025	13	TS_Inference_071	Validating Speech-to-Text task type	TC_144	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded		not-tested	new		Inference		\N	\N
1026	13	TS_Inference_072	Validating Speech-to-Text task type	TC_145	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input audio's\n3. verify all the formats are supported	The model should be automatically unloaded and a fresh page should be displayed		not-tested	new		Inference		\N	\N
1027	13	TS_Inference_073	Validating Speech-to-Text task type	TC_146	To verify the format of input audio's supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The user should be able to give any format of input audio		not-tested	new		Inference		\N	\N
1097	14	TS_Inference_009	Validating Text-to-Text task type	TC_82	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)		not-tested	new		Inference		\N	\N
1098	14	TS_Inference_010	Validating Text-to-Text task type	TC_83	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)		not-tested	new		Inference		\N	\N
1028	13	TS_Inference_074	Validating Speech-to-Text task type	TC_147	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select any Language and Load a Speech-to-Text model successfully\n3. Verify the user can be able to select any language from the dropdown	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output		not-tested	new		Inference		\N	\N
1029	13	TS_Inference_075	Validating Speech-to-Text task type	TC_148	To verify the functionality of language selection dropdown  	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select any Language and Load a Speech-to-Text model successfully\n3. Upload an audio file\n4. Verify the output language against the selected language	The user should be able to select any language from the drop down		not-tested	new		Inference		\N	\N
1030	13	TS_Inference_076	Validating Speech-to-Text task type	TC_149	To verify the selected language against the generated output 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The selected language and  the language of output generated should be same		not-tested	new		Inference		\N	\N
1031	13	TS_Inference_077	Validating Image-to-Image task type	TC_150	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Image-to-Image task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models		not-tested	new		Inference		\N	\N
1032	13	TS_Inference_078	Validating Image-to-Image task type	TC_151	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down		not-tested	new		Inference		\N	\N
1033	13	TS_Inference_079	Validating Image-to-Image task type	TC_152	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
1099	14	TS_Inference_011	Validating Text-to-Text task type	TC_84	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task\n3. Click on "Text-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0		not-tested	new		Inference		\N	\N
1100	14	TS_Inference_012	Validating Text-to-Text task type	TC_85	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model		not-tested	new		Inference		\N	\N
1101	14	TS_Inference_013	Validating Text-to-Text task type	TC_86	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU		not-tested	new		Inference		\N	\N
1034	13	TS_Inference_080	Validating Image-to-Image task type	TC_153	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU		not-tested	new		Inference		\N	\N
1035	13	TS_Inference_081	Validating Image-to-Image task type	TC_154	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's		not-tested	new		Inference		\N	\N
1036	13	TS_Inference_082	Validating Image-to-Image task type	TC_155	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
917	12	TS_Monitor_012	\N	TC_265	Verify that the values for 'Current Epoch', 'Micro Batches', and 'Total Epoch' are correctly initialized at the start of fine-tuning and continue to update accurately as training progresses.	\N	\N	\N		not-tested	new		Monitor		\N	\N
918	12	TS_Monitor_013	\N	TC_266	Verify that the NVMe drive is correctly detected and displayed in the GUI, even when the mount point is different from the default /mnt/nvme0 on the host system.	\N	\N	\N		not-tested	new		Monitor		\N	\N
944	12	TS_Models_013	\N	TC_243	Verify that uploading a non-model ZIP file triggers an appropriate error message in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A non-model ZIP file (e.g., a .txt.zip, .json.zip, or any other file type not a model) is available for upload.\n\n5. The models path in the GUI is set to a valid directory where the model is supposed to be uploaded.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select a non-model ZIP file (e.g., .txt.zip, .json.zip, etc.) from your system.\n\n6. Click the Upload button to initiate the upload.\n\n7. Wait for the upload process to complete.\n\n8. Ensure that the GUI displays an appropriate error message indicating that the file is not a valid model ZIP file.\n\n9. Verify that no model is listed in the models page after the upload attempt.\n\n10. SSH into the host system and check the model path directory.\ndocker exec -it <container_name> ls /path/to/models/\n\n11. Confirm that the non-model ZIP file was not extracted or saved in the models directory.	GUI loads successfully in the browser.\n\nLogin completes successfully using valid credentials.\n\nModels Page is displayed without any errors.\n\nUpload Model dialog opens correctly.\n\nA non-model ZIP file is selected from the local system.\n\nUpload is attempted by clicking the Upload button.\n\nUpload process completes or halts with error handling.\n\nGUI displays an error message indicating the file is not a valid model ZIP file.\n\nNo new model appears in the models list after the failed upload.\n\nSSH access to the host system and the container is successful.\n\nThe non-model ZIP file is not present or extracted in the model path directory.		not-tested	new		Models		\N	\N
945	12	TS_Models_014	\N	TC_244	Verify that uploading a corrupted or improperly structured ZIP file (e.g., model.txt.zip) is handled gracefully with an appropriate error message in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A corrupted or improperly structured ZIP file (e.g., model.txt.zip or any other file with incorrect contents) is available for upload.\n\n5. The models path in the GUI is set to a valid directory where models are supposed to be uploaded.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select the corrupted or improperly structured ZIP file (e.g., model.txt.zip).\n\n6. Click the Upload button to initiate the upload.\n\n7. Ensure that the GUI displays an appropriate error message indicating that the ZIP file is corrupted or improperly structured.\n\n8. Verify that the model does not appear in the models list after the upload attempt.\n\n9. SSH into the host system and check the model path directory.\ndocker exec -it <container_name> ls /path/to/models/\n\n10. Confirm that the corrupted ZIP file was not extracted or saved in the models directory.	GUI opens successfully in the browser.\n\nLogin is successful with valid credentials.\n\nModels Page is displayed correctly.\n\nUpload Model dialog opens without issues.\n\nA corrupted or improperly structured ZIP file is selected.\n\nUpload is initiated by clicking the Upload button.\n\nGUI shows a clear and appropriate error message indicating the ZIP file is corrupted or not structured properly.\n\nThe corrupted model does not appear in the models list on the GUI.\n\nSSH into the host system and list command runs successfully.\n\nThe corrupted ZIP file is not found or extracted in the models directory.		not-tested	new		Models		\N	\N
1037	13	TS_Inference_083	Validating Image-to-Image task type	TC_156	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down		not-tested	new		Inference		\N	\N
1038	13	TS_Inference_084	Validating Image-to-Image task type	TC_157	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point		not-tested	new		Inference		\N	\N
1039	13	TS_Inference_085	Validating Image-to-Image task type	TC_158	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)		not-tested	new		Inference		\N	\N
1040	13	TS_Inference_086	Validating Image-to-Image task type	TC_159	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)		not-tested	new		Inference		\N	\N
1041	13	TS_Inference_087	Validating Image-to-Image task type	TC_160	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task\n3. Click on "Image-to-Image-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0		not-tested	new		Inference		\N	\N
1042	13	TS_Inference_088	Validating Image-to-Image task type	TC_161	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model		not-tested	new		Inference		\N	\N
1102	14	TS_Inference_014	Validating Text-to-Text task type	TC_87	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path		not-tested	new		Inference		\N	\N
919	12	TS_Monitor_014	\N	TC_267	Verify that the NVMe drive is detected and its usage metrics are fetched correctly across all supported configurations, including partitions, different file systems (e.g., ext4, xfs), LVM volumes, and RAID 0 setups.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1043	13	TS_Inference_089	Validating Image-to-Image task type	TC_162	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU		not-tested	new		Inference		\N	\N
1103	14	TS_Inference_015	Validating Text-to-Text task type	TC_88	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Text" task and "Text-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded		not-tested	new		Inference		\N	\N
1044	13	TS_Inference_090	Validating Image-to-Image task type	TC_163	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path		not-tested	new		Inference		\N	\N
1045	13	TS_Inference_091	Validating Image-to-Image task type	TC_164	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded		not-tested	new		Inference		\N	\N
920	12	TS_Monitor_015	\N	TC_268	Verify that the GUI accurately fetches and displays GPU details only for the selected GPUs during the fine-tuning process.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1046	13	TS_Inference_092	Validating Image-to-Image task type	TC_165	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3.  Don't Upload input image and leave input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded		not-tested	new		Inference		\N	\N
1047	13	TS_Inference_093	Validating Image-to-Image task type	TC_166	To verify the functionality of send button without passing any input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image and  leave the text input field empty \n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input image		not-tested	new		Inference		\N	\N
1048	13	TS_Inference_094	Validating Image-to-Image task type	TC_167	To verify the functionality of send button by passing an input image and leaving the text input field empty	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully (Try with different models)\n3.Upload input image and enter input text click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input image should be passed to the model and should be able to get ouput also		not-tested	new		Inference		\N	\N
1049	13	TS_Inference_095	Validating Image-to-Image task type	TC_168	To verify the functionality of send button by passing an input image and input text	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image with more size than  maximum allowed size\n4. Verify image doesn't upload\n5. Confirm error message displays reached the maximum allowed size 	The output image should be generated for the provided input image and input text		not-tested	new		Inference		\N	\N
1050	13	TS_Inference_096	Validating Image-to-Image task type	TC_169	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input		not-tested	new		Inference		\N	\N
1051	13	TS_Inference_097	Validating Image-to-Image task type	TC_170	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by selecting an input image, the input image should be passed to the model		not-tested	new		Inference		\N	\N
1104	14	TS_Inference_016	Validating Text-to-Text task type	TC_89	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Leave the input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded		not-tested	new		Inference		\N	\N
1053	13	TS_Inference_099	Validating Image-to-Image task type	TC_172	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed		not-tested	new		Inference		\N	\N
1054	13	TS_Inference_100	Validating Image-to-Image task type	TC_173	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input images\n3. verify all the formats are supported	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output		not-tested	new		Inference		\N	\N
1105	14	TS_Inference_017	Validating Text-to-Text task type	TC_90	To verify the functionality of send button without passing any input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in the message field\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please enter the input		not-tested	new		Inference		\N	\N
1106	14	TS_Inference_018	Validating Text-to-Text task type	TC_91	To verify the functionality of send button by passing an input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully (Try with different models)\n3. Enter text input and click "Send" button\n4. Verify model generates corresponding output\nConfirm output is displayed correctly in response area	The input should be passed to the model once the user clicks send button 		not-tested	new		Inference		\N	\N
1107	14	TS_Inference_019	Validating Text-to-Text task type	TC_92	To verify whether the output is being generated for an input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input exceeding the maximum allowed length\n4. Verify input field enforces character limit\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input provided		not-tested	new		Inference		\N	\N
1108	14	TS_Inference_024	Validating Text-to-Text task type	TC_97	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output		not-tested	new		Inference		\N	\N
921	12	TS_Monitor_016	\N	TC_269	Verify that the log file view allows scrolling to the top while the training process is ongoing.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1109	14	TS_Inference_025	Validating Image-to-Text task type	TC_98	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Image-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models		not-tested	new		Inference		\N	\N
1110	14	TS_Inference_026	Validating Image-to-Text task type	TC_99	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down		not-tested	new		Inference		\N	\N
1112	14	TS_Inference_028	Validating Image-to-Text task type	TC_101	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU		not-tested	new		Inference		\N	\N
1055	13	TS_Inference_101	Validating Image-to-Image task type	TC_174	To verify the format of input images supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to upload any format of images		not-tested	new		Inference		\N	\N
1056	13	TS_Inference_102	Validating Text-to-Image task type	TC_175	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Text-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models		not-tested	new		Inference		\N	\N
1113	14	TS_Inference_029	Validating Image-to-Text task type	TC_102	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's		not-tested	new		Inference		\N	\N
1114	14	TS_Inference_030	Validating Image-to-Text task type	TC_103	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
1115	14	TS_Inference_031	Validating Image-to-Text task type	TC_104	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down		not-tested	new		Inference		\N	\N
1116	14	TS_Inference_032	Validating Image-to-Text task type	TC_105	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point		not-tested	new		Inference		\N	\N
1117	14	TS_Inference_033	Validating Image-to-Text task type	TC_106	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)		not-tested	new		Inference		\N	\N
1118	14	TS_Inference_034	Validating Image-to-Text task type	TC_107	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)		not-tested	new		Inference		\N	\N
1119	14	TS_Inference_035	Validating Image-to-Text task type	TC_108	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task\n3. Click on "Image-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0		not-tested	new		Inference		\N	\N
1120	14	TS_Inference_036	Validating Image-to-Text task type	TC_109	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model		not-tested	new		Inference		\N	\N
1121	14	TS_Inference_037	Validating Image-to-Text task type	TC_110	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU		not-tested	new		Inference		\N	\N
1122	14	TS_Inference_038	Validating Image-to-Text task type	TC_111	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path		not-tested	new		Inference		\N	\N
1123	14	TS_Inference_039	Validating Image-to-Text task type	TC_112	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Text" task and "Image-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded		not-tested	new		Inference		\N	\N
1124	14	TS_Inference_040	Validating Image-to-Text task type	TC_113	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3.  Don't Upload input image\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded		not-tested	new		Inference		\N	\N
1125	14	TS_Inference_041	Validating Image-to-Text task type	TC_114	To verify the functionality of send button without passing any input image	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input image		not-tested	new		Inference		\N	\N
1126	14	TS_Inference_042	Validating Image-to-Text task type	TC_115	To verify the functionality of send button by passing an input image	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully (Try with different models)\n3.Upload input image and click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input image should be passed to the model once the user clicks send button 		not-tested	new		Inference		\N	\N
1127	14	TS_Inference_043	Validating Image-to-Text task type	TC_116	To verify whether the output is being generated for an input image provided	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image with more size than  maximum allowed size\n4. Verify image doesn't upload\n5. Confirm error message displays reached the maximum allowed size 	The output should be generated for the input image provided		not-tested	new		Inference		\N	\N
1128	14	TS_Inference_044	Validating Image-to-Text task type	TC_117	To verify the maximum number of input images that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Upload input image\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give more than one input image at a time		not-tested	new		Inference		\N	\N
1129	14	TS_Inference_045	Validating Image-to-Text task type	TC_118	To verify wehther the enter key is working to pass input image to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by selecting an input image , the input should be passed to the model		not-tested	new		Inference		\N	\N
1130	14	TS_Inference_046	Validating Image-to-Text task type	TC_119	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded		not-tested	new		Inference		\N	\N
1057	13	TS_Inference_103	Validating Text-to-Image task type	TC_176	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down		not-tested	new		Inference		\N	\N
1131	14	TS_Inference_047	Validating Image-to-Text task type	TC_120	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input images\n3. verify all the formats are supported	The model should be automatically unloaded and a fresh page should be displayed		not-tested	new		Inference		\N	\N
1132	14	TS_Inference_048	Validating Image-to-Text task type	TC_121	To verify the format of input images supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The user should be able to give any format of input image		not-tested	new		Inference		\N	\N
1133	14	TS_Inference_049	Validating Image-to-Text task type	TC_122	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output		not-tested	new		Inference		\N	\N
922	12	TS_Monitor_017	\N	TC_270	Verify that when opening the Monitor page for the first time after GUI container creation (without starting fine-tuning), no details from any previous fine-tuning processes are displayed.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1134	14	TS_Inference_050	Validating Speech-to-Text task type	TC_123	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Speech-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models		not-tested	new		Inference		\N	\N
1135	14	TS_Inference_051	Validating Speech-to-Text task type	TC_124	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down		not-tested	new		Inference		\N	\N
1136	14	TS_Inference_052	Validating Speech-to-Text task type	TC_125	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
1137	14	TS_Inference_053	Validating Speech-to-Text task type	TC_126	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU		not-tested	new		Inference		\N	\N
1138	14	TS_Inference_054	Validating Speech-to-Text task type	TC_127	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's		not-tested	new		Inference		\N	\N
1139	14	TS_Inference_055	Validating Speech-to-Text task type	TC_128	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
1140	14	TS_Inference_056	Validating Speech-to-Text task type	TC_129	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down		not-tested	new		Inference		\N	\N
1141	14	TS_Inference_057	Validating Speech-to-Text task type	TC_130	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point		not-tested	new		Inference		\N	\N
1142	14	TS_Inference_058	Validating Speech-to-Text task type	TC_131	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)		not-tested	new		Inference		\N	\N
1143	14	TS_Inference_059	Validating Speech-to-Text task type	TC_132	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)		not-tested	new		Inference		\N	\N
1144	14	TS_Inference_060	Validating Speech-to-Text task type	TC_133	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task\n3. Click on "Speech-to-Text-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0		not-tested	new		Inference		\N	\N
1145	14	TS_Inference_061	Validating Speech-to-Text task type	TC_134	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model		not-tested	new		Inference		\N	\N
1146	14	TS_Inference_062	Validating Speech-to-Text task type	TC_135	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU		not-tested	new		Inference		\N	\N
923	12	TS_Monitor_018	\N	TC_271	Verify that after leaving the Monitor page idle for an extended period (e.g., 30 minutes) and returning to it, the page updates correctly and displays the latest fine-tuning status without requiring a manual refresh.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1147	14	TS_Inference_063	Validating Speech-to-Text task type	TC_136	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path		not-tested	new		Inference		\N	\N
1148	14	TS_Inference_064	Validating Speech-to-Text task type	TC_137	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Speech to Text" task and "Speech-to-Text-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded		not-tested	new		Inference		\N	\N
1149	14	TS_Inference_065	Validating Speech-to-Text task type	TC_138	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Don't Upload input audio file\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded		not-tested	new		Inference		\N	\N
1150	14	TS_Inference_066	Validating Speech-to-Text task type	TC_139	To verify the functionality of send button without passing any input audio	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input audio		not-tested	new		Inference		\N	\N
1151	14	TS_Inference_067	Validating Speech-to-Text task type	TC_140	To verify the functionality of send button by passing an input audio	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully (Try with different models)\n3. Upload input audio file and click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input audio should be passed to the model once the user clicks send button 		not-tested	new		Inference		\N	\N
1152	14	TS_Inference_068	Validating Speech-to-Text task type	TC_141	To verify whether the output is being generated for an input audio file	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Upload input audio file exceeding the maximum allowed time limit\n4. Verify upload doesn't succeed\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input audio provided		not-tested	new		Inference		\N	\N
1154	14	TS_Inference_070	Validating Speech-to-Text task type	TC_143	To verify wehther the enter key is working to pass input image to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Speech-to-Text model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input audio, the input should be passed to the model		not-tested	new		Inference		\N	\N
1155	14	TS_Inference_071	Validating Speech-to-Text task type	TC_144	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded		not-tested	new		Inference		\N	\N
1156	14	TS_Inference_072	Validating Speech-to-Text task type	TC_145	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input audio's\n3. verify all the formats are supported	The model should be automatically unloaded and a fresh page should be displayed		not-tested	new		Inference		\N	\N
1157	14	TS_Inference_073	Validating Speech-to-Text task type	TC_146	To verify the format of input audio's supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The user should be able to give any format of input audio		not-tested	new		Inference		\N	\N
1158	14	TS_Inference_074	Validating Speech-to-Text task type	TC_147	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select any Language and Load a Speech-to-Text model successfully\n3. Verify the user can be able to select any language from the dropdown	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output		not-tested	new		Inference		\N	\N
1159	14	TS_Inference_075	Validating Speech-to-Text task type	TC_148	To verify the functionality of language selection dropdown  	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select any Language and Load a Speech-to-Text model successfully\n3. Upload an audio file\n4. Verify the output language against the selected language	The user should be able to select any language from the drop down		not-tested	new		Inference		\N	\N
1160	14	TS_Inference_076	Validating Speech-to-Text task type	TC_149	To verify the selected language against the generated output 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The selected language and  the language of output generated should be same		not-tested	new		Inference		\N	\N
1161	14	TS_Inference_077	Validating Image-to-Image task type	TC_150	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Image-to-Image task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models		not-tested	new		Inference		\N	\N
953	12	TS_Models_022	\N	TC_252	Cancelling the file upload process during the file upload is in progress.	\N	\N	\N		not-tested	new		Models		\N	\N
1162	14	TS_Inference_078	Validating Image-to-Image task type	TC_151	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down		not-tested	new		Inference		\N	\N
1163	14	TS_Inference_079	Validating Image-to-Image task type	TC_152	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
1164	14	TS_Inference_080	Validating Image-to-Image task type	TC_153	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU		not-tested	new		Inference		\N	\N
1165	14	TS_Inference_081	Validating Image-to-Image task type	TC_154	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's		not-tested	new		Inference		\N	\N
1166	14	TS_Inference_082	Validating Image-to-Image task type	TC_155	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
924	12	TS_Monitor_019	\N	TC_272	Verify the behavior when restarting the GUI container during an active fine-tuning process (simulating a system restart). Ensure that fine-tuning stops as expected and check how the GUI handles the interrupted session upon restart.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1167	14	TS_Inference_083	Validating Image-to-Image task type	TC_156	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down		not-tested	new		Inference		\N	\N
1168	14	TS_Inference_084	Validating Image-to-Image task type	TC_157	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point		not-tested	new		Inference		\N	\N
1169	14	TS_Inference_085	Validating Image-to-Image task type	TC_158	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)		not-tested	new		Inference		\N	\N
1170	14	TS_Inference_086	Validating Image-to-Image task type	TC_159	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)		not-tested	new		Inference		\N	\N
1171	14	TS_Inference_087	Validating Image-to-Image task type	TC_160	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task\n3. Click on "Image-to-Image-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0		not-tested	new		Inference		\N	\N
1172	14	TS_Inference_088	Validating Image-to-Image task type	TC_161	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model		not-tested	new		Inference		\N	\N
1173	14	TS_Inference_089	Validating Image-to-Image task type	TC_162	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU		not-tested	new		Inference		\N	\N
1174	14	TS_Inference_090	Validating Image-to-Image task type	TC_163	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path		not-tested	new		Inference		\N	\N
1175	14	TS_Inference_091	Validating Image-to-Image task type	TC_164	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Image to Image" task and "Image-to-Image-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded		not-tested	new		Inference		\N	\N
1176	14	TS_Inference_092	Validating Image-to-Image task type	TC_165	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3.  Don't Upload input image and leave input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded		not-tested	new		Inference		\N	\N
1177	14	TS_Inference_093	Validating Image-to-Image task type	TC_166	To verify the functionality of send button without passing any input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image and  leave the text input field empty \n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please give the input image		not-tested	new		Inference		\N	\N
1178	14	TS_Inference_094	Validating Image-to-Image task type	TC_167	To verify the functionality of send button by passing an input image and leaving the text input field empty	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully (Try with different models)\n3.Upload input image and enter input text click "Send" button\n4. Verify model generates corresponding output\n5. Confirm output is displayed correctly in response area	The input image should be passed to the model and should be able to get ouput also		not-tested	new		Inference		\N	\N
1179	14	TS_Inference_095	Validating Image-to-Image task type	TC_168	To verify the functionality of send button by passing an input image and input text	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image with more size than  maximum allowed size\n4. Verify image doesn't upload\n5. Confirm error message displays reached the maximum allowed size 	The output image should be generated for the provided input image and input text		not-tested	new		Inference		\N	\N
1180	14	TS_Inference_096	Validating Image-to-Image task type	TC_169	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Upload input image\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input		not-tested	new		Inference		\N	\N
925	12	TS_Monitor_020	\N	TC_273	Verify the behavior when stopping the GUI container, unmounting NVMe drives on the host system, and then restarting the container while no training process is running. Ensure that the system correctly handles missing mount points, considering a scenario where the system was rebooted and the mounts were not persistent.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1181	14	TS_Inference_097	Validating Image-to-Image task type	TC_170	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Image-to-Image model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by selecting an input image, the input image should be passed to the model		not-tested	new		Inference		\N	\N
1182	14	TS_Inference_098	Validating Image-to-Image task type	TC_171	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded		not-tested	new		Inference		\N	\N
1183	14	TS_Inference_099	Validating Image-to-Image task type	TC_172	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed		not-tested	new		Inference		\N	\N
1184	14	TS_Inference_100	Validating Image-to-Image task type	TC_173	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page.\n2. Try to upload different format of input images\n3. verify all the formats are supported	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output		not-tested	new		Inference		\N	\N
1185	14	TS_Inference_101	Validating Image-to-Image task type	TC_174	To verify the format of input images supported	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	The user should be able to upload any format of images		not-tested	new		Inference		\N	\N
1186	14	TS_Inference_102	Validating Text-to-Image task type	TC_175	To verify the functionality of the select a model dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Click on Text-to-Text task type\n3. Click on the Available Models dropdown in the left sidebar\n4. Select any model from the list of available models\n5. Verify that the selected model gets highlighted and applied for inference\n 	Once the user click on the drop down it should list all the available models		not-tested	new		Inference		\N	\N
1187	14	TS_Inference_103	Validating Text-to-Image task type	TC_176	To verify the selection of models from the dropdown	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'nvidia-smi' command to check available GPUs\n2. Navigate to MiPhi Inference page\n3. Check the GPU Selection section in the left sidebar\n4. Compare the number of GPUs shown in GUI against terminal output\n5. Verify that GPU utilization percentages match between GUI and terminal	The user should be able to select any model from the drop down		not-tested	new		Inference		\N	\N
1188	14	TS_Inference_104	Validating Text-to-Image task type	TC_177	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
1189	14	TS_Inference_105	Validating Text-to-Image task type	TC_178	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU		not-tested	new		Inference		\N	\N
1190	14	TS_Inference_106	Validating Text-to-Image task type	TC_179	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's		not-tested	new		Inference		\N	\N
1191	14	TS_Inference_107	Validating Text-to-Image task type	TC_180	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
1192	14	TS_Inference_108	Validating Text-to-Image task type	TC_181	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down		not-tested	new		Inference		\N	\N
1193	14	TS_Inference_109	Validating Text-to-Image task type	TC_182	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point		not-tested	new		Inference		\N	\N
926	12	TS_Monitor_021	\N	TC_274	Verify that the GUI accurately displays the real-time GPU VRAM usage for the ongoing fine-tuning process while also showing the total VRAM usage across all processes running on the same GPU.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1194	14	TS_Inference_110	Validating Text-to-Image task type	TC_183	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)		not-tested	new		Inference		\N	\N
1195	14	TS_Inference_111	Validating Text-to-Image task type	TC_184	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)		not-tested	new		Inference		\N	\N
1196	14	TS_Inference_112	Validating Text-to-Image task type	TC_185	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task\n3. Click on "Text-to-Image-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0		not-tested	new		Inference		\N	\N
1197	14	TS_Inference_113	Validating Text-to-Image task type	TC_186	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model		not-tested	new		Inference		\N	\N
1198	14	TS_Inference_114	Validating Text-to-Image task type	TC_187	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU		not-tested	new		Inference		\N	\N
1199	14	TS_Inference_115	Validating Text-to-Image task type	TC_188	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path		not-tested	new		Inference		\N	\N
1200	14	TS_Inference_116	Validating Text-to-Image task type	TC_189	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded		not-tested	new		Inference		\N	\N
1201	14	TS_Inference_117	Validating Text-to-Image task type	TC_190	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Leave the input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded		not-tested	new		Inference		\N	\N
1202	14	TS_Inference_118	Validating Text-to-Image task type	TC_191	To verify the functionality of send button without passing any input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Enter text input in the message field\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please enter the input		not-tested	new		Inference		\N	\N
1203	14	TS_Inference_119	Validating Text-to-Image task type	TC_192	To verify the functionality of send button by passing an input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully (Try with different models)\n3. Enter text input and click "Send" button\n4. Verify model generates corresponding output\nConfirm output is displayed correctly in response area	The input should be passed to the model once the user clicks send button 		not-tested	new		Inference		\N	\N
1204	14	TS_Inference_120	Validating Text-to-Image task type	TC_193	To verify whether the output image is being generated for an input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Enter text input exceeding the maximum allowed length\n4. Verify input field enforces character limit\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input provided		not-tested	new		Inference		\N	\N
1205	14	TS_Inference_121	Validating Text-to-Image task type	TC_194	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in message field\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input		not-tested	new		Inference		\N	\N
1206	14	TS_Inference_122	Validating Text-to-Image task type	TC_195	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input to the text box, the input should be passed to the model		not-tested	new		Inference		\N	\N
927	12	TS_Monitor_022	\N	TC_275	Verify the system's stability and performance when running fine-tuning for 'n' instances (e.g., 10, 20, 30) in parallel, using different model and dataset combinations.	\N	\N	\N		not-tested	new		Monitor		\N	\N
928	12	TS_Monitor_023	\N	TC_276	Verify the system behavior when starting two fine-tuning processes on a single GPU with 16GB VRAM, where the first process already consumes 15GB. Ensure that the second process is terminated while the first process continues running as expected.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1210	14	TS_Inference_126	Validating concurrency	TC_199	To verify the concurency of text to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a image-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another image-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.		not-tested	new		Inference		\N	\N
1211	14	TS_Inference_127	Validating concurrency	TC_200	To verify the concurency of image to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a speech-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another speech-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.		not-tested	new		Inference		\N	\N
1212	14	TS_Inference_128	Validating concurrency	TC_201	To verify the concurency of speech to text task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a image-to-image model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another image-to-image model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.		not-tested	new		Inference		\N	\N
1213	14	TS_Inference_129	Validating concurrency	TC_202	To verify the concurency of image to image task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a text-to-image model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another text-to-image model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.		not-tested	new		Inference		\N	\N
1214	14	TS_Inference_130	Validating concurrency	TC_203	To verify the concurency of text to image task type by opening multiple tabs	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the Inference page\n2. Locate the model dropdown menu\n3. Click on the dropdown arrow/button\n4. Verify that a list of all available models appears	If the user loads a text to text model in one tab and when user tries to load another text to text model in another tab, it should say the model is already loaded.		not-tested	new		Inference		\N	\N
1058	13	TS_Inference_104	Validating Text-to-Image task type	TC_177	To verify the available number of GPU's in GUI against the terminal (nvidia-smi)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Click on any available GPU (e.g., GPU 0, GPU 1, etc.)\n4. Verify that the selected GPU gets highlighted\n5. Confirm that inference tasks run on the selected GPU	The data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
1059	13	TS_Inference_105	Validating Text-to-Image task type	TC_178	To verify the selection of GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the GPU Selection section in the left sidebar\n3. Select multiple GPUs by clicking on different GPU options (e.g., GPU 0, GPU 2, GPU 4)\n3. Verify that all selected GPUs are highlighted simultaneously\n4. Confirm that inference tasks utilize all selected GPUs	The user should be able to select any GPU		not-tested	new		Inference		\N	\N
1060	13	TS_Inference_106	Validating Text-to-Image task type	TC_179	To verify the selection of multiple GPU's listed in the GUI 	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Open terminal and run 'df -h' command to list all mount points\n2. Navigate to MiPhi Inference page\n3. Click on the mount points dropdown in GUI\n4. Compare the mount points listed in GUI against terminal output\n5. Verify that mounts points are same 	The user should be able to select any number of GPU's		not-tested	new		Inference		\N	\N
1061	13	TS_Inference_107	Validating Text-to-Image task type	TC_180	To verify the listed mount points in drop down(GUI) with mounts points in the terminal	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate and click on the mount points dropdown menu\n3. Select any available mount point from the list\n4. Verify that the selected mount point gets highlighted\n5. Confirm that the selected mount point is used for inference	The mount point data in both GUI and terminal should match		not-tested	new		Inference		\N	\N
1062	13	TS_Inference_108	Validating Text-to-Image task type	TC_181	To verify the selection of mount points in drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Click on the mount points dropdown menu\n3. Select one mount point from the list\n4. Attempt to select a second mount point\n5. Verify that the second selection replaces the first selection instead of adding to it	the user should be able select any mount point from the drop down		not-tested	new		Inference		\N	\N
1063	13	TS_Inference_109	Validating Text-to-Image task type	TC_182	To verify if user can select multiple mount points from the  drop down(GUI)	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Temperature slider control\n3. Click and drag the slider to set a value between 0 and 1\n4. Verify that slider position and input value update accordingly	The user should not be able to select more than one mount point		not-tested	new		Inference		\N	\N
1064	13	TS_Inference_110	Validating Text-to-Image task type	TC_183	To verify the functionality of Temperature slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value between 100 and 2048\n4. Verify that both slider position and input value update accordingly	The user should be able to set his desired value ranging from 0 to 1 (e.g 0.7)		not-tested	new		Inference		\N	\N
929	12	TS_Monitor_024	\N	TC_277	Verify that the Monitor page correctly handles and displays errors related to CUDA out-of-memory, insufficient SSD space, and failure to save the model due to storage limitations.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1065	13	TS_Inference_111	Validating Text-to-Image task type	TC_184	To verify the functionality of Max Tokens slider	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to MiPhi Inference page\n2. Locate the Max Tokens slider control\n3. Click and drag the slider to set a value to 0\n4. Verify that both slider position and input value updating to 0	The user should be able to set his desired value ranging from 100 to 2048 (e.g 128)		not-tested	new		Inference		\N	\N
1066	13	TS_Inference_112	Validating Text-to-Image task type	TC_185	To verify that Max Tokens slider can be set to 0	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task\n3. Click on "Text-to-Image-Model" from Available Models\n4. Click "Load Model" button without selecting any GPU\n5. Verify error message "Please select the model" is displayed	The user should not be able to set the Max Tokens to 0		not-tested	new		Inference		\N	\N
1067	13	TS_Inference_113	Validating Text-to-Image task type	TC_186	To verify the load model button without selecting any configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Infernece page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Keep GPU Selection unselected\n4. Click "Load Model" button\n5. Verify error message "Please select the GPU" is displayed	Error: Please select the model		not-tested	new		Inference		\N	\N
1068	13	TS_Inference_114	Validating Text-to-Image task type	TC_187	To verify the load model button by selecting the model and leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Click "Load Model" button\n5. Verify error message "Please select the NVME path" is displayed	Error: Please select the GPU		not-tested	new		Inference		\N	\N
1069	13	TS_Inference_115	Validating Text-to-Image task type	TC_188	To verify the load model button by selecting the model and GPU, leaving all other configurations unselected.	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU from GPU Selection\n4. Select NVME path from the configuration\n5. Verify the selected model is successfully loaded	Error: Please select the NVME path		not-tested	new		Inference		\N	\N
1070	13	TS_Inference_116	Validating Text-to-Image task type	TC_189	To verify the load model button by selecting the model, GPU and nvme path leaving all other configurations as default	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Select "Text to Image" task and "Text-to-Image-Model"\n3. Select any available GPU and NVME path\n4. Configure all remaining model parameters\n5. Verify the selected model is successfully loaded	The selected model should be loaded		not-tested	new		Inference		\N	\N
1071	13	TS_Inference_117	Validating Text-to-Image task type	TC_190	To verify the load model button by selecting all the configurations	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Leave the input text field empty\n4. Click "Send" button\n5. Verify error message "Please enter the input" is displayed	The selected model should be loaded		not-tested	new		Inference		\N	\N
1072	13	TS_Inference_118	Validating Text-to-Image task type	TC_191	To verify the functionality of send button without passing any input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Enter text input in the message field\n4. Click "Send" button\n5. Verify the model processes the input and generates a response	Error: Saying Please enter the input		not-tested	new		Inference		\N	\N
1073	13	TS_Inference_119	Validating Text-to-Image task type	TC_192	To verify the functionality of send button by passing an input to the text field	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully (Try with different models)\n3. Enter text input and click "Send" button\n4. Verify model generates corresponding output\nConfirm output is displayed correctly in response area	The input should be passed to the model once the user clicks send button 		not-tested	new		Inference		\N	\N
1074	13	TS_Inference_120	Validating Text-to-Image task type	TC_193	To verify whether the output image is being generated for an input	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Enter text input exceeding the maximum allowed length\n4. Verify input field enforces character limit\n5. Confirm error message displays the maximum allowed length	The output should be generated for the input provided		not-tested	new		Inference		\N	\N
1075	13	TS_Inference_121	Validating Text-to-Image task type	TC_194	To verify the maximum length of input that user is allowed to give	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Text model successfully\n3. Enter text input in message field\n4. Press the Enter key on keyboard\n5. Verify model processes input same as Send button click	The user should be not be allowed to give larger inputs as required. There should be some threshold value to restrict the length of input		not-tested	new		Inference		\N	\N
1076	13	TS_Inference_122	Validating Text-to-Image task type	TC_195	To verify wehther the enter key is working to pass input to the model instead of clicking on the send button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to the MiPhi Inference page\n2. Load a Text-to-Image model successfully\n3. Click "Unload Model" button\n4. Verify model is unloaded successfully\n5. Confirm system returns to initial model selection state	Once the user clicks enter key by passing an input to the text box, the input should be passed to the model		not-tested	new		Inference		\N	\N
1077	13	TS_Inference_123	Validating Text-to-Image task type	TC_196	To verify the functionality of unload model button	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and select any available model from the dropdown\n2. Wait for the model to load completely\n3. Click the refresh button in the browser tab\n4. Verify that the previous model is unloaded\n5. Confirm that a fresh Inference page is displayed with no model selected	Once the user clicks unload model button the model should be unloaded		not-tested	new		Inference		\N	\N
930	12	TS_Monitor_025	\N	TC_278	Verify that opening approximately 50 Monitor page tabs for the same GUI container port during fine-tuning does not cause performance issues, crashes, or connectivity problems, and ensure all tabs remain accessible and responsive.	\N	\N	\N		not-tested	new		Monitor		\N	\N
1078	13	TS_Inference_124	Validating Text-to-Image task type	TC_197	To verify how tab refresh works once the model is loaded	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Miphi Inference page and initiate a conversation with any text input\n2. Wait for the model to generate the output response\n3. Locate and adjust the Temperature slider to a different value\n4. Locate and adjust the Max Tokens slider to a different value\n5. Verify both sliders remain adjustable and maintain their new values	The model should be automatically unloaded and a fresh page should be displayed		not-tested	new		Inference		\N	\N
1079	13	TS_Inference_125	Validating Text-to-Image task type	TC_198	To verify that Temperature slider and Max Tokens slider can be adjusted after the 1st cycle of input and output	Should be able to reach Inference page on the specified port	Steps: (GUI)\n1. Navigate to Inference page and load a text-to-text model in the first browser tab\n2. Open a new browser tab and navigate to Inference page in same port as first tab\n3. Attempt to load another text-to-text model in the new tab\n4. Verify that warning message appears indicating a model is already loaded	The user should be able to adjust  Temperature slider and Max Tokens slider after the 1st cycle of input and output		not-tested	new		Inference		\N	\N
932	12	TS_Models_002	\N	TC_231	Verify that when a valid custom model path is provided, the GUI correctly accesses the specified directory and lists all available models present in that path.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to host system.\n\n4. A valid custom model path exists in the container (e.g., /custom_models/) and contains model directories.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter a valid custom model path (e.g., /custom_models/) in the input field.\n\n5. Click the Search button.\n\n6. Verify that available models are listed correctly in the GUI.\n\n7. SSH into the host system.\n\n8. Run the following to verify model directories:\ndocker exec -it <container_name> ls /custom_models/\n\n9. Cross-check if the listed models in the GUI match with the container’s directory contents.	1. GUI opens successfully in the browser.\n\n2. Login is successful using valid credentials.\n\n3. Navigated to the Models page without any issues.\n\n4. Able to enter the valid custom model path /custom_models/ in the input field.\n\n5. Search button works and triggers model lookup.\n\n6. Models present in /custom_models/ are displayed correctly in the GUI.\n\n7. SSH connection to the host system is established successfully.\n\n8. Command executes successfully and lists contents of /custom_models/ inside the container.\n\n9. Models listed in the GUI match exactly with the directories listed inside the container.		not-tested	new		Models		\N	\N
933	12	TS_Models_003	\N	TC_232	Verify that when no model path is provided (i.e., the path field is empty or removed), the GUI does not display any models and handles the absence of a model path gracefully without errors	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Clear the model path input field (ensure it’s empty).\n\n5. Click the Search button.\n\n6. Verify that no models are displayed in the list.	1. GUI loads successfully in the browser.\n\n2. User logs in without any authentication issues.\n\n3. Models Page opens and is fully functional.\n\n4. Model path input field is cleared successfully and remains empty.\n\n5. Search button responds without any crash or freeze.\n\n6. No models are displayed; GUI shows a message like "No path provided" or "No models found" without any errors or unexpected behavior.		not-tested	new		Models		\N	\N
934	12	TS_Models_004	\N	TC_233	 Verify navigation to the Fine-tuning page under different model path conditions\na. Without providing any model path\nb. With an invalid model path (non-existent on the host system)\nc. With a valid model path where no models are available	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to host system.\n\n4. A valid custom model path (e.g., /media/models/) exists in the container without  any model directories.\n\n5. An invalid model path (e.g., /random/path) 	Open the GUI in a browser.\nLogin using valid credentials.\nNavigate to the Models Page.\n\na. Without providing any model path\nEnsure the model path input is empty.\nClick the Search button.\nClick on the Fine-tuning tab/page.\nVerify that you are not redirected to the Fine-tuning page\n\nb. With an invalid model path\nEnter an invalid path (e.g., /invalid/path) in the model path input field.\nClick the Search button.\nObserve that no models are listed and throws error.\nClick on the Fine-tuning tab/page.\nVerify that you are not redirected to the Fine-tuning page.\n\nc. With a valid model path\nEnter a valid model path (e.g., /media/models/).\nClick the Search button.\nConfirm that no models are listed.\nClick on the Fine-tuning tab/page.\nVerify that you are not redirected to the Fine-tuning page.	GUI loads successfully in the browser.\nUser logs in without any issues.\nModels page opens properly.\n\nInput field is empty.\nNo models are listed after clicking Search.\nUser is not redirected to the Fine-tuning page.\n\nInvalid model path is accepted by input.\nNo models are displayed.\nAn appropriate error or warning is shown.\nUser is not redirected to the Fine-tuning page.\n\nValid model path is accepted by input.\nNo models are listed (if directory is empty).\nGUI handles it without error.\nUser is not redirected to the Fine-tuning page.		not-tested	new		Models		\N	\N
935	12	TS_Models_005	\N	TC_234	Verify that an invalid or non-existent model path results in no models listed and a clear error or warning in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to host system (needed to confirm invalid path).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter an invalid or non-existent model path (e.g., /invalid_model_path) in the input field.\n\n5. Click the Search button.\n\n6. Verify that no models are listed in the GUI.\n\n7. Confirm that a clear error or warning message is shown indicating the path is invalid or unavailable.\n\n8. SSH into the host system and verify the directory does not exist:\ndocker exec -it <container_name> ls /invalid_model_path  	1. GUI opens successfully in the browser.\n\n2. User logs in without any errors.\n\n3. Models page is displayed correctly.\n\n4. Invalid path is entered into the input field.\n\n5. Search button is clickable and triggers the check.\n\n6. No models are listed in the GUI.\n\n7. A clear error or warning message appears, indicating the path is invalid or unavailable.\n\n8. Command confirms that /invalid_model_path does not exist inside the container.		not-tested	new		Models		\N	\N
936	12	TS_Models_006	\N	TC_235	Verify that the custom model path remains persistent after refreshing the models page.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. A valid custom model path exists in the container (e.g., /custom_models/) with model directories.\n\n4. SSH access to host system (optional, to verify directory contents).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Enter a valid custom model path (e.g., /custom_models/) in the input field.\n\n5. Click the Search button.\n\n6. Confirm models from the custom path are listed.\n\n7. Refresh the page (F5 or browser reload).\n\n8. Verify that the custom model path is still present in the input field.\n\n9. Ensure that the models are re-listed without needing to re-enter the path.	1. GUI is accessible and loads successfully in the browser.\n\n2. User is authenticated and logged in successfully.\n\n3. Models Page is displayed without any issues.\n\n4.Custom model path is entered successfully.\n\n5. Search action is triggered without any error.\n\n6. Models present under /custom_models/ are listed accurately in the GUI.\n\n7. Page refresh completes successfully.\n\n8. The custom model path remains unchanged in the input field after the refresh.\n\n9. Models from the custom path are re-displayed without needing to re-enter the path.		not-tested	new		Models		\N	\N
938	12	TS_Models_008	\N	TC_237	Verify that clicking the eye icon opens a model preview and displays all relevant details accurately	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. At least one model is available in the default or custom path (e.g., /media/models/).\n\n4. SSH access to host system (for validation).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure a model is listed in the models list.\n\n5. Click on the eye icon corresponding to a listed model.\n\n6. Verify a preview pop-up opens showing model details (e.g., model name, path, size, etc.,).\n\n7. SSH into the host system and run:\ndocker exec -it <container_name> ls -lh /media/models/<model_name>/\nto validate file size and structure match the preview details.	GUI opens successfully in the browser.\n\nUser logs in successfully with valid credentials.\n\nModels Page loads without issues.\n\nAt least one model is visible in the models list.\n\nClicking the eye icon triggers a model preview popup.\n\nThe popup displays correct model details, including name, path, and size.\n\nSSH access and command execution are successful; file size and structure match the preview details shown in the GUI.		not-tested	new		Models		\N	\N
939	12	TS_Models_009	\N	TC_238	Verify that deleting a model from the GUI removes it from the list and confirms deletion on the host system.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. At least one model is available in the default or custom path (e.g., /media/models/).\n\n4. SSH access to host system.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Identify a model listed under the model path.\n\n5. Click the delete icon for that model.\n\n6. Confirm the deletion in the prompt.\n\n10. Verify that the model is removed from the list in the GUI.\n\n11. SSH into the host system and run:\ndocker exec -it <container_name> ls /media/models/\n\n12. Ensure that the deleted model directory no longer exists.	GUI opens successfully in the browser.\n\nUser logs in successfully with valid credentials.\n\nModels Page loads correctly.\n\nAt least one model is listed under the specified model path.\n\nClicking the delete icon initiates a deletion prompt.\n\nUpon confirmation, the deletion process begins.\n\nThe model is removed from the list in the GUI.\n\nSSH access to the host system is successful.\n\nRunning the ls command confirms that the deleted model directory no longer exists in the specified path.		not-tested	new		Models		\N	\N
940	12	TS_Models_010	\N	TC_239	Verify that the search correctly filters available models and shows no results for non-existent ones.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model path is provided in the GUI with some models available in it (e.g., /media/models/).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure the model path is set to a valid directory where models exist.\n\n5. In the Search field, enter a valid model name or partial name of an existing model.\n\n6. Verify that the correct models matching the search criteria are listed in the GUI.\n\n7. In the Search field, enter a non-existent model name or invalid search term.\n\n8. Verify that no models are listed and the GUI shows a message like "No models found."\n\n9. SSH into the host system and confirm that the non-existent model does not exist in the model path.\ndocker exec -it <container_name> ls /media/models/	GUI opens successfully in the browser.\n\nLogin completes successfully with valid credentials.\n\nModels Page loads without issues.\n\nValid model path is recognized and models are listed.\n\nEntering a valid model name or partial name filters the list accordingly.\n\nOnly models matching the search criteria are displayed.\n\nEntering a non-existent or invalid model name clears the list.\n\nGUI displays a message like “No models found.”\n\nSSH command confirms that the non-existent model is not present in the specified directory.		not-tested	new		Models		\N	\N
941	12	TS_Models_011	\N	TC_240	Verify that the search is disabled when no models are available, either due to an empty or invalid model path.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. The model path is empty, or\nThe model path is invalid (does not exist or points to a non-existent directory).	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Ensure that the model path field is empty or points to an invalid directory (e.g., /nonexistent/path/).\n\n5. Verify that the Search button is disabled or unclickable.\n\n6. If the model path is empty, verify that no models are displayed in the list.\n\n7. If the model path is invalid, verify that no models are listed, and the search functionality remains disabled.\n\n8. SSH into the host system to confirm that the model path is indeed empty or points to an invalid location.\ndocker exec -it <container_name> ls /path/to/models/\n\n9. Verify that no models exist in the model path.	GUI opens successfully in the browser.\n\nLogin completes successfully using valid credentials.\n\nModels Page loads correctly.\n\nThe model path field is empty or contains an invalid path (e.g., /nonexistent/path/).\n\nThe Search button is disabled or unclickable.\n\nIf the path is empty, no models are shown in the list.\n\nIf the path is invalid, no models are listed, and the search remains disabled or results in an error message.\n\nSSH confirms that the provided path does not exist on the host.\n\nNo model directories or files are found in the specified invalid path.		not-tested	new		Models		\N	\N
942	12	TS_Models_012	\N	TC_241	Verify that uploading a model ZIP file completes successfully and the extracted model appears both in the GUI and on the host system.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model ZIP file is available for upload.\n\n5. The models path in the GUI is set to a valid directory where the model will be uploaded.\n\n6. Ensure there is enough disk space to upload the model.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select a valid model ZIP file from your system.\n\n6. Wait for the upload process to complete.\n\n7. Verify that the upload completes successfully, and the progress bar shows 100%.\n\n8. Once the upload is complete, ensure the model appears in the Models List on the GUI.\n\n9. SSH into the host system and navigate to the model path directory.\ndocker exec -it <container_name> ls /path/to/models/\n\n10. Verify that the model folder extracted from the ZIP file exists in the directory on the host system.	GUI loads successfully in the browser.\n\nLogin completes successfully with valid credentials.\n\nModels Page is displayed without errors.\n\nUpload Model dialog opens upon clicking the Upload button.\n\nA valid model ZIP file is successfully selected from the local system.\n\nUpload process begins and progresses without interruption.\n\nUpload completes successfully, and the progress bar reaches 100%.\n\nThe newly uploaded model appears in the Models List in the GUI.\n\nSSH into the host confirms access to the container and model path.\n\nThe extracted model folder exists under the model path in the host system.		not-tested	new		Models		\N	\N
943	12	\N	\N	TC_242	Verify the behavior of the GUI when navigating between pages or refreshing the browser tab while a file upload is in progress.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. SSH access to the host system.\n\n4. A valid model ZIP file is available for upload.\n\n5. The models path in the GUI is set to a valid directory where the model will be uploaded.\n\n6. Ensure there is enough disk space to upload the model.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Click the Upload Model button.\n\n5. Select a valid model ZIP file to upload.\n\n6. As the upload progresses (before it completes), do one of the following:\nNavigate to a different page (e.g., Datasets Page or Monitor Page).\nOr refresh the browser tab.\n\n7. Observe the behavior of the GUI and the ongoing upload.\n\n8. Check if the upload resumes, restarts.	GUI opens and login is successful.\n\nModels Page loads correctly.\n\nModel ZIP file is accepted and upload starts.\n\nDuring navigation to another page or refreshing the tab:\nGUI should handle the interruption gracefully without crashing.\nUpload should either resume automatically or restart cleanly if needed.		not-tested	new		Models		\N	\N
931	12	TS_Models_001	\N	TC_230	Verify that the default model path is correctly displayed in the GUI, ensure that the path exists within the GUI container on the host system, and confirm that all available models within that path are listed correctly in the GUI.	1. GUI container is running on the assigned port.\n\n2. Login credentials are available.\n\n3. /media/models/ path exists inside the container  with at least one model.\n\n4. SSH access to the host system is available.	1. Open the GUI in a browser.\n\n2. Login using valid credentials.\n\n3. Navigate to the Models Page.\n\n4. Check if the default path /media/models/ is shown.\n\n5. Verify if models are listed under this path in the GUI.\n\n6. SSH into the host system.\n\n7. Run the following to check inside the container:\ndocker exec -it <container_name> ls /media/models/\n\n8. Confirm the models listed in the GUI match those in the container.	1. Able to open the GUI in the browser.\n\n2. Successfully logged into the GUI.\n\n3. Navigated to the Models page without issues.\n\n4. Default model path /media/models/ is displayed correctly.\n\n5. Available models under /media/models/ are listed in the GUI.\n\n6. SSH connection to the host system is successful.\n\n7. Container lists contents of /media/models/ without errors.\n\n8. Models listed in the GUI match the contents of /media/models/ inside the container.	yo this is me testings	fail	in-progress	hi me testing the commentss bluhhhh\n	Models	johaan	\N	\N
\.


--
-- TOC entry 5245 (class 0 OID 24616)
-- Dependencies: 219
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (emp_id, username, password, email, role) FROM stdin;
1	admin	$2b$10$IUiJPzE0LkekmpiDIP6lVeVVrycMBg4hD7gLvUXMzpJPj.qMo9lHK	admin123@miphi.com	admin
10	johaan	$2b$10$2MjQIHiBHplVA6mYkxFlkuTBbmY47R9YVQp7m5tvkktSGpOTQ7Jpi	johaan1835@gmail.com	write
27	maria	$2b$10$lyzncol19UIdAO1Pg/1QReRH7/0ja/fZ7WmOREDV7C3y2mFif5LEy	johaan1835@gmail.com	write
28	john	$2b$10$oScGBJ73YgILfn/8L4DHjuALOFDU90mQXDAnIXD.HazNFbEPS5CcO	johaan1835@gmail.com	write
29	kripa	$2b$10$duOVtNe4TnuiY68DbQkGT.0/Kp0c95Fdvrbw02bfbAuDlEB7Lo16W	johaan1835@gmail.com	read
30	joel	$2b$10$QCKn0LVZ8DDELWa9HurR1OVuoUwvLRG6xVXzOM2Dae4M.RF0PPZtC	johaan1835@gmail.com	write
\.


--
-- TOC entry 5270 (class 0 OID 0)
-- Dependencies: 227
-- Name: bugs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.bugs_id_seq', 21, true);


--
-- TOC entry 5271 (class 0 OID 0)
-- Dependencies: 229
-- Name: master_table_s_no_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.master_table_s_no_seq', 596, true);


--
-- TOC entry 5272 (class 0 OID 0)
-- Dependencies: 222
-- Name: master_table_s_no_seq1; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.master_table_s_no_seq1', 563, true);


--
-- TOC entry 5273 (class 0 OID 0)
-- Dependencies: 230
-- Name: pending_requests_s_no_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.pending_requests_s_no_seq', 14, true);


--
-- TOC entry 5274 (class 0 OID 0)
-- Dependencies: 223
-- Name: testplan_registry_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.testplan_registry_id_seq', 14, true);


--
-- TOC entry 5275 (class 0 OID 0)
-- Dependencies: 225
-- Name: testplans_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.testplans_id_seq', 1214, true);


--
-- TOC entry 5276 (class 0 OID 0)
-- Dependencies: 220
-- Name: users_emp_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_emp_id_seq', 30, true);


--
-- TOC entry 5089 (class 2606 OID 25184)
-- Name: bugs bugs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bugs
    ADD CONSTRAINT bugs_pkey PRIMARY KEY (id);


--
-- TOC entry 5079 (class 2606 OID 24667)
-- Name: master_table master_table_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_table
    ADD CONSTRAINT master_table_pkey PRIMARY KEY (s_no);


--
-- TOC entry 5081 (class 2606 OID 24669)
-- Name: master_table master_table_testcase_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_table
    ADD CONSTRAINT master_table_testcase_id_key UNIQUE (testcase_id);


--
-- TOC entry 5091 (class 2606 OID 25568)
-- Name: pending_requests pending_requests_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pending_requests
    ADD CONSTRAINT pending_requests_pkey PRIMARY KEY (s_no);


--
-- TOC entry 5093 (class 2606 OID 25570)
-- Name: pending_requests pending_requests_test_scenario_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pending_requests
    ADD CONSTRAINT pending_requests_test_scenario_id_key UNIQUE (test_scenario_id);


--
-- TOC entry 5095 (class 2606 OID 25572)
-- Name: pending_requests pending_requests_testcase_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.pending_requests
    ADD CONSTRAINT pending_requests_testcase_id_key UNIQUE (testcase_id);


--
-- TOC entry 5085 (class 2606 OID 24985)
-- Name: testplan_registry testplan_registry_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.testplan_registry
    ADD CONSTRAINT testplan_registry_pkey PRIMARY KEY (id);


--
-- TOC entry 5087 (class 2606 OID 24994)
-- Name: testplans testplans_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.testplans
    ADD CONSTRAINT testplans_pkey PRIMARY KEY (id);


--
-- TOC entry 5083 (class 2606 OID 24955)
-- Name: master_table unique_test_scenario_id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.master_table
    ADD CONSTRAINT unique_test_scenario_id UNIQUE (test_scenario_id);


--
-- TOC entry 5075 (class 2606 OID 24623)
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (emp_id);


--
-- TOC entry 5077 (class 2606 OID 24625)
-- Name: users users_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_username_key UNIQUE (username);


--
-- TOC entry 5098 (class 2620 OID 25605)
-- Name: master_table trg_generate_master_ids; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_generate_master_ids BEFORE INSERT ON public.master_table FOR EACH ROW EXECUTE FUNCTION public.generate_master_ids();


--
-- TOC entry 5099 (class 2620 OID 25606)
-- Name: pending_requests trg_generate_pending_ids; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trg_generate_pending_ids BEFORE INSERT ON public.pending_requests FOR EACH ROW EXECUTE FUNCTION public.generate_pending_ids();


--
-- TOC entry 5096 (class 2606 OID 25185)
-- Name: testplans testplans_bug_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.testplans
    ADD CONSTRAINT testplans_bug_id_fkey FOREIGN KEY (bug_id) REFERENCES public.bugs(id);


--
-- TOC entry 5097 (class 2606 OID 24995)
-- Name: testplans testplans_registry_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.testplans
    ADD CONSTRAINT testplans_registry_id_fkey FOREIGN KEY (registry_id) REFERENCES public.testplan_registry(id) ON DELETE CASCADE;


-- Completed on 2025-06-18 17:43:10

--
-- PostgreSQL database dump complete
--

